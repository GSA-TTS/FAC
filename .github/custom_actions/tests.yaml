name: Tests

on:
  workflow_call:

jobs:
  linting:
    runs-on: ubuntu-latest
    env:
      ENV: TESTING
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"
      - name: Install linters
        working-directory: ./backend
        run: |
          python -m pip install --upgrade pip
          pip install -r dev-requirements.txt
      - name: Lint with flake8
        working-directory: ./backend
        run: flake8 . --count --max-complexity=10  --show-source --statistics
      - name: Check formatting with black
        working-directory: ./backend
        run: black --check .
      - name: Run bandit
        working-directory: ./backend
        run: bandit -c pyproject.toml -r .
      - name: Run type checking
        working-directory: ./backend
        run: mypy .

  # test:
  #   runs-on: ubuntu-latest
  #   env:
  #     ENV: TESTING
  #   steps:
  #     - uses: actions/checkout@v2
  #     - name: Start services
  #       working-directory: ./backend
  #       run: docker-compose up -d
  #     - name: Run Django test suite
  #       working-directory: ./backend
  #       run: docker-compose run web bash -c 'coverage run --source="." manage.py test && coverage report -m --fail-under=99'
  #     - name: Run Django migrations for pa11y tests
  #       working-directory: ./backend
  #       run: docker-compose run web python manage.py migrate
  #     - name: Create superuser for admin access
  #       working-directory: ./backend
  #       run: echo "from django.contrib.auth import get_user_model; User = get_user_model(); User.objects.create_superuser('a', 'a@a.com', 'a')" | docker-compose run web python manage.py shell
  #     - name: Install pa11y-ci
  #       working-directory: ./pa11y_tests
  #       run: npm install
  #     - name: Run pa11y-ci against admin
  #       working-directory: ./pa11y_tests
  #       run: npm run test:admin