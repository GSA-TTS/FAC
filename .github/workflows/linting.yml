---
name: Lint Files
on:
  workflow_call:

jobs:
  linting:
    runs-on: ubuntu-latest
    env:
      ENV: TESTING
      SECRET_KEY: secrets.SECRET_KEY
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Restore npm cache
        uses: actions/cache@v3
        id: cache-npm
        with:
          path: ~/.npm
          key: fac-build-npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            fac-build-npm-
            fac-build-

      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Restore pip cache
        uses: actions/cache@v3
        id: cache-pip
        with:
          path: |
            ~/.cache/pip
            /opt/hostedtoolcache/Python/
          key: fac-build-pip-${{ hashFiles('**/requirements.txt') }}-${{ hashFiles('**/dev-requirements.txt') }}
          restore-keys: |
            fac-build-pip-${{ hashFiles('**/requirements.txt') }}-
            fac-build-pip-
            fac-build-

      - name: Install linters
        working-directory: ./backend
        run: |
          python -m pip install --upgrade pip
          pip install -r dev-requirements.txt

      - name: Lint with flake8
        working-directory: ./backend
        run: flake8 . --count --show-source --statistics

      - name: Check formatting with black
        working-directory: ./backend
        run: black --check .

      - name: Run bandit
        working-directory: ./backend
        run: bandit -c pyproject.toml -r .

      - name: Run type checking
        working-directory: ./backend
        run: mypy .

      - name: Run HTML template linting
        working-directory: ./backend
        run: djlint --lint .

  frontend-linting:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Restore npm cache
        uses: actions/cache@v3
        id: cache-npm
        with:
          path: ~/.npm
          key: fac-build-npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            fac-build-npm-
            fac-build-

      - uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install npm packages
        working-directory: ./backend
        run: npm ci

      - name: Lint JS & SCSS
        working-directory: ./backend
        run: npm run check-all

  super-linter:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: read
      statuses: write
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Lint Code Base
        uses: super-linter/super-linter/slim@v5
        env:
          VALIDATE_ALL_CODEBASE: false
          MULTI_STATUS: true
          DEFAULT_BRANCH: main
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  validate-terraform:
    uses: ./.github/workflows/terraform-lint.yml
