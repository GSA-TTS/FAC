---
name: Pull Third Party Containers, Scan, and Publish to GHCR
on:
  workflow_dispatch:
  schedule:
    - cron: '0 8 * * 0'

jobs:
  pull-and-scan:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    env:
      GH_REPO: asteel-gsa/fac
    strategy:
      fail-fast: false
      matrix:
        image:
          - name: postgrest/postgrest:latest
            short-name: postgrest
          - name: ghcr.io/gsa-tts/clamav-rest/clamav:latest
            short-name: clamav

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: Pull Docker Image
        run: docker pull ${{ matrix.image.name }}

      - name: Scan Image
        run: docker run aquasec/trivy:latest  image --timeout 5m --scanners vuln --exit-code 1 --severity CRITICAL,HIGH  ${{ matrix.image.name }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Tag Image
        run: |
          docker tag ${{ matrix.image.name }} ghcr.io/${{ env.GH_REPO }}/${{ matrix.image.short-name }}:latest

      - name: Setup SSH passphrase and add DCT Signer
        working-directory: ./backend
        env:
          SSH_PASSPHRASE: ${{secrets.DCT_ROOT_PASS}}
          SSH_PRIVATE_KEY: ${{secrets.RSA_KEY}}
        run: |
          echo "$SSH_PRIVATE_KEY" > private.pem
          chmod 600 private.pem
          openssl rsa -in "private.pem" -pubout > "public.pem"
          # docker trust sign ghcr.io/${{ env.GH_REPO }}/${{ matrix.image.short-name }}:latest <<< $SSH_PASSPHRASE | <<< $SSH_PASSPHRASE

      - name: Add signer
        working-directory: ./backend
        env:
          SSH_PASSPHRASE: ${{secrets.DCT_ROOT_PASS}}
        shell: bash
        run: |
          docker trust signer add --key "public.pem" "fac-team" "${{ env.GH_REPO }}/${{ matrix.image.short-name }}"

      - name: Load the private key onto Docker trust store
        env:
          SSH_PASSPHRASE: ${{secrets.DCT_ROOT_PASS}}
        working-directory: ./backend
        run: |
          docker trust key load --name "codesign" "private.pem"
          GREEN='\033[0;32m'
          PURPLE='\033[0;35m'
          NC='\033[0m' # No Color
          echo -e "Confirm \"${GREEN}Successfully imported key from private.pem${NC}\"" \
          "\nIf successful, IGNORE  \"${PURPLE}failed to import key to store: ...${NC}\" (due to unused content within private key)"
        shell: bash

      # - name: Sign Image
      #   working-directory: ./backend
      #   env:
      #     SSH_PASSPHRASE: ${{secrets.DCT_ROOT_PASS}}
      #   run: docker trust sign ghcr.io/${{ env.GH_REPO }}/${{ matrix.image.short-name }}:latest <<< $SSH_PASSPHRASE | <<< $SSH_PASSPHRASE

      # - name: Add signer
      #   working-directory: ./backend
      #   shell: bash
      #   env:
      #     SSH_PASSPHRASE: ${{secrets.DCT_ROOT_PASS}}
      #   run: |
      #     docker trust signer add --key public.pem fac ghcr.io/${{ env.GH_REPO }}/${{ matrix.image.short-name }} <<< $SSH_PASSPHRASE | <<< $SSH_PASSPHRASE

      # - name: Load the private key onto Docker trust store
      #   working-directory: ./backend
      #   shell: bash
      #   env:
      #     SSH_PASSPHRASE: ${{secrets.DCT_ROOT_PASS}}
      #   run: |
      #     docker trust key load --name fac private.pem <<< $SSH_PASSPHRASE | <<< $SSH_PASSPHRASE

      - name: Push Image
        env:
          SSH_PASSPHRASE: ${{secrets.DCT_ROOT_PASS}}
        run: |
          echo "DOCKER_CONTENT_TRUST=1" >> $GITHUB_ENV
          docker push --all-tags ghcr.io/${{ env.GH_REPO }}/${{ matrix.image.short-name }} <<< $SSH_PASSPHRASE

