---
name: Deploy to cloud.gov
on:
  push:
    branches:
      - main
      - prod
    tags:
      - v1.*
  pull_request:
    branches:
      - main
      - prod
  workflow_dispatch: null
jobs:
  test_and_lint:
    uses: ./.github/workflows/test.yml

  deploy-infrastructure-dev:
    name: Deploy infrastructure (dev)
    if: github.event.ref == 'refs/heads/main'
    uses: ./.github/workflows/terraform-apply-env.yml
    with:
      environment: "dev"
    secrets: inherit

  deploy-infrastructure-staging:
    name: Deploy infrastructure (staging)
    if: github.event.ref == 'refs/heads/prod'
    uses: ./.github/workflows/terraform-apply-env.yml
    with:
      environment: "staging"
    secrets: inherit

  deploy-infrastructure-production:
    name: Deploy infrastructure (production)
    if: github.event.ref == 'refs/tag/v1.*'
    uses: ./.github/workflows/terraform-apply-env.yml
    with:
      environment: "production"
    secrets: inherit

  deploy-dev:
    name: Deploy to dev
    if: github.event.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs:
      - linting
      - test
      - deploy-infrastructure-dev
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"
      - name: Install npm dependencies
        working-directory: ./backend
        run: npm install
      - name: Compile JS/CSS assets
        working-directory: ./backend
        run: npm run build
      - name: Update service keys
        uses: 18f/cg-deploy-action@main
        env:
          SAM_API_KEY: ${{ secrets.SAM_API_KEY }}
          DJANGO_SECRET_LOGIN_KEY: $${{ secrets.DJANGO_SECRET_LOGIN_KEY }}
        with:
          cf_username: ${{ secrets.CF_USERNAME_DEV }}
          cf_password: ${{ secrets.CF_PASSWORD_DEV }}
          cf_org: gsa-tts-oros-fac
          cf_space: dev
          full_command: cf update-user-provided-service fac-key-service -p
            "{\"SAM_API_KEY\":\"$SAM_API_KEY\",
            \"DJANGO_SECRET_LOGIN_KEY\":\"$DJANGO_SECRET_LOGIN_KEY\"}"
      - name: Deploy to cloud.gov
        uses: 18f/cg-deploy-action@main
        with:
          cf_username: ${{ secrets.CF_USERNAME_DEV }}
          cf_password: ${{ secrets.CF_PASSWORD_DEV }}
          cf_org: gsa-tts-oros-fac
          cf_space: dev
          push_arguments: -f backend/manifests/manifest-dev.yml

  deploy-staging:
    name: Deploy to staging
    if: github.event.ref == 'refs/heads/prod'
    runs-on: ubuntu-latest
    needs:
      - linting
      - test
      - deploy-infrastructure-staging
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"
      - name: Install npm dependencies
        working-directory: ./backend
        run: npm install
      - name: Compile JS/CSS assets
        working-directory: ./backend
        run: npm run build
      - name: Update service keys
        uses: 18f/cg-deploy-action@main
        env:
          SAM_API_KEY: ${{ secrets.SAM_API_KEY }}
          DJANGO_SECRET_LOGIN_KEY: $${{ secrets.DJANGO_SECRET_LOGIN_KEY }}
        with:
          cf_username: ${{ secrets.CF_USERNAME_STAGING }}
          cf_password: ${{ secrets.CF_PASSWORD_STAGING }}
          cf_org: gsa-tts-oros-fac
          cf_space: staging
          full_command: cf update-user-provided-service fac-key-service -p
            "{\"SAM_API_KEY\":\"$SAM_API_KEY\",
            \"DJANGO_SECRET_LOGIN_KEY\":\"$DJANGO_SECRET_LOGIN_KEY\"}"
      - name: Deploy to cloud.gov
        uses: 18f/cg-deploy-action@main
        with:
          cf_username: ${{ secrets.CF_USERNAME_STAGING }}
          cf_password: ${{ secrets.CF_PASSWORD_STAGING }}
          cf_org: gsa-tts-oros-fac
          cf_space: staging
          push_arguments: -f backend/manifests/manifest-staging.yml

  deploy-production:
    name: Deploy to production
    if: github.event.ref == 'refs/tag/v1.*'
    runs-on: ubuntu-latest
    needs:
      - linting
      - test
      - deploy-infrastructure-production
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"
      - name: Install npm dependencies
        working-directory: ./backend
        run: npm install
      - name: Compile JS/CSS assets
        working-directory: ./backend
        run: npm run build
      - name: Update service keys
        uses: 18f/cg-deploy-action@main
        env:
          SAM_API_KEY: ${{ secrets.SAM_API_KEY }}
          DJANGO_SECRET_LOGIN_KEY: $${{ secrets.DJANGO_SECRET_LOGIN_KEY }}
        with:
          cf_username: ${{ secrets.CF_USERNAME_PROD }}
          cf_password: ${{ secrets.CF_PASSWORD_PROD }}
          cf_org: gsa-tts-oros-fac
          cf_space: production
          full_command: cf update-user-provided-service fac-key-service -p
            "{\"SAM_API_KEY\":\"$SAM_API_KEY\",
            \"DJANGO_SECRET_LOGIN_KEY\":\"$DJANGO_SECRET_LOGIN_KEY\"}"
      - name: Deploy to cloud.gov
        uses: 18f/cg-deploy-action@main
        with:
          cf_username: ${{ secrets.CF_USERNAME_PROD }}
          cf_password: ${{ secrets.CF_PASSWORD_PROD }}
          cf_org: gsa-tts-oros-fac
          cf_space: production
          push_arguments: -f backend/manifests/manifest-production.yml
