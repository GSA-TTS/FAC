---
name: Run Django and A11y Tests
on:
  workflow_call:
  workflow_dispatch:

jobs:
  django-test:
    permissions: write-all
    runs-on: ubuntu-latest
    env:
      ENV: TESTING
      SAM_API_KEY: ${{ secrets.SAM_API_KEY }}
      DJANGO_BASE_URL: "http://localhost:8000"
      DJANGO_SECRET_LOGIN_KEY: ${{ secrets.DJANGO_SECRET_LOGIN_KEY }}
      LOGIN_CLIENT_ID: ${{ secrets.LOGIN_CLIENT_ID }}
      SECRET_KEY: ${{ secrets.SECRET_KEY }}
      ALLOWED_HOSTS: "0.0.0.0 127.0.0.1 localhost"
      DISABLE_AUTH: False
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Create .env
        working-directory: ./backend
        run: touch .env

      - name: Start services
        working-directory: ./backend
        run: docker compose -f docker-compose.yml up -d

      - name: Load historical data
        working-directory: ./backend
        run: docker compose run web ./load_data.sh

      - name: Run Django test suite
        working-directory: ./backend
        run: docker compose -f docker-compose.yml run web bash -c 'coverage run --parallel-mode --concurrency=multiprocessing manage.py test --parallel && coverage combine && coverage report -m --fail-under=85 && coverage xml -o coverage.xml'

      - name: Copy Coverage From Docker Container
        run: |
          docker cp backend-web-1:/src/coverage.xml ./coverage.xml
          pwd
          ls -al | grep 'coverage'

      - name: Produce the coverage report
        uses: insightsengineering/coverage-action@v2
        if: github.event_name == 'pull_request'
        with:
          # Path to the Cobertura XML report.
          path: ./coverage.xml
          # Minimum total coverage, if you want to the
          # workflow to enforce it as a standard.
          # This has no effect if the `fail` arg is set to `false`.
          threshold: 85
          # Fail the workflow if the minimum code coverage
          # reuqirements are not satisfied.
          fail: false
          # Publish the rendered output as a PR comment
          publish: true
          # Create a coverage diff report.
          diff: true
          # Branch to diff against.
          # Compare the current coverage to the coverage
          # determined on this branch.
          diff-branch: main
          # This is where the coverage reports for the
          # `diff-branch` are stored.
          # Branch is created if it doesn't already exist'.
          # diff-storage: _xml_coverage_reports
          # A custom title that can be added to the code
          # coverage summary in the PR comment.
          coverage-summary-title: "Code Coverage Summary"

  # a11y-testing:
  #   runs-on: ubuntu-latest
  #   env:
  #     ENV: TESTING
  #     SAM_API_KEY: ${{ secrets.SAM_API_KEY }}
  #     DJANGO_BASE_URL: "http://localhost:8000"
  #     DJANGO_SECRET_LOGIN_KEY: ${{ secrets.DJANGO_SECRET_LOGIN_KEY }}
  #     LOGIN_CLIENT_ID: ${{ secrets.LOGIN_CLIENT_ID }}
  #     SECRET_KEY: ${{ secrets.SECRET_KEY }}
  #     ALLOWED_HOSTS: "0.0.0.0 127.0.0.1 localhost"
  #     DISABLE_AUTH: True
  #   steps:
  #     - uses: actions/checkout@v4
  #     - uses: actions/setup-node@v4
  #       with:
  #         node-version: 18
  #     - name: Start services
  #       working-directory: ./backend
  #       run: |
  #         touch .env
  #         docker compose -f docker-compose.yml up -d
  #     - name: Run A11y tests
  #       working-directory: ./backend
  #       run: |
  #         sudo npm ci
  #         npx cypress run --spec "cypress/e2e/accessibility.cy.js"
