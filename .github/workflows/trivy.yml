---
name: Trivy Scan
on:
  workflow_dispatch:
    inputs:
      docker-name:
        required: true
        type: string
        default: fac
      work-dir:
        required: true
        type: string
        default: ./backend
  workflow_call:
    inputs:
      docker-name:
        required: true
        type: string
        default: fac
      work-dir:
        required: true
        type: string
        default: ./backend
  push:
    branches:
      - main
      - test

permissions:
  contents: read

env:
  DOCKER_NAME: ${{ inputs.docker-name }}
  WORKING_DIRECTORY: ${{ inputs.work-dir }}

jobs:
  trivy:
    needs: [scan-third-party]
    permissions:
      contents: read
      security-events: write
      actions: read
    name: Trivy Scan
    runs-on: ubuntu-latest
    env:
      DOCKER_NAME: fac
      WORKING_DIRECTORY: ./backend
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Get Date
        shell: bash
        id: date
        run: |
          echo "date=$(date +%Y%m%d%H%M%S)" >> $GITHUB_OUTPUT

      - name: Build Container
        working-directory: ${{ env.WORKING_DIRECTORY }}
        run: docker build -t ${{ env.DOCKER_NAME }}:${{ steps.date.outputs.date }} .

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: '${{ env.DOCKER_NAME }}:${{ steps.date.outputs.date }}'
          scan-type: 'image'
          hide-progress: false
          format: 'sarif'
          output: 'scan-results.sarif'
          exit-code: '1'
          ignore-unfixed: true

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: 'scan-results.sarif'

  scan-third-party:
    permissions:
      contents: read
      security-events: write
      actions: read
    name: Trivy Scan Third Party Images
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        image:
          - name: ghcr.io/asteel-gsa/fac/postgrest:latest
            short-name: postgrest
          - name: ghcr.io/asteel-gsa/fac/swagger:latest
            short-name: clamav
    steps:
      - name: Pull Third Party Docker Images
        run: docker pull ${{ matrix.image.name }}

      - name: Run Trivy vulnerability scanner on Third Party Images
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: '${{ matrix.image.name }}'
          scan-type: 'image'
          hide-progress: false
          format: 'sarif'
          output: 'scan-results.sarif'
          exit-code: '1'
          ignore-unfixed: true

      - name: Upload Trivy scan results to GitHub Security tab of Third Party Images
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: 'scan-results.sarif'

