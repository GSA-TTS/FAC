---
name: Run Django and A11y Tests
on:
  workflow_dispatch:
  workflow_call:

jobs:
  django-test:
    permissions: write-all
    runs-on: ubuntu-latest
    env:
      ENV: TESTING
      SAM_API_KEY: ${{ secrets.SAM_API_KEY }}
      DJANGO_BASE_URL: 'http://localhost:8000'
      DJANGO_SECRET_LOGIN_KEY: ${{ secrets.DJANGO_SECRET_LOGIN_KEY }}
      LOGIN_CLIENT_ID: ${{ secrets.LOGIN_CLIENT_ID }}
      SECRET_KEY: ${{ secrets.SECRET_KEY }}
      ALLOWED_HOSTS: '0.0.0.0 127.0.0.1 localhost'
      DISABLE_AUTH: False
      PGRST_JWT_SECRET: ${{ secrets.PGRST_JWT_SECRET }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Create .env file
        working-directory: ./backend
        run: touch .env

      - name: Start Services
        working-directory: ./backend
        run: docker compose -f docker-compose-web.yml up -d

      - name: Load historical data
        working-directory: ./backend
        run: docker compose -f docker-compose-web.yml run web ./load_data.sh

      - name: Run Django test suite
        working-directory: ./backend
        run: |
          docker compose -f docker-compose-web.yml run web bash -c 'coverage run --parallel-mode --concurrency=multiprocessing manage.py test --parallel && coverage combine && coverage report -m --fail-under=90 && coverage xml -o coverage.xml'

      - name: Copy Coverage From Docker Container
        run: |
          docker cp backend-web-1:/src/coverage.xml ./coverage.xml
          pwd
          ls -al | grep 'coverage'

      - name: Publish Coverage Report to Pull Request
        uses: 5monkeys/cobertura-action@master
        with:
          path: ./coverage.xml
          minimum_coverage: 90
          skip_covered: true # Set to true to remove 100% covered from report
          fail_below_threshold: false # Fails the action if 90% threshold is not met
          show_missing: true
          repo_token: ${{ secrets.GITHUB_TOKEN }}

  a11y-testing:
    runs-on: ubuntu-latest
    env:
      ENV: TESTING
      SAM_API_KEY: ${{ secrets.SAM_API_KEY }}
      DJANGO_BASE_URL: 'http://localhost:8000'
      DJANGO_SECRET_LOGIN_KEY: ${{ secrets.DJANGO_SECRET_LOGIN_KEY }}
      LOGIN_CLIENT_ID: ${{ secrets.LOGIN_CLIENT_ID }}
      SECRET_KEY: ${{ secrets.SECRET_KEY }}
      ALLOWED_HOSTS: '0.0.0.0 127.0.0.1 localhost'
      DISABLE_AUTH: True
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v3
        with:
          node-version: 16
      - name: Start services
        working-directory: ./backend
        run: |
          touch .env
          docker compose -f docker-compose.yml up -d
      - name: Run Lighthouse CI and pa11y
        working-directory: ./backend
        run: |
          sudo npm ci
          npm run test:a11y:lighthouse
          npm run test:a11y:pa11y

  regression-testing:
    runs-on: ubuntu-latest
    environment: dev
    env:
      # Container Related ENV
      ENV: TESTING
      SAM_API_KEY: ${{ secrets.SAM_API_KEY }}
      DJANGO_BASE_URL: 'http://localhost:8000'
      DJANGO_SECRET_LOGIN_KEY: ${{ secrets.DJANGO_SECRET_LOGIN_KEY }}
      LOGIN_CLIENT_ID: ${{ secrets.LOGIN_CLIENT_ID }}
      SECRET_KEY: ${{ secrets.SECRET_KEY }}
      ALLOWED_HOSTS: '0.0.0.0 127.0.0.1 localhost'
      PGRST_JWT_SECRET: ${{ secrets.PGRST_JWT_SECRET }}
      # Cypress Related ENV
      CYPRESS_API_GOV_KEY: ${{ secrets.CYPRESS_API_GOV_KEY }}
      CYPRESS_API_GOV_URL: ${{ secrets.CYPRESS_API_GOV_URL }}
      CYPRESS_BASE_URL: 'http://localhost:8000'
      CYPRESS_LOGIN_TEST_EMAIL: ${{ secrets.CYPRESS_LOGIN_TEST_EMAIL }}
      CYPRESS_LOGIN_TEST_PASSWORD: ${{ secrets.CYPRESS_LOGIN_TEST_PASSWORD }}
      CYPRESS_LOGIN_TEST_OTP_SECRET: ${{ secrets.CYPRESS_LOGIN_TEST_OTP_SECRET }}
      CYPRESS_LOGIN_TEST_EMAIL_AUDITEE: ${{ secrets.CYPRESS_LOGIN_TEST_EMAIL_AUDITEE }}
      CYPRESS_LOGIN_TEST_PASSWORD_AUDITEE: ${{ secrets.CYPRESS_LOGIN_TEST_PASSWORD_AUDITEE }}
      CYPRESS_LOGIN_TEST_OTP_SECRET_AUDITEE: ${{ secrets.CYPRESS_LOGIN_TEST_OTP_SECRET_AUDITEE }}
      DISABLE_AUTH: False
      # useful for debugging but otherwise complete overwhelm
      # DEBUG: cypress:*
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Start Services
        working-directory: ./backend
        run: |
          touch .env
          docker compose -f docker-compose-web.yml up -d

      - name: Install npm dependencies
        working-directory: ./backend
        run: sudo npm install

      - name: Remove node_modules/ so cypress-io/github-action@v6 works
        run: sudo rm -rf /home/runner/work/FAC/FAC/backend/node_modules/

      - name: Run Cypress full submission test
        uses: Wandalen/wretry.action@master
        with:
          action: cypress-io/github-action@v6
          with: |
            working-directory: ./backend
            spec: cypress/e2e/full-submission.cy.js
          attempt_limit: 5
          attempt_delay: 2000

      - uses: actions/upload-artifact@v3
        # add the line below to store screenshots only on failures
        if: failure()
        with:
          name: cypress-screenshots
          path: backend/cypress/screenshots
          if-no-files-found: warn # 'warn' or 'error' are also available, defaults to `warn`
