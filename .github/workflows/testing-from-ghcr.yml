---
name: Run Django and A11y Tests
on:
  workflow_call:
  workflow_dispatch:

jobs:
  django-test:
    permissions: write-all
    runs-on: ubuntu-latest
    env:
      ENV: TESTING
      SAM_API_KEY: ${{ secrets.SAM_API_KEY }}
      DJANGO_BASE_URL: "http://localhost:8000"
      DJANGO_SECRET_LOGIN_KEY: ${{ secrets.DJANGO_SECRET_LOGIN_KEY }}
      LOGIN_CLIENT_ID: ${{ secrets.LOGIN_CLIENT_ID }}
      SECRET_KEY: ${{ secrets.SECRET_KEY }}
      ALLOWED_HOSTS: "0.0.0.0 127.0.0.1 localhost"
      DISABLE_AUTH: False
      PGRST_JWT_SECRET: ${{ secrets.PGRST_JWT_SECRET }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Create .env file
        working-directory: ./backend
        run: touch .env

      - name: Start Services
        working-directory: ./backend
        run: docker compose -f docker-compose-web.yml up -d

      - name: Run Django test suite
        working-directory: ./backend
        run: |
          docker compose -f docker-compose-web.yml run web bash -c 'coverage run --parallel-mode --concurrency=multiprocessing manage.py test --parallel && coverage combine && coverage report -m --fail-under=85 && coverage xml -o coverage.xml'

      - name: Copy Coverage From Docker Container
        run: |
          docker cp backend-web-1:/src/coverage.xml ./coverage.xml
          pwd
          ls -al | grep 'coverage'

      - name: Code Coverage Summary Report
        uses: irongut/CodeCoverageSummary@v1.3.0
        with:
          filename: ./coverage.xml
          badge: true
          fail_below_min: false
          format: markdown
          hide_branch_rate: false
          hide_complexity: true
          indicators: true
          output: both
          thresholds: '85'

      - name: Add Coverage PR Comment
        uses: marocchino/sticky-pull-request-comment@v2
        if: github.event_name == 'pull_request'
        with:
          recreate: true
          path: code-coverage-results.md

  a11y-testing:
    runs-on: ubuntu-latest
    env:
      ENV: TESTING
      SAM_API_KEY: ${{ secrets.SAM_API_KEY }}
      DJANGO_BASE_URL: "http://localhost:8000"
      DJANGO_SECRET_LOGIN_KEY: ${{ secrets.DJANGO_SECRET_LOGIN_KEY }}
      LOGIN_CLIENT_ID: ${{ secrets.LOGIN_CLIENT_ID }}
      SECRET_KEY: ${{ secrets.SECRET_KEY }}
      ALLOWED_HOSTS: "0.0.0.0 127.0.0.1 localhost"
      DISABLE_AUTH: True
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install Node dependencies
        working-directory: ./backend
        run: npm ci

      - name: Create .env file
        working-directory: ./backend
        run: touch .env

      - name: Start services
        working-directory: ./backend
        run: docker compose -f docker-compose-web.yml up -d

      - name: Perform first run steps
        working-directory: ./backend
        run: make docker-first-run

      - name: Load fixtures
        working-directory: ./backend
        run: docker compose run web python manage.py load_fixtures

      - name: Create materialized view
        working-directory: ./backend
        run: docker compose run web python manage.py materialized_views --create

      - name: Run A11y tests
        uses: cypress-io/github-action@v6
        with:
          browser: chrome
          working-directory: ./backend
          spec: cypress/e2e/accessibility.cy.js

      - uses: actions/upload-artifact@v4
        # add the line below to store screenshots only on failures
        if: failure()
        with:
          name: cypress-screenshots
          path: backend/cypress/screenshots
          if-no-files-found: warn # 'warn' or 'error' are also available, defaults to `warn`
