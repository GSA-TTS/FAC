---
name: Perform Media Backups
on:
  workflow_dispatch:
    inputs:
      environment:
        required: true
        type: string

jobs:
  backup-media:
    name: Perform Media Backups
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    env:
      space: ${{ inputs.environment }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Unbind the private s3 bucket
        uses: cloud-gov/cg-cli-tools@main
        with:
          cf_username: ${{ secrets.CF_USERNAME }}
          cf_password: ${{ secrets.CF_PASSWORD }}
          cf_org: gsa-tts-oros-fac
          cf_space: ${{ env.space }}
          command: cf unbind-service gsa-fac fac-private-s3

      - name: Rebind the private s3 bucket with backups bucket as an additional instance
        uses: cloud-gov/cg-cli-tools@main
        with:
          cf_username: ${{ secrets.CF_USERNAME }}
          cf_password: ${{ secrets.CF_PASSWORD }}
          cf_org: gsa-tts-oros-fac
          cf_space: ${{ env.space }}
          command: |
            cf bind-service gsa-fac fac-private-s3 -c '{"additional_instances": ["backups"]}'

      - name: Restart the app
        uses: cloud-gov/cg-cli-tools@main
        with:
          cf_username: ${{ secrets.CF_USERNAME }}
          cf_password: ${{ secrets.CF_PASSWORD }}
          cf_org: gsa-tts-oros-fac
          cf_space: ${{ env.space }}
          command: cf restart gsa-fac

      - name: Backup media files
        uses: cloud-gov/cg-cli-tools@main
        with:
          cf_username: ${{ secrets.CF_USERNAME }}
          cf_password: ${{ secrets.CF_PASSWORD }}
          cf_org: gsa-tts-oros-fac
          cf_space: ${{ env.space }}
          command: cf run-task gsa-fac -k 2G -m 2G --name media_backup --command "./s3-sync.sh"
