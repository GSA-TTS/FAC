---
name: Perform Django dbbackup and mediabackup
on:
  workflow_dispatch:
    inputs:
      environment:
        required: true
        type: string
        default: dev

jobs:
  backup-database:
    name: Backup ${{ inputs.environment }} database
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    env:
      space: ${{ inputs.environment }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Bind backups bucket to ${{ inputs.environment }} application
        if: ${{ inputs.environment == 'dev' || inputs.environment == 'production' }}
        uses: cloud-gov/cg-cli-tools@main
        with:
          cf_username: ${{ secrets.CF_USERNAME }}
          cf_password: ${{ secrets.CF_PASSWORD }}
          cf_org: gsa-tts-oros-fac
          cf_space: ${{ env.space }}
          command: cf bind-service gsa-fac backups -w

      - name: Backup the database in ${{ inputs.environment }}
        if: ${{ inputs.environment == 'dev' || inputs.environment == 'production' }}
        uses: cloud-gov/cg-cli-tools@main
        with:
          cf_username: ${{ secrets.CF_USERNAME }}
          cf_password: ${{ secrets.CF_PASSWORD }}
          cf_org: gsa-tts-oros-fac
          cf_space: ${{ env.space }}
          command: cf run-task gsa-fac -k 2G -m 2G --name pg_backup --command "./br_backup.sh ${{ env.space }} MAN"

      - name: Sleep for 5 minutes to ensure backup occurs
        if: ${{ inputs.environment == 'dev' || inputs.environment == 'production' }}
        run: sleep 5m
        shell: bash

      - name: Unbind backup s3 bucket from ${{ inputs.environment }} application
        if: ${{ inputs.environment == 'dev' || inputs.environment == 'production' }}
        uses: cloud-gov/cg-cli-tools@main
        with:
          cf_username: ${{ secrets.CF_USERNAME }}
          cf_password: ${{ secrets.CF_PASSWORD }}
          cf_org: gsa-tts-oros-fac
          cf_space: ${{ env.space }}
          command: cf unbind-service gsa-fac backups

