# Generated by Lindsay 2023-03-21
# creates custom views for the API
from io import StringIO

from psycopg2 import sql
from psycopg2._psycopg import connection

from django.db import migrations
from django.core.management import call_command
from django.conf import settings


def create_views(apps, schema_editor):
    call_command(
        "create_distro_api",
        stdout="",
        stderr=StringIO(),
        **{"file": "sql_migrations/001_initial_migration.sql"},
    )
    call_command(
        "create_distro_api",
        stdout="",
        stderr=StringIO(),
        **{"file": "sql_migrations/002_basic_views.sql"},
    )
    call_command(
        "create_distro_api",
        stdout="",
        stderr=StringIO(),
        **{"file": "sql_migrations/003_findings.sql"},
    )
    call_command(
        "create_distro_api",
        stdout="",
        stderr=StringIO(),
        **{"file": "sql_migrations/004_general.sql"},
    )


def delete_views(apps, schema_editor):
    command = """
        drop view api.vw_auditee;
        drop view api.vw_auditor;
        drop view api.vw_cap_text;
        drop view api.vw_federal_award;
        drop view api.vw_findings;
        drop view api.vw_findings_text;
        drop view api.vw_general;
        drop view api.vw_note;
        drop view api.vw_passthrough;
        drop view api.vw_revision;
        drop role anon;
        drop schema api;
    """

    if settings.ENVIRONMENT not in ["DEVELOPMENT", "PREVIEW", "STAGING", "PRODUCTION"]:
        conn_string = "dbname='postgres' user='postgres' port='5432' host='db'"
    else:
        conn_string = settings.CONNECTION_STRING

    conn = connection(conn_string)
    conn.autocommit = True

    with conn.cursor() as curs:
        curs.execute(sql.SQL(command))


class Migration(migrations.Migration):
    dependencies = [
        ("data_distro", "0028_general_pdf_urls"),
    ]

    operations = [migrations.RunPython(create_views, delete_views)]
