# Generated by Django 4.1.4 on 2023-01-24 20:58

from django.db import migrations, models


class Migration(migrations.Migration):

    replaces = [
        ("data_distro", "0001_initial"),
        ("data_distro", "0002_rename_duninfo_dunsinfo_general_date_firewall_and_more"),
        ("data_distro", "0003_alter_cfdainfo_arra_alter_cfdainfo_direct_and_more"),
        ("data_distro", "0004_alter_findingstext_charts_tables"),
        ("data_distro", "0005_alter_captext_charts_tables"),
        ("data_distro", "0006_alter_cfdainfo_cfda"),
        ("data_distro", "0007_cfdainfo_ein_alter_agencies_ein"),
        ("data_distro", "0008_cfdainfo_findings"),
        ("data_distro", "0009_cfdainfo_questioned_costs"),
        ("data_distro", "0010_rename_questoned_costs_general_questioned_costs"),
        ("data_distro", "0011_alter_cfdainfo_cfda"),
        ("data_distro", "0012_alter_multiplecpasinfo_cpa_ein_and_more"),
        (
            "data_distro",
            "0013_alter_general_auditee_fax_alter_general_cpa_fax_and_more",
        ),
        ("data_distro", "0014_alter_cfdainfo_cluster_name_and_more"),
        ("data_distro", "0015_general_cognizant_agency_over_and_more"),
        ("data_distro", "0016_alter_cfdainfo_amount"),
        ("data_distro", "0017_alter_cfdainfo_cluster_total_and_more"),
        ("data_distro", "0018_remove_multiplecpasinfo_cpa_mail_and_more"),
        ("data_distro", "0019_alter_multiplecpasinfo_cpa_phone"),
        ("data_distro", "0020_alter_multiplecpasinfo_cpa_zip_code"),
        ("data_distro", "0021_alter_multiplecpasinfo_seqnum"),
        ("data_distro", "0022_alter_revisions_other_explain"),
        ("data_distro", "0023_alter_revisions_auditinfo_explain_and_more"),
        ("data_distro", "0024_alter_revisions_cap_explain_and_more"),
        ("data_distro", "0025_alter_general_cognizant_agency_and_more"),
        ("data_distro", "0026_alter_general_cognizant_agency"),
        ("data_distro", "0027_alter_general_cognizant_agency_over"),
        ("data_distro", "0028_alter_general_ein_subcode"),
        (
            "data_distro",
            "0029_alter_general_auditee_phone_alter_general_cpa_phone_and_more",
        ),
        (
            "data_distro",
            "0030_alter_general_auditee_fax_alter_general_cpa_fax_and_more",
        ),
        ("data_distro", "0031_alter_general_cpa_foreign"),
        ("data_distro", "0032_alter_general_street2"),
        ("data_distro", "0033_alter_general_cpa_street2"),
        ("data_distro", "0034_alter_general_sp_framework"),
        ("data_distro", "0035_alter_general_form_date_received"),
        ("data_distro", "0036_alter_general_type_report_financial_statements_and_more"),
        ("data_distro", "0037_alter_general_auditee_email_and_more"),
        ("data_distro", "0038_alter_general_cpa_country_alter_general_cpa_email"),
        ("data_distro", "0039_alter_general_dollar_threshold"),
        ("data_distro", "0040_alter_general_total_fed_expenditures"),
        (
            "data_distro",
            "0041_alter_agencies_agency_cfda_alter_agencies_audit_year_and_more",
        ),
    ]

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Agencies",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "agency_cfda",
                    models.IntegerField(
                        help_text="Data sources: SF-SAC 1997-2000: III/5;SF-SAC 2001-2003: III/9;SF-SAC 2004-2007: III/8;SF-SAC 2008-2009: III/8;SF-SAC 2010-2012: III/8;SF-SAC 2013-2015: III/5;SF-SAC 2016-2018: III/3/d;SF-SAC 2019-2021: III/3/d;SF-SAC 2022: III/3/d Census mapping: AGENCIES, AGENCYCFDA",
                        verbose_name="2-digit prefix of Federal Agency requiring copy of audit report",
                    ),
                ),
                (
                    "ein",
                    models.IntegerField(
                        help_text="Data sources: SF-SAC 1997-2000: I/5/a;SF-SAC 2001-2003: I/5/a;SF-SAC 2004-2007: I/5/a;SF-SAC 2008-2009: I/4/a;SF-SAC 2010-2012: I/4/a;SF-SAC 2013-2015: I/4/a;SF-SAC 2016-2018: I/4/a;SF-SAC 2019-2021: I/4/a;SF-SAC 2022: I/4/a Census mapping: AGENCIES, EIN",
                        null=True,
                        verbose_name="Employer Identification Number (EIN) of primary grantee",
                    ),
                ),
                (
                    "dbkey",
                    models.CharField(
                        help_text="Census mapping: AGENCIES, DBKEY",
                        max_length=40,
                        verbose_name="Audit Year and DBKEY (database key) combined make up the primary key.",
                    ),
                ),
                (
                    "audit_year",
                    models.CharField(
                        help_text="Census mapping: AGENCIES, AUDITYEAR",
                        max_length=40,
                        verbose_name="Audit Year and DBKEY (database key) combined make up the primary key.",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Captext",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "charts_tables",
                    models.BooleanField(
                        help_text="Census mapping: CAPTEXT, CHARTSTABLES",
                        max_length=1,
                        null=True,
                        verbose_name="Indicates whether or not the text contained charts or tables that could not be entered due to formatting restrictions",
                    ),
                ),
                (
                    "finding_ref_nums",
                    models.CharField(
                        help_text="Data sources: SF-SAC 2019-2021: IV/1;SF-SAC 2022: IV/1 Census mapping: CAPTEXT, FINDINGREFNUMS",
                        max_length=100,
                        verbose_name="Audit Finding Reference Number",
                    ),
                ),
                (
                    "seq_number",
                    models.IntegerField(
                        help_text="Census mapping: CAPTEXT, SEQ_NUMBER",
                        verbose_name="Order that the CAP text was reported",
                    ),
                ),
                (
                    "text",
                    models.TextField(
                        help_text="Data sources: SF-SAC 2019-2021: IV/2;SF-SAC 2022: IV/2 Census mapping: CAPTEXT, TEXT",
                        verbose_name="Content of the Corrective Action Plan (CAP)",
                    ),
                ),
                (
                    "dbkey",
                    models.CharField(
                        help_text="Census mapping: CAPTEXT, DBKEY",
                        max_length=40,
                        verbose_name="Audit Year and DBKEY (database key) combined make up the primary key.",
                    ),
                ),
                (
                    "audit_year",
                    models.CharField(
                        help_text="Census mapping: CAPTEXT, AUDITYEAR",
                        max_length=40,
                        verbose_name="Audit Year and DBKEY (database key) combined make up the primary key.",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="CfdaInfo",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "research_and_development",
                    models.BooleanField(
                        help_text="Data sources: SF-SAC 2001-2003: III/10/b;SF-SAC 2004-2007: III/9/c;SF-SAC 2008-2009: III/9/c;SF-SAC 2010-2012: III/9/c;SF-SAC 2013-2015: III/6/e Census mapping: CFDA INFO, R&D",
                        null=True,
                        verbose_name="Indicate whether or not the program is a Research and Development program",
                    ),
                ),
                (
                    "loans",
                    models.BooleanField(
                        help_text="Data sources: SF-SAC 2013-2015: III/6/f;SF-SAC 2016-2018: II/1/i;SF-SAC 2019-2021: II/1/i;SF-SAC 2022: II/1/i Census mapping: CFDA INFO, LOANS",
                        null=True,
                        verbose_name="Indicate whether or not the program is a Loan or Loan Guarantee (only available for audit years 2013 and beyond)",
                    ),
                ),
                (
                    "arra",
                    models.BooleanField(
                        help_text="Data sources: SF-SAC 2010-2012: III/9/d;SF-SAC 2013-2015: III/6/g Census mapping: CFDA INFO, ARRA",
                        null=True,
                        verbose_name="American Recovery and Reinvestment Act Funded Program",
                    ),
                ),
                (
                    "direct",
                    models.BooleanField(
                        help_text="Data sources: SF-SAC 2001-2003: III/10/e;SF-SAC 2004-2007: III/9/f;SF-SAC 2008-2009: III/9/f;SF-SAC 2010-2012: III/9/g;SF-SAC 2013-2015: III/6/h;SF-SAC 2016-2018: II/1/k;SF-SAC 2019-2021: II/1/k;SF-SAC 2022: II/1/k Census mapping: CFDA INFO, DIRECT",
                        null=True,
                        verbose_name="Indicate whether or not the award was received directly from a Federal awarding agency",
                    ),
                ),
                (
                    "passthrough_award",
                    models.BooleanField(
                        help_text="Data sources: SF-SAC 2016-2018: II/1/n;SF-SAC 2019-2021: II/1/n;SF-SAC 2022: II/1/n Census mapping: CFDA INFO, PASSTHROUGHAWARD",
                        null=True,
                        verbose_name="Indicates whether or not funds were passed through to any subrecipients for the Federal program",
                    ),
                ),
                (
                    "major_program",
                    models.BooleanField(
                        help_text="Data sources: SF-SAC 1997-2000: III/7/a;SF-SAC 2001-2003: III/10/f;SF-SAC 2004-2007: III/9/g;SF-SAC 2008-2009: III/9/g;SF-SAC 2010-2012: III/9/h;SF-SAC 2013-2015: III/6/i;SF-SAC 2016-2018: III/1/a;SF-SAC 2019-2021: III/1/a;SF-SAC 2022: III/1/a Census mapping: CFDA INFO, MAJORPROGRAM",
                        null=True,
                        verbose_name="Indicate whether or not the Federal program is a major program",
                    ),
                ),
                (
                    "finding_ref_nums",
                    models.CharField(
                        help_text="Data sources: SF-SAC 1997-2000: III/7/e;SF-SAC 2001-2003: III/11/b;SF-SAC 2004-2007: III/10/b;SF-SAC 2008-2009: III/10/b;SF-SAC 2010-2012: III/10/b;SF-SAC 2013-2015: III/7/d;SF-SAC 2016-2018: III/4/e;SF-SAC 2019-2021: III/4/e;SF-SAC 2022: III/4/e Census mapping: CFDA INFO, FINDINGREFNUMS",
                        max_length=100,
                        null=True,
                        verbose_name="Findings Reference Numbers",
                    ),
                ),
                (
                    "amount",
                    models.BigIntegerField(
                        help_text="Data sources: SF-SAC 1997-2000: III/6/c;SF-SAC 2001-2003: III/10/d;SF-SAC 2004-2007: III/9/e;SF-SAC 2008-2009: III/9/e;SF-SAC 2010-2012: III/9/f;SF-SAC 2013-2015: III/6/d;SF-SAC 2016-2018: II/1/e;SF-SAC 2019-2021: II/1/e;SF-SAC 2022: II/1/e Census mapping: CFDA INFO, AMOUNT",
                        verbose_name="Amount Expended for the Federal Program",
                    ),
                ),
                (
                    "program_total",
                    models.BigIntegerField(
                        help_text="Data sources: SF-SAC 2016-2018: II/1/g;SF-SAC 2019-2021: II/1/g;SF-SAC 2022: II/1/g Census mapping: CFDA INFO, PROGRAMTOTAL",
                        verbose_name="Total Federal awards expended for each individual Federal program is auto-generated by summing the amount expended for all line items with the same CFDA Prefix and Extension",
                    ),
                ),
                (
                    "cluster_total",
                    models.BigIntegerField(
                        help_text="Data sources: SF-SAC 2016-2018: II/1/h;SF-SAC 2019-2021: II/1/h;SF-SAC 2022: II/1/h Census mapping: CFDA INFO, CLUSTERTOTAL",
                        verbose_name="Total Federal awards expended for each individual Federal program is auto-generated by summing the amount expended for all line items with the same Cluster Name",
                    ),
                ),
                (
                    "passthrough_amount",
                    models.BigIntegerField(
                        help_text="Data sources: SF-SAC 2016-2018: II/1/o;SF-SAC 2019-2021: II/1/o;SF-SAC 2022: II/1/o Census mapping: CFDA INFO, PASSTHROUGHAMOUNT",
                        null=True,
                        verbose_name="Amount passed through to subrecipients",
                    ),
                ),
                (
                    "loan_balance",
                    models.CharField(
                        help_text="Data sources: SF-SAC 2016-2018: II/1/j;SF-SAC 2019-2021: II/1/j;SF-SAC 2022: II/1/j Census mapping: CFDA INFO, LOANBALANCE",
                        max_length=40,
                        null=True,
                        verbose_name="The loan or loan guarantee (loan) balance outstanding at the end of the audit period.  A response of ‘N/A’ is acceptable.",
                    ),
                ),
                (
                    "federal_program_name",
                    models.CharField(
                        help_text="Data sources: SF-SAC 1997-2000: III/6/b;SF-SAC 2001-2003: III/10/c;SF-SAC 2004-2007: III/9/d;SF-SAC 2008-2009: III/9/d;SF-SAC 2010-2012: III/9/e;SF-SAC 2013-2015: III/6/c;SF-SAC 2016-2018: II/1/d;SF-SAC 2019-2021: II/1/d;SF-SAC 2022: II/1/d Census mapping: CFDA INFO, FEDERALPROGRAMNAME",
                        max_length=300,
                        verbose_name="Name of Federal Program",
                    ),
                ),
                (
                    "cfda_program_name",
                    models.CharField(
                        help_text="Census mapping: CFDA INFO, CFDAPROGRAMNAME",
                        max_length=300,
                        verbose_name="Name of Federal Program (auto-generated by FAC from the CFDA catalog)",
                    ),
                ),
                (
                    "award_identification",
                    models.CharField(
                        help_text="Data sources: SF-SAC 2016-2018: II/1/c;SF-SAC 2019-2021: II/1/c;SF-SAC 2022: II/1/c Census mapping: CFDA INFO, AWARDIDENTIFICATION",
                        max_length=50,
                        verbose_name="Other data used to identify the award which is not a CFDA number (e.g., program year, contract number)",
                    ),
                ),
                (
                    "cfda",
                    models.CharField(
                        help_text="Data sources: SF-SAC 1997-2000: III/6/a;SF-SAC 2001-2003: III/10/a;SF-SAC 2004-2007: III/9/a & III/9/b combined;SF-SAC 2008-2009: III/9/a & III/9/b combined;SF-SAC 2010-2012: III/9/a & III/9/b combined;SF-SAC 2013-2015: III/6/a & III/6/b combined;SF-SAC 2016-2018: II/1/a & II/1/b combined;SF-SAC 2019-2021: II/1/a & II/1/b combined;SF-SAC 2022: II/1/a & II/1/b combined Census mapping: CFDA INFO, CFDA",
                        max_length=52,
                        verbose_name="Federal Agency Prefix and Extension",
                    ),
                ),
                (
                    "cluster_name",
                    models.CharField(
                        help_text="Data sources: SF-SAC 2016-2018: II/1/f;SF-SAC 2019-2021: II/1/f;SF-SAC 2022: II/1/f Census mapping: CFDA INFO, CLUSTERNAME",
                        max_length=75,
                        null=True,
                        verbose_name="The name of the cluster",
                    ),
                ),
                (
                    "state_cluster_name",
                    models.CharField(
                        help_text="Census mapping: CFDA INFO, STATECLUSTERNAME",
                        max_length=75,
                        null=True,
                        verbose_name="The name of the state cluster",
                    ),
                ),
                (
                    "other_cluster_name",
                    models.CharField(
                        help_text="Census mapping: CFDA INFO, OTHERCLUSTERNAME",
                        max_length=75,
                        null=True,
                        verbose_name="The name of the cluster (if not listed in the Compliance Supplement)",
                    ),
                ),
                (
                    "type_requirement",
                    models.CharField(
                        help_text="Data sources: SF-SAC 1997-2000: III/7/b;SF-SAC 2001-2003: III/11/a;SF-SAC 2004-2007: III/10/a;SF-SAC 2008-2009: III/10/a;SF-SAC 2010-2012: III/10/a;SF-SAC 2013-2015: III/7/e;SF-SAC 2016-2018: III/4/f;SF-SAC 2019-2021: III/4/f;SF-SAC 2022: III/4/f Census mapping: CFDA INFO, TYPEREQUIREMENT",
                        max_length=40,
                        null=True,
                        verbose_name="Type Requirement Failure",
                    ),
                ),
                (
                    "type_report_major_program",
                    models.CharField(
                        help_text="Data sources: SF-SAC 2004-2007: III/9/h;SF-SAC 2008-2009: III/9/h;SF-SAC 2010-2012: III/9/i;SF-SAC 2013-2015: III/6/j;SF-SAC 2016-2018: III/1/b;SF-SAC 2019-2021: III/1/b;SF-SAC 2022: III/1/b Census mapping: CFDA INFO, TYPEREPORT_MP",
                        max_length=40,
                        verbose_name="Type of Report Issued on the Major Program Compliance",
                    ),
                ),
                (
                    "findings_count",
                    models.IntegerField(
                        help_text="Data sources: SF-SAC 2013-2015: III/6/k;SF-SAC 2016-2018: III/1/c;SF-SAC 2019-2021: III/1/c;SF-SAC 2022: III/1/c Census mapping: CFDA INFO, FINDINGSCOUNT",
                        verbose_name="Number of findings for the federal program (only available for audit years 2013 and beyond)",
                    ),
                ),
                (
                    "elec_audits_id",
                    models.IntegerField(
                        help_text="Census mapping: CFDA INFO, ELECAUDITSID",
                        verbose_name="FAC system generated sequence number used to link to Findings data between CFDA Info and Findings",
                    ),
                ),
                (
                    "dbkey",
                    models.CharField(
                        help_text="Census mapping: CFDA INFO, DBKEY",
                        max_length=40,
                        verbose_name="Audit Year and DBKEY (database key) combined make up the primary key.",
                    ),
                ),
                (
                    "audit_year",
                    models.CharField(
                        help_text="Census mapping: CFDA INFO, AUDITYEAR",
                        max_length=40,
                        verbose_name="Audit Year and DBKEY (database key) combined make up the primary key.",
                    ),
                ),
                (
                    "ein",
                    models.IntegerField(
                        default=None,
                        verbose_name="Primary Employer Identification Number",
                    ),
                ),
                (
                    "findings",
                    models.TextField(
                        help_text="Census mapping: REVISIONS, FINDINGS",
                        null=True,
                        verbose_name="Items on the Findings page",
                    ),
                ),
                (
                    "questioned_costs",
                    models.CharField(
                        max_length=40, null=True, verbose_name="Questioned Costs"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="DunsInfo",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "duns",
                    models.IntegerField(
                        help_text="Data sources: SF-SAC 2004-2007: I/5/f;SF-SAC 2008-2009: I/4/f;SF-SAC 2010-2012: I/4/f;SF-SAC 2013-2015: I/4/f;SF-SAC 2016-2018: I/4/f;SF-SAC 2019-2021: I/4/f;SF-SAC 2022: I/4/f Census mapping: DUN INFO, DUNS",
                        verbose_name="Multiple Data Universal Numbering System Numbers",
                    ),
                ),
                (
                    "duns_seq_num",
                    models.IntegerField(
                        help_text="Census mapping: DUN INFO, DUNSEQNUM",
                        verbose_name="Order that DUNS was reported on page 4 of SF-SAC",
                    ),
                ),
                (
                    "dbkey",
                    models.CharField(
                        help_text="Census mapping: DUN INFO, DBKEY",
                        max_length=40,
                        verbose_name="Audit Year and DBKEY (database key) combined make up the primary key.",
                    ),
                ),
                (
                    "audit_year",
                    models.CharField(
                        help_text="Census mapping: DUN INFO, AUDITYEAR",
                        max_length=40,
                        verbose_name="Audit Year and DBKEY (database key) combined make up the primary key.",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="EinInfo",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "ein",
                    models.IntegerField(
                        help_text="Data sources: SF-SAC 2001-2003: I/5/c;SF-SAC 2004-2007: I/5/c;SF-SAC 2008-2009: I/4/c;SF-SAC 2010-2012: I/4/c;SF-SAC 2013-2015: I/4/c;SF-SAC 2016-2018: I/4/c;SF-SAC 2019-2021: I/4/c;SF-SAC 2022: I/4/c Census mapping: EIN INFO, EIN",
                        verbose_name="Multiple Employer Identification Numbers",
                    ),
                ),
                (
                    "ein_seq_num",
                    models.IntegerField(
                        help_text="Census mapping: EIN INFO, EINSEQNUM",
                        verbose_name="Order that EINs were reported on page 4 of SF-SAC",
                    ),
                ),
                (
                    "dbkey",
                    models.CharField(
                        help_text="Census mapping: EIN INFO, DBKEY",
                        max_length=40,
                        verbose_name="Audit Year and DBKEY (database key) combined make up the primary key.",
                    ),
                ),
                (
                    "audit_year",
                    models.CharField(
                        help_text="Census mapping: EIN INFO, AUDITYEAR",
                        max_length=40,
                        verbose_name="Audit Year and DBKEY (database key) combined make up the primary key.",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Findings",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "modified_opinion",
                    models.BooleanField(
                        help_text="Data sources: SF-SAC 2013-2015: III/7/f;SF-SAC 2016-2018: III/4/g;SF-SAC 2019-2021: III/4/g;SF-SAC 2022: III/4/g Census mapping: FINDINGS, MODIFIEDOPINION",
                        null=True,
                        verbose_name="Modified Opinion finding",
                    ),
                ),
                (
                    "other_non_compliance",
                    models.BooleanField(
                        help_text="Data sources: SF-SAC 2013-2015: III/7/g;SF-SAC 2016-2018: III/4/h;SF-SAC 2019-2021: III/4/h;SF-SAC 2022: III/4/h Census mapping: FINDINGS, OTHERNONCOMPLIANCE",
                        null=True,
                        verbose_name="Other Noncompliance finding",
                    ),
                ),
                (
                    "material_weakness",
                    models.BooleanField(
                        help_text="Data sources: SF-SAC 2013-2015: III/7/h;SF-SAC 2016-2018: III/4/i;SF-SAC 2019-2021: III/4/i;SF-SAC 2022: III/4/i Census mapping: FINDINGS, MATERIALWEAKNESS",
                        null=True,
                        verbose_name="Material Weakness finding",
                    ),
                ),
                (
                    "significant_deficiency",
                    models.BooleanField(
                        help_text="Data sources: SF-SAC 2013-2015: III/7/i;SF-SAC 2016-2018: III/4/j;SF-SAC 2019-2021: III/4/j;SF-SAC 2022: III/4/j Census mapping: FINDINGS, SIGNIFICANTDEFICIENCY",
                        null=True,
                        verbose_name="Significant Deficiency finding",
                    ),
                ),
                (
                    "other_findings",
                    models.BooleanField(
                        help_text="Data sources: SF-SAC 2013-2015: III/7/j;SF-SAC 2016-2018: III/4/k;SF-SAC 2019-2021: III/4/k;SF-SAC 2022: III/4/k Census mapping: FINDINGS, OTHERFINDINGS",
                        null=True,
                        verbose_name="Other findings",
                    ),
                ),
                (
                    "questioned_costs",
                    models.BooleanField(
                        help_text="Data sources: SF-SAC 2013-2015: III/7/k;SF-SAC 2016-2018: III/4/l;SF-SAC 2019-2021: III/4/l;SF-SAC 2022: III/4/l Census mapping: FINDINGS, QCOSTS",
                        null=True,
                        verbose_name="Questioned Costs",
                    ),
                ),
                (
                    "repeat_finding",
                    models.BooleanField(
                        help_text="Data sources: SF-SAC 2016-2018: III/4/m;SF-SAC 2019-2021: III/4/m;SF-SAC 2022: III/4/m Census mapping: FINDINGS, REPEATFINDING",
                        null=True,
                        verbose_name="Indicates whether or not the audit finding was a repeat of an audit finding in the immediate prior audit",
                    ),
                ),
                (
                    "finding_ref_nums",
                    models.CharField(
                        help_text="Data sources: SF-SAC 2013-2015: III/7/d;SF-SAC 2016-2018: III/4/e;SF-SAC 2019-2021: III/4/e;SF-SAC 2022: III/4/e Census mapping: FINDINGS, FINDINGREFNUMS",
                        max_length=100,
                        verbose_name="Findings Reference Numbers",
                    ),
                ),
                (
                    "prior_finding_ref_nums",
                    models.CharField(
                        help_text="Data sources: SF-SAC 2016-2018: III/4/n;SF-SAC 2019-2021: III/4/n;SF-SAC 2022: III/4/n Census mapping: FINDINGS, PRIORFINDINGREFNUMS",
                        max_length=100,
                        verbose_name="Audit finding reference numbers from the immediate prior audit",
                    ),
                ),
                (
                    "type_requirement",
                    models.CharField(
                        help_text="Data sources: SF-SAC 2013-2015: III/7/e;SF-SAC 2016-2018: III/4/f;SF-SAC 2019-2021: III/4/f;SF-SAC 2022: III/4/f Census mapping: FINDINGS, TYPEREQUIREMENT",
                        max_length=40,
                        verbose_name="Type Requirement Failure",
                    ),
                ),
                (
                    "elec_audits_id",
                    models.IntegerField(
                        help_text="Census mapping: FINDINGS, ELECAUDITSID",
                        verbose_name="FAC system generated sequence number used to link to Findings data between CFDA Info and Findings",
                    ),
                ),
                (
                    "elec_audit_findings_id",
                    models.IntegerField(
                        help_text="Census mapping: FINDINGS, ELECAUDITFINDINGSID",
                        verbose_name="FAC system generated sequence number for finding",
                    ),
                ),
                (
                    "audit_year",
                    models.CharField(
                        help_text="Census mapping: FINDINGS, AUDITYEAR",
                        max_length=40,
                        verbose_name="Audit Year and DBKEY (database key) combined make up the primary key.",
                    ),
                ),
                (
                    "dbkey",
                    models.CharField(
                        help_text="Census mapping: FINDINGS, DBKEY",
                        max_length=40,
                        verbose_name="Audit Year and DBKEY (database key) combined make up the primary key.",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Findingstext",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "charts_tables",
                    models.BooleanField(
                        help_text="Census mapping: FINDINGSTEXT, CHARTSTABLES",
                        max_length=1,
                        null=True,
                        verbose_name="Indicates whether or not the text contained charts or tables that could not be entered due to formatting restrictions",
                    ),
                ),
                (
                    "finding_ref_nums",
                    models.CharField(
                        help_text="Data sources: SF-SAC 2019-2021: III/5/a;SF-SAC 2022: III/5/a Census mapping: FINDINGSTEXT, FINDINGREFNUMS",
                        max_length=100,
                        verbose_name="Audit Finding Reference Number",
                    ),
                ),
                (
                    "seq_number",
                    models.IntegerField(
                        help_text="Census mapping: FINDINGSTEXT, SEQ_NUMBER",
                        verbose_name="Order that the findings text was reported",
                    ),
                ),
                (
                    "text",
                    models.TextField(
                        help_text="Data sources: SF-SAC 2019-2021: III/5/b;SF-SAC 2022: III/5/b Census mapping: FINDINGSTEXT, TEXT",
                        verbose_name="Content of the finding text",
                    ),
                ),
                (
                    "dbkey",
                    models.CharField(
                        help_text="Census mapping: FINDINGSTEXT, DBKEY",
                        max_length=40,
                        verbose_name="Audit Year and DBKEY (database key) combined make up the primary key.",
                    ),
                ),
                (
                    "audit_year",
                    models.CharField(
                        help_text="Census mapping: FINDINGSTEXT, AUDITYEAR",
                        max_length=40,
                        verbose_name="Audit Year and DBKEY (database key) combined make up the primary key.",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="General",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "dollar_threshold",
                    models.FloatField(
                        help_text="Data sources: SF-SAC 1997-2000: III/2;SF-SAC 2001-2003: III/3;SF-SAC 2004-2007: III/2;SF-SAC 2008-2009: III/2;SF-SAC 2010-2012: III/2;SF-SAC 2013-2015: III/2;SF-SAC 2016-2018: III/3/b;SF-SAC 2019-2021: III/3/b;SF-SAC 2022: III/3/b Census mapping: GENERAL, DOLLARTHRESHOLD",
                        null=True,
                        verbose_name="Dollar Threshold to distinguish between Type A and Type B programs.",
                    ),
                ),
                (
                    "multiple_eins",
                    models.BooleanField(
                        help_text="Data sources: SF-SAC 1997-2000: I/5/b;SF-SAC 2001-2003: I/5/b;SF-SAC 2004-2007: I/5/b;SF-SAC 2008-2009: I/4/b;SF-SAC 2010-2012: I/4/b;SF-SAC 2013-2015: I/4/b;SF-SAC 2016-2018: I/4/b;SF-SAC 2019-2021: I/4/b;SF-SAC 2022: I/4/b Census mapping: GENERAL, MULTIPLEEINS",
                        null=True,
                        verbose_name="Identifies if the Submission Contains Multiple EINs",
                    ),
                ),
                (
                    "multiple_duns",
                    models.BooleanField(
                        help_text="Data sources: SF-SAC 2004-2007: I/5/e;SF-SAC 2008-2009: I/4/e;SF-SAC 2010-2012: I/4/e;SF-SAC 2013-2015: I/4/e;SF-SAC 2016-2018: I/4/e;SF-SAC 2019-2021: I/4/e;SF-SAC 2022: I/4/e Census mapping: GENERAL, MULTIPLEDUNS",
                        null=True,
                        verbose_name="Identifies if the Submission Contains Multiple DUNS",
                    ),
                ),
                (
                    "multiple_cpas",
                    models.BooleanField(
                        help_text="Data sources: SF-SAC 2008-2009: I/7/a;SF-SAC 2010-2012: I/7/a;SF-SAC 2013-2015: I/7;SF-SAC 2016-2018: I/7;SF-SAC 2019-2021: I/6/g;SF-SAC 2022: I/6/g Census mapping: GENERAL, MULTIPLE_CPAS",
                        null=True,
                        verbose_name="Identifies if the Submission Contains Multiple CPAs",
                    ),
                ),
                (
                    "sp_framework_required",
                    models.BooleanField(
                        help_text="Data sources: SF-SAC 2016-2018: III/2/a/iii;SF-SAC 2019-2021: III/2/a/ii;SF-SAC 2022: III/2/a/ii Census mapping: GENERAL, SP_FRAMEWORK_REQUIRED",
                        null=True,
                        verbose_name="Indicate whether or not the special purpose framework used as basis of accounting by state law or tribal law",
                    ),
                ),
                (
                    "going_concern",
                    models.BooleanField(
                        help_text="Data sources: SF-SAC 1997-2000: II/2;SF-SAC 2001-2003: II/2;SF-SAC 2004-2007: II/2;SF-SAC 2008-2009: II/2;SF-SAC 2010-2012: II/2;SF-SAC 2013-2015: II/2;SF-SAC 2016-2018: III/2/b;SF-SAC 2019-2021: III/2/b;SF-SAC 2022: III/2/b Census mapping: GENERAL, GOINGCONCERN",
                        null=True,
                        verbose_name="Whether or not the audit contained a going concern paragraph on financial statements",
                    ),
                ),
                (
                    "condition_or_deficiency",
                    models.BooleanField(
                        help_text="Data sources: SF-SAC 1997-2000: II/3;SF-SAC 2001-2003: II/3;SF-SAC 2004-2007: II/3;SF-SAC 2008-2009: II/3;SF-SAC 2010-2012: II/3;SF-SAC 2013-2015: II/3;SF-SAC 2016-2018: III/2/c;SF-SAC 2019-2021: III/2/c;SF-SAC 2022: III/2/c Census mapping: GENERAL, REPORTABLECONDITION/SIGNIFICANTDEFICIENCY",
                        null=True,
                        verbose_name="Whether or not the audit disclosed a reportable condition/significant deficiency on financial statements",
                    ),
                ),
                (
                    "material_weakness",
                    models.BooleanField(
                        help_text="Data sources: SF-SAC 1997-2000: II/4;SF-SAC 2001-2003: II/4;SF-SAC 2004-2007: II/4;SF-SAC 2008-2009: II/4;SF-SAC 2010-2012: II/4;SF-SAC 2013-2015: II/4;SF-SAC 2016-2018: III/2/d;SF-SAC 2019-2021: III/2/d;SF-SAC 2022: III/2/d Census mapping: GENERAL, MATERIALWEAKNESS",
                        null=True,
                        verbose_name="Whether or not the audit disclosed any reportable condition/significant deficiency as a material weakness on financial statements",
                    ),
                ),
                (
                    "material_noncompliance",
                    models.BooleanField(
                        help_text="Data sources: SF-SAC 1997-2000: II/5;SF-SAC 2001-2003: II/5;SF-SAC 2004-2007: II/5;SF-SAC 2008-2009: II/5;SF-SAC 2010-2012: II/5;SF-SAC 2013-2015: II/5;SF-SAC 2016-2018: III/2/e;SF-SAC 2019-2021: III/2/e;SF-SAC 2022: III/2/e Census mapping: GENERAL, MATERIALNONCOMPLIANCE",
                        null=True,
                        verbose_name="Whether or not the audit disclosed a material noncompliance on financial statements",
                    ),
                ),
                (
                    "dup_reports",
                    models.BooleanField(
                        help_text="Data sources: SF-SAC 2001-2003: III/2;SF-SAC 2004-2007: III/1;SF-SAC 2008-2009: III/1;SF-SAC 2010-2012: III/1;SF-SAC 2013-2015: III/1;SF-SAC 2016-2018: III/3/a;SF-SAC 2019-2021: III/3/a;SF-SAC 2022: III/3/a Census mapping: GENERAL, DUP_REPORTS",
                        null=True,
                        verbose_name="Whether or not the financial statements include departments that have separate expenditures not included in this audit",
                    ),
                ),
                (
                    "low_risk",
                    models.BooleanField(
                        help_text="Data sources: SF-SAC 1997-2000: III/3;SF-SAC 2001-2003: III/4;SF-SAC 2004-2007: III/3;SF-SAC 2008-2009: III/3;SF-SAC 2010-2012: III/3;SF-SAC 2013-2015: III/3;SF-SAC 2016-2018: III/3/c;SF-SAC 2019-2021: III/3/c;SF-SAC 2022: III/3/c Census mapping: GENERAL, LOWRISK",
                        null=True,
                        verbose_name="Indicate whether or not the auditee qualified as a low-risk auditee",
                    ),
                ),
                (
                    "condition_or_deficiency_major_program",
                    models.BooleanField(
                        help_text="Data sources: SF-SAC 2001-2003: III/5;SF-SAC 2004-2007: III/4;SF-SAC 2008-2009: III/4;SF-SAC 2010-2012: III/4 Census mapping: GENERAL, REPORTABLECONDITION/SIGNIFICANTDEFICIENCY_MP",
                        null=True,
                        verbose_name="Whether or not the audit disclosed a reportable condition/significant deficiency for any major program in the Schedule of Findings and Questioned Costs",
                    ),
                ),
                (
                    "material_weakness_major_program",
                    models.BooleanField(
                        help_text="Data sources: SF-SAC 2001-2003: III/6;SF-SAC 2004-2007: III/5;SF-SAC 2008-2009: III/5;SF-SAC 2010-2012: III/5 Census mapping: GENERAL, MATERIALWEAKNESS_MP",
                        null=True,
                        verbose_name="Indicate whether any reportable condition/signficant deficiency was disclosed as a material weakness for a major program in the Schedule of Findings and Questioned Costs",
                    ),
                ),
                (
                    "questioned_costs",
                    models.BooleanField(
                        help_text="Data sources: SF-SAC 2001-2003: III/7;SF-SAC 2004-2007: III/6;SF-SAC 2008-2009: III/6;SF-SAC 2010-2012: III/6 Census mapping: GENERAL, QCOSTS",
                        null=True,
                        verbose_name="Indicate whether or not the audit disclosed any known questioned costs.",
                    ),
                ),
                (
                    "current_or_former_findings",
                    models.BooleanField(
                        help_text="Data sources: SF-SAC 2001-2003: III/9;SF-SAC 2004-2007: III/8;SF-SAC 2008-2009: III/8;SF-SAC 2010-2012: III/8;SF-SAC 2013-2015: III/5;SF-SAC 2016-2018: III/3/d;SF-SAC 2019-2021: III/3/d;SF-SAC 2022: III/3/d Census mapping: GENERAL, CYFINDINGS",
                        null=True,
                        verbose_name="Indicate whether or not current year findings or prior year findings affecting direct funds were reported",
                    ),
                ),
                (
                    "prior_year_schedule",
                    models.BooleanField(
                        help_text="Data sources: SF-SAC 2001-2003: III/8;SF-SAC 2004-2007: III/7;SF-SAC 2008-2009: III/7;SF-SAC 2010-2012: III/7;SF-SAC 2013-2015: III/4 Census mapping: GENERAL, PYSCHEDULE",
                        null=True,
                        verbose_name="Indicate whether or not the report includes a Summary Schedule of Prior Year Audit Findings",
                    ),
                ),
                (
                    "report_required",
                    models.BooleanField(
                        help_text="Data sources: SF-SAC 1997-2000: III/5;SF-SAC 2001-2003: III/9;SF-SAC 2004-2007: III/8 Census mapping: GENERAL, REPORTREQUIRED",
                        null=True,
                        verbose_name="Distribution to Federal Agency required?",
                    ),
                ),
                (
                    "multiple_ueis",
                    models.BooleanField(
                        help_text="Data sources: SF-SAC 2022: I/4/h Census mapping: GENERAL, MULTIPLEUEIS",
                        null=True,
                        verbose_name="Identifies if the Submission Contains Multiple UEIs",
                    ),
                ),
                (
                    "auditee_phone",
                    models.PositiveBigIntegerField(
                        help_text="Data sources: SF-SAC 1997-2000: I/6/d;SF-SAC 2001-2003: I/6/d;SF-SAC 2004-2007: I/6/d;SF-SAC 2008-2009: I/5/d;SF-SAC 2010-2012: I/5/d;SF-SAC 2013-2015: I/5/d;SF-SAC 2016-2018: I/5/d;SF-SAC 2019-2021: I/5/d;SF-SAC 2022: I/5/d Census mapping: GENERAL, AUDITEEPHONE",
                        verbose_name="Auditee Phone Number",
                    ),
                ),
                (
                    "auditee_fax",
                    models.PositiveBigIntegerField(
                        help_text="Data sources: SF-SAC 1997-2000: I/6/e;SF-SAC 2001-2003: I/6/e;SF-SAC 2004-2007: I/6/e;SF-SAC 2008-2009: I/5/e;SF-SAC 2010-2012: I/5/e;SF-SAC 2013-2015: I/5/e Census mapping: GENERAL, AUDITEEFAX",
                        null=True,
                        verbose_name="Auditee Fax Number (optional)",
                    ),
                ),
                (
                    "cpa_phone",
                    models.PositiveBigIntegerField(
                        help_text="Data sources: SF-SAC 1997-2000: I/7/d;SF-SAC 2001-2003: I/7/d;SF-SAC 2004-2007: I/7/d;SF-SAC 2008-2009: I/6/d;SF-SAC 2010-2012: I/6/d;SF-SAC 2013-2015: I/6/e;SF-SAC 2016-2018: I/6/e;SF-SAC 2019-2021: I/6/e;SF-SAC 2022: I/6/e Census mapping: GENERAL, CPAPHONE",
                        verbose_name="CPA phone number",
                    ),
                ),
                (
                    "cpa_fax",
                    models.PositiveBigIntegerField(
                        help_text="Data sources: SF-SAC 1997-2000: I/7/e;SF-SAC 2001-2003: I/7/e;SF-SAC 2004-2007: I/7/e;SF-SAC 2008-2009: I/6/e;SF-SAC 2010-2012: I/6/e;SF-SAC 2013-2015: I/6/f Census mapping: GENERAL, CPAFAX",
                        null=True,
                        verbose_name="CPA fax number (optional) ",
                    ),
                ),
                (
                    "uei",
                    models.CharField(
                        help_text="Data sources: SF-SAC 2022: I/4/g Census mapping: GENERAL, UEI",
                        max_length=12,
                        verbose_name="Unique Entity ID",
                    ),
                ),
                (
                    "total_fed_expenditures",
                    models.BigIntegerField(
                        help_text="Data sources: SF-SAC 1997-2000: III/6/c- Total;SF-SAC 2001-2003: III/10/d -Total;SF-SAC 2004-2007: III/9/e -Total;SF-SAC 2008-2009: III/9/e -Total;SF-SAC 2010-2012: III/9/f -Total;SF-SAC 2013-2015: III/6/d -Total;SF-SAC 2016-2018: II/1/e- Total;SF-SAC 2019-2021: II/1/e - Total;SF-SAC 2022: II/1/e - Total Census mapping: GENERAL, TOTFEDEXPEND",
                        verbose_name="Total Federal Expenditures",
                    ),
                ),
                (
                    "state",
                    models.CharField(
                        help_text="Data sources: SF-SAC 1997-2000: I/6/b;SF-SAC 2001-2003: I/6/b;SF-SAC 2004-2007: I/6/b;SF-SAC 2008-2009: I/5/b;SF-SAC 2010-2012: I/5/b;SF-SAC 2013-2015: I/5/b;SF-SAC 2016-2018: I/5/b;SF-SAC 2019-2021: I/5/b;SF-SAC 2022: I/5/b Census mapping: GENERAL, STATE",
                        max_length=2,
                        verbose_name="Auditee State",
                    ),
                ),
                (
                    "cpa_state",
                    models.CharField(
                        help_text="Data sources: SF-SAC 1997-2000: I/7/b;SF-SAC 2001-2003: I/7/b;SF-SAC 2004-2007: I/7/b;SF-SAC 2008-2009: I/6/b;SF-SAC 2010-2012: I/6/b;SF-SAC 2013-2015: I/6/c;SF-SAC 2016-2018: I/6/c;SF-SAC 2019-2021: I/6/c;SF-SAC 2022: I/6/c Census mapping: GENERAL, CPASTATE",
                        max_length=2,
                        verbose_name="CPA State",
                    ),
                ),
                (
                    "cognizant_agency",
                    models.CharField(
                        help_text="Data sources: SF-SAC 1997-2000: I/9;SF-SAC 2001-2003: I/9 Census mapping: GENERAL, COGAGENCY",
                        max_length=2,
                        null=True,
                        verbose_name="Two digit Federal agency prefix of the cognizant agency",
                    ),
                ),
                (
                    "oversight_agency",
                    models.IntegerField(
                        help_text="Data sources: SF-SAC 1997-2000: I/9;SF-SAC 2001-2003: I/9 Census mapping: GENERAL, OVERSIGHTAGENCY",
                        null=True,
                        verbose_name="Two digit Federal agency prefix of the oversight agency",
                    ),
                ),
                (
                    "cpa_foreign",
                    models.CharField(
                        help_text="Data sources: SF-SAC 2019-2021: I/6/c;SF-SAC 2022: I/6/c Census mapping: GENERAL, CPAFOREIGN",
                        max_length=200,
                        null=True,
                        verbose_name="CPA Address - if international",
                    ),
                ),
                (
                    "ein_subcode",
                    models.IntegerField(
                        help_text="Census mapping: GENERAL, EINSUBCODE",
                        null=True,
                        verbose_name="Subcode assigned to the EIN",
                    ),
                ),
                (
                    "city",
                    models.CharField(
                        help_text="Data sources: SF-SAC 1997-2000: I/6/b;SF-SAC 2001-2003: I/6/b;SF-SAC 2004-2007: I/6/b;SF-SAC 2008-2009: I/5/b;SF-SAC 2010-2012: I/5/b;SF-SAC 2013-2015: I/5/b;SF-SAC 2016-2018: I/5/b;SF-SAC 2019-2021: I/5/b;SF-SAC 2022: I/5/b Census mapping: GENERAL, CITY",
                        max_length=30,
                        verbose_name="Auditee City",
                    ),
                ),
                (
                    "cpa_city",
                    models.CharField(
                        help_text="Data sources: SF-SAC 1997-2000: I/7/b;SF-SAC 2001-2003: I/7/b;SF-SAC 2004-2007: I/7/b;SF-SAC 2008-2009: I/6/b;SF-SAC 2010-2012: I/6/b;SF-SAC 2013-2015: I/6/c;SF-SAC 2016-2018: I/6/c;SF-SAC 2019-2021: I/6/c;SF-SAC 2022: I/6/c Census mapping: GENERAL, CPACITY",
                        max_length=30,
                        verbose_name="CPA City",
                    ),
                ),
                (
                    "auditee_title",
                    models.CharField(
                        help_text="Data sources: SF-SAC 1997-2000: I/6/c;SF-SAC 2001-2003: I/6/c;SF-SAC 2004-2007: I/6/c;SF-SAC 2008-2009: I/5/c;SF-SAC 2010-2012: I/5/c;SF-SAC 2013-2015: I/5/c;SF-SAC 2016-2018: I/5/c;SF-SAC 2019-2021: I/5/c;SF-SAC 2022: I/5/c Census mapping: GENERAL, AUDITEETITLE",
                        max_length=40,
                        verbose_name="Title of Auditee Contact",
                    ),
                ),
                (
                    "cpa_title",
                    models.CharField(
                        help_text="Data sources: SF-SAC 1997-2000: I/7/c;SF-SAC 2001-2003: I/7/c;SF-SAC 2004-2007: I/7/c;SF-SAC 2008-2009: I/6/c;SF-SAC 2010-2012: I/6/c;SF-SAC 2013-2015: I/6/d;SF-SAC 2016-2018: I/6/d;SF-SAC 2019-2021: I/6/d;SF-SAC 2022: I/6/d Census mapping: GENERAL, CPATITLE",
                        max_length=40,
                        verbose_name="Title of CPA Contact",
                    ),
                ),
                (
                    "street1",
                    models.CharField(
                        help_text="Data sources: SF-SAC 1997-2000: I/6/b;SF-SAC 2001-2003: I/6/b;SF-SAC 2004-2007: I/6/b;SF-SAC 2008-2009: I/5/b;SF-SAC 2010-2012: I/5/b;SF-SAC 2013-2015: I/5/b;SF-SAC 2016-2018: I/5/b;SF-SAC 2019-2021: I/5/b;SF-SAC 2022: I/5/b Census mapping: GENERAL, STREET1",
                        max_length=45,
                        verbose_name="Auditee Street Address",
                    ),
                ),
                (
                    "street2",
                    models.CharField(
                        help_text="Data sources: SF-SAC 1997-2000: I/6/b;SF-SAC 2001-2003: I/6/b;SF-SAC 2004-2007: I/6/b;SF-SAC 2008-2009: I/5/b;SF-SAC 2010-2012: I/5/b;SF-SAC 2013-2015: I/5/b;SF-SAC 2016-2018: I/5/b;SF-SAC 2019-2021: I/5/b;SF-SAC 2022: I/5/b Census mapping: GENERAL, STREET2",
                        max_length=45,
                        null=True,
                        verbose_name="Auditee Street Address",
                    ),
                ),
                (
                    "cpa_street1",
                    models.CharField(
                        help_text="Data sources: SF-SAC 1997-2000: I/7/b;SF-SAC 2001-2003: I/7/b;SF-SAC 2004-2007: I/7/b;SF-SAC 2008-2009: I/6/b;SF-SAC 2010-2012: I/6/b;SF-SAC 2013-2015: I/6/c;SF-SAC 2016-2018: I/6/c;SF-SAC 2019-2021: I/6/c;SF-SAC 2022: I/6/c Census mapping: GENERAL, CPASTREET1",
                        max_length=45,
                        verbose_name="CPA Street Address",
                    ),
                ),
                (
                    "cpa_street2",
                    models.CharField(
                        help_text="Data sources: SF-SAC 1997-2000: I/7/b;SF-SAC 2001-2003: I/7/b;SF-SAC 2004-2007: I/7/b;SF-SAC 2008-2009: I/6/b;SF-SAC 2010-2012: I/6/b;SF-SAC 2013-2015: I/6/c;SF-SAC 2016-2018: I/6/c;SF-SAC 2019-2021: I/6/c;SF-SAC 2022: I/6/c Census mapping: GENERAL, CPASTREET2",
                        max_length=45,
                        null=True,
                        verbose_name="CPA Street Address",
                    ),
                ),
                (
                    "zip_code",
                    models.IntegerField(
                        help_text="Data sources: SF-SAC 1997-2000: I/6/b;SF-SAC 2001-2003: I/6/b;SF-SAC 2004-2007: I/6/b;SF-SAC 2008-2009: I/5/b;SF-SAC 2010-2012: I/5/b;SF-SAC 2013-2015: I/5/b;SF-SAC 2016-2018: I/5/b;SF-SAC 2019-2021: I/5/b;SF-SAC 2022: I/5/b Census mapping: GENERAL, ZIPCODE",
                        verbose_name="Auditee Zipcode",
                    ),
                ),
                (
                    "cpa_zip_code",
                    models.IntegerField(
                        help_text="Data sources: SF-SAC 1997-2000: I/7/b;SF-SAC 2001-2003: I/7/b;SF-SAC 2004-2007: I/7/b;SF-SAC 2008-2009: I/6/b;SF-SAC 2010-2012: I/6/b;SF-SAC 2013-2015: I/6/c;SF-SAC 2016-2018: I/6/c;SF-SAC 2019-2021: I/6/c;SF-SAC 2022: I/6/c Census mapping: GENERAL, CPAZIPCODE",
                        verbose_name="CPA Zip Code",
                    ),
                ),
                (
                    "auditee_contact",
                    models.CharField(
                        help_text="Data sources: SF-SAC 1997-2000: I/6/c;SF-SAC 2001-2003: I/6/c;SF-SAC 2004-2007: I/6/c;SF-SAC 2008-2009: I/5/c;SF-SAC 2010-2012: I/5/c;SF-SAC 2013-2015: I/5/c;SF-SAC 2016-2018: I/5/c;SF-SAC 2019-2021: I/5/c;SF-SAC 2022: I/5/c Census mapping: GENERAL, AUDITEECONTACT",
                        max_length=50,
                        verbose_name="Name of Auditee Contact",
                    ),
                ),
                (
                    "auditee_certify_name",
                    models.CharField(
                        help_text="Data sources: SF-SAC 1997-2000: I/6/g;SF-SAC 2001-2003: I/6/g;SF-SAC 2004-2007: I/6/g;SF-SAC 2008-2009: I/5/g;SF-SAC 2010-2012: I/5/g;SF-SAC 2013-2015: certifications;SF-SAC 2016-2018: certifications;SF-SAC 2019-2021: certifications;SF-SAC 2022: certifications Census mapping: GENERAL, AUDITEECERTIFYNAME",
                        max_length=50,
                        null=True,
                        verbose_name="Name of Auditee Certifying Official",
                    ),
                ),
                (
                    "auditee_certify_title",
                    models.CharField(
                        help_text="Data sources: SF-SAC 1997-2000: I/6/g;SF-SAC 2001-2003: I/6/g;SF-SAC 2004-2007: I/6/g;SF-SAC 2008-2009: I/5/g;SF-SAC 2010-2012: I/5/g;SF-SAC 2013-2015: certifications;SF-SAC 2016-2018: certifications;SF-SAC 2019-2021: certifications;SF-SAC 2022: certifications Census mapping: GENERAL, AUDITEECERTIFYTITLE",
                        max_length=50,
                        null=True,
                        verbose_name="Title of Auditee Certifying Official",
                    ),
                ),
                (
                    "cpa_contact",
                    models.CharField(
                        help_text="Data sources: SF-SAC 1997-2000: I/7/c;SF-SAC 2001-2003: I/7/c;SF-SAC 2004-2007: I/7/c;SF-SAC 2008-2009: I/6/c;SF-SAC 2010-2012: I/6/c;SF-SAC 2013-2015: I/6/d;SF-SAC 2016-2018: I/6/d;SF-SAC 2019-2021: I/6/d;SF-SAC 2022: I/6/d Census mapping: GENERAL, CPACONTACT",
                        max_length=50,
                        verbose_name="Name of CPA Contact",
                    ),
                ),
                (
                    "entity_type",
                    models.CharField(
                        help_text="Census mapping: GENERAL, ENTITY_TYPE",
                        max_length=50,
                        verbose_name="Self reported type of entity (i.e., States, Local Governments, Indian Tribes, Institutions of Higher Education, NonProfit)",
                    ),
                ),
                (
                    "cpa_country",
                    models.CharField(
                        help_text="Data sources: SF-SAC 2019-2021: I/6/c;SF-SAC 2022: I/6/c Census mapping: GENERAL, CPACOUNTRY",
                        max_length=6,
                        null=True,
                        verbose_name="CPA Country",
                    ),
                ),
                (
                    "auditee_email",
                    models.CharField(
                        help_text="Data sources: SF-SAC 1997-2000: I/6/f;SF-SAC 2001-2003: I/6/f;SF-SAC 2004-2007: I/6/f;SF-SAC 2008-2009: I/5/f;SF-SAC 2010-2012: I/5/f;SF-SAC 2013-2015: I/5/f;SF-SAC 2016-2018: I/5/e;SF-SAC 2019-2021: I/5/e;SF-SAC 2022: I/5/e Census mapping: GENERAL, AUDITEEEMAIL",
                        max_length=60,
                        null=True,
                        verbose_name="Auditee Email address",
                    ),
                ),
                (
                    "cpa_email",
                    models.CharField(
                        help_text="Data sources: SF-SAC 1997-2000: I/7/f;SF-SAC 2001-2003: I/7/f;SF-SAC 2004-2007: I/7/f;SF-SAC 2008-2009: I/6/f;SF-SAC 2010-2012: I/6/f;SF-SAC 2013-2015: I/6/g;SF-SAC 2016-2018: I/6/f;SF-SAC 2019-2021: I/6/f;SF-SAC 2022: I/6/f Census mapping: GENERAL, CPAEMAIL",
                        max_length=60,
                        null=True,
                        verbose_name="CPA email address",
                    ),
                ),
                (
                    "cpa_firm_name",
                    models.CharField(
                        help_text="Data sources: SF-SAC 1997-2000: I/7/a;SF-SAC 2001-2003: I/7/a;SF-SAC 2004-2007: I/7/a;SF-SAC 2008-2009: I/6/a;SF-SAC 2010-2012: I/6/a;SF-SAC 2013-2015: I/6/a;SF-SAC 2016-2018: I/6/a;SF-SAC 2019-2021: I/6/a;SF-SAC 2022: I/6/a Census mapping: GENERAL, CPAFIRMNAME",
                        max_length=64,
                        verbose_name="CPA Firm Name",
                    ),
                ),
                (
                    "auditee_name",
                    models.CharField(
                        help_text="Data sources: SF-SAC 1997-2000: I/6/a;SF-SAC 2001-2003: I/6/a;SF-SAC 2004-2007: I/6/a;SF-SAC 2008-2009: I/5/a;SF-SAC 2010-2012: I/5/a;SF-SAC 2013-2015: I/5/a;SF-SAC 2016-2018: I/5/a;SF-SAC 2019-2021: I/5/a;SF-SAC 2022: I/5/a Census mapping: GENERAL, AUDITEENAME",
                        max_length=70,
                        verbose_name="Name of the Auditee",
                    ),
                ),
                (
                    "auditee_name_title",
                    models.CharField(
                        help_text="Data sources: SF-SAC 1997-2000: I/6/g;SF-SAC 2001-2003: I/6/g;SF-SAC 2004-2007: I/6/g;SF-SAC 2008-2009: I/5/g;SF-SAC 2010-2012: I/5/g;SF-SAC 2013-2015: certifications;SF-SAC 2016-2018: certifications;SF-SAC 2019-2021: certifications;SF-SAC 2022: certifications Census mapping: GENERAL, AUDITEENAMETITLE",
                        max_length=70,
                        verbose_name="Title of Auditee Certifying Official",
                    ),
                ),
                (
                    "ein",
                    models.IntegerField(
                        help_text="Data sources: SF-SAC 1997-2000: I/5/a;SF-SAC 2001-2003: I/5/a;SF-SAC 2004-2007: I/5/a;SF-SAC 2008-2009: I/4/a;SF-SAC 2010-2012: I/4/a;SF-SAC 2013-2015: I/4/a;SF-SAC 2016-2018: I/4/a;SF-SAC 2019-2021: I/4/a;SF-SAC 2022: I/4/a Census mapping: GENERAL, EIN",
                        verbose_name="Primary Employer Identification Number",
                    ),
                ),
                (
                    "duns",
                    models.IntegerField(
                        help_text="Data sources: SF-SAC 2004-2007: I/5/d;SF-SAC 2008-2009: I/4/d;SF-SAC 2010-2012: I/4/d;SF-SAC 2013-2015: I/4/d;SF-SAC 2016-2018: I/4/d;SF-SAC 2019-2021: I/4/d;SF-SAC 2022: I/4/d Census mapping: GENERAL, DUNS",
                        null=True,
                        verbose_name="Primary Data Universal Numbering System Number",
                    ),
                ),
                (
                    "auditor_ein",
                    models.IntegerField(
                        help_text="Data sources: SF-SAC 2013-2015: I/6/b;SF-SAC 2016-2018: I/6/b;SF-SAC 2019-2021: I/6/b;SF-SAC 2022: I/6/b Census mapping: GENERAL, AUDITOR_EIN",
                        verbose_name="CPA Firm EIN (only available for audit years 2013 and beyond)",
                    ),
                ),
                (
                    "period_covered",
                    models.CharField(
                        help_text="Data sources: SF-SAC 1997-2000: I/3;SF-SAC 2001-2003: I/3;SF-SAC 2004-2007: I/3;SF-SAC 2008-2009: I/3;SF-SAC 2010-2012: I/3;SF-SAC 2013-2015: I/3;SF-SAC 2016-2018: I/3;SF-SAC 2019-2021: I/3;SF-SAC 2022: I/3 Census mapping: GENERAL, PERIODCOVERED",
                        max_length=40,
                        verbose_name="Audit Period Covered by Audit",
                    ),
                ),
                (
                    "sp_framework",
                    models.CharField(
                        help_text="Data sources: SF-SAC 2016-2018: III/2/a/ii;SF-SAC 2019-2021: III/2/a/i;SF-SAC 2022: III/2/a/i Census mapping: GENERAL, SP_FRAMEWORK",
                        max_length=40,
                        null=True,
                        verbose_name="Special Purpose Framework that was used as the basis of accounting",
                    ),
                ),
                (
                    "type_of_entity",
                    models.CharField(
                        help_text="Census mapping: GENERAL, TYPEOFENTITY",
                        max_length=40,
                        verbose_name="Contact FAC for information",
                    ),
                ),
                (
                    "fy_start_date",
                    models.DateField(
                        help_text="Data sources: SF-SAC 2019-2021: Part I, Item 1(a);SF-SAC 2022: Part I, Item 1(a) Census mapping: GENERAL, FYSTARTDATE",
                        null=True,
                        verbose_name="Fiscal Year Start Date",
                    ),
                ),
                (
                    "fy_end_date",
                    models.DateField(
                        help_text="Data sources: SF-SAC 1997-2000: Part I, Item 1;SF-SAC 2001-2003: Part I, Item 1;SF-SAC 2004-2007: Part I, Item 1;SF-SAC 2008-2009: Part I, Item 1;SF-SAC 2010-2012: Part I, Item 1;SF-SAC 2013-2015: Part I, Item 1;SF-SAC 2016-2018: Part I, Item 1;SF-SAC 2019-2021: I/1/b;SF-SAC 2022: I/1/b Census mapping: GENERAL, FYENDDATE",
                        verbose_name="Fiscal Year End Date",
                    ),
                ),
                (
                    "auditee_date_signed",
                    models.DateField(
                        help_text="Data sources: SF-SAC 1997-2000: I/6/g;SF-SAC 2001-2003: I/6/g;SF-SAC 2004-2007: I/6/g;SF-SAC 2008-2009: I/5/g;SF-SAC 2010-2012: I/5/g;SF-SAC 2013-2015: certifications;SF-SAC 2016-2018: certifications;SF-SAC 2019-2021: certifications;SF-SAC 2022: certifications Census mapping: GENERAL, AUDITEEDATESIGNED",
                        verbose_name="Date of Auditee signature",
                    ),
                ),
                (
                    "cpa_date_signed",
                    models.DateField(
                        help_text="Data sources: SF-SAC 1997-2000: I/7/g;SF-SAC 2001-2003: I/7/g;SF-SAC 2004-2007: I/7/g;SF-SAC 2008-2009: I/6/g;SF-SAC 2010-2012: I/6/g;SF-SAC 2013-2015: certifications;SF-SAC 2016-2018: certifications;SF-SAC 2019-2021: certifications;SF-SAC 2022: certifications Census mapping: GENERAL, CPADATESIGNED",
                        verbose_name="Date of CPA signature",
                    ),
                ),
                (
                    "initial_date_received",
                    models.DateField(
                        help_text="Census mapping: GENERAL, INITIAL DATE RECEIVED",
                        null=True,
                        verbose_name="The first date an audit component or Form SF-SAC was received by the Federal audit Clearinghouse (FAC).",
                    ),
                ),
                (
                    "form_date_received",
                    models.DateField(
                        help_text="Census mapping: GENERAL, FORM DATE RECEIVED",
                        null=True,
                        verbose_name="The most Recent Date the Form SF-SAC was received by the FAC. This field was not populated before 2001.",
                    ),
                ),
                (
                    "component_date_received",
                    models.DateField(
                        help_text="Census mapping: GENERAL, COMPONENT DATE RECEIVED",
                        null=True,
                        verbose_name="The most recent date an audit component was received by the FAC. This field was not populated before 2004. Receipt of Financial statements only are not processed until the rest of the audit or a Form SF-SAC is also received.",
                    ),
                ),
                (
                    "completed_on",
                    models.DateField(
                        help_text="Census mapping: GENERAL, COMPLETED_ON",
                        null=True,
                        verbose_name="Date the Audit was Posted to the Internet as Complete",
                    ),
                ),
                (
                    "previous_completed_on",
                    models.DateField(
                        help_text="Census mapping: GENERAL, PREVIOUS_COMPLETED_ON",
                        null=True,
                        verbose_name="Date the Audit was Previously Posted to the Internet as Complete",
                    ),
                ),
                (
                    "fac_accepted_date",
                    models.DateField(
                        help_text="Census mapping: GENERAL, FAC ACCEPTED DATE",
                        verbose_name="The most recent date an audit report was submitted to the FAC that passed FAC screening and was accepted as a valid OMB Circular A-133 report submission.",
                    ),
                ),
                (
                    "number_months",
                    models.IntegerField(
                        help_text="Data sources: SF-SAC 1997-2000: I/3;SF-SAC 2001-2003: I/3;SF-SAC 2004-2007: I/3;SF-SAC 2008-2009: I/3;SF-SAC 2010-2012: I/3;SF-SAC 2013-2015: I/3;SF-SAC 2016-2018: I/3;SF-SAC 2019-2021: I/3;SF-SAC 2022: I/3 Census mapping: GENERAL, NUMBERMONTHS",
                        null=True,
                        verbose_name="Number of Months Covered by the 'Other' Audit Period",
                    ),
                ),
                (
                    "audit_type",
                    models.CharField(
                        help_text="Data sources: SF-SAC 1997-2000: I/2;SF-SAC 2001-2003: I/2;SF-SAC 2004-2007: I/2;SF-SAC 2008-2009: I/2;SF-SAC 2010-2012: I/2;SF-SAC 2013-2015: I/2;SF-SAC 2016-2018: I/2;SF-SAC 2019-2021: I/2;SF-SAC 2022: I/2 Census mapping: GENERAL, AUDITTYPE",
                        max_length=40,
                        verbose_name="Type of Audit",
                    ),
                ),
                (
                    "type_report_financial_statements",
                    models.CharField(
                        help_text="Data sources: SF-SAC 1997-2000: II/1;SF-SAC 2001-2003: II/1;SF-SAC 2004-2007: II/1;SF-SAC 2008-2009: II/1;SF-SAC 2010-2012: II/1;SF-SAC 2013-2015: II/1;SF-SAC 2016-2018: III/2/a/i;SF-SAC 2019-2021: III/2/a;SF-SAC 2022: III/2/a Census mapping: GENERAL, TYPEREPORT_FS",
                        max_length=40,
                        null=True,
                        verbose_name="Type of Report Issued on the Financial Statements",
                    ),
                ),
                (
                    "type_report_special_purpose_framework",
                    models.CharField(
                        help_text="Data sources: SF-SAC 2016-2018: III/2/a/iv;SF-SAC 2019-2021: III/2/a/iii;SF-SAC 2022: III/2/a/iii Census mapping: GENERAL, TYPEREPORT_SP_FRAMEWORK",
                        max_length=40,
                        null=True,
                        verbose_name="The auditor's opinion on the special purpose framework",
                    ),
                ),
                (
                    "type_report_major_program",
                    models.CharField(
                        help_text="Data sources: SF-SAC 1997-2000: III/1;SF-SAC 2001-2003: III/1 Census mapping: GENERAL, TYPEREPORT_MP",
                        max_length=40,
                        null=True,
                        verbose_name="Type of Report Issued on the Major Program Compliance",
                    ),
                ),
                (
                    "dbkey",
                    models.CharField(
                        help_text="Census mapping: GENERAL, DBKEY",
                        max_length=40,
                        verbose_name="Audit Year and DBKEY (database key) combined make up the primary key.",
                    ),
                ),
                (
                    "audit_year",
                    models.CharField(
                        help_text="Census mapping: GENERAL, AUDITYEAR",
                        max_length=40,
                        verbose_name="Audit Year and DBKEY (database key) combined make up the primary key.",
                    ),
                ),
                ("date_firewall", models.DateField(null=True)),
                ("previous_date_firewall", models.DateField(null=True)),
                ("cognizant_agency_over", models.CharField(max_length=2, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="MultipleCpasInfo",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "cpa_phone",
                    models.PositiveBigIntegerField(
                        help_text="Data sources: SF-SAC 2008-2009: I/8/d;SF-SAC 2010-2012: I/8/d;SF-SAC 2013-2015: I/8/i;SF-SAC 2016-2018: I/8/i;SF-SAC 2019-2021: I/6/h/ix;SF-SAC 2022: I/6/h/ix Census mapping: MULTIPLE CPAS INFO, CPAPHONE",
                        null=True,
                        verbose_name="CPA phone number",
                    ),
                ),
                (
                    "cpa_fax",
                    models.PositiveBigIntegerField(
                        help_text="Data sources: SF-SAC 2008-2009: I/8/e;SF-SAC 2010-2012: I/8/e;SF-SAC 2013-2015: I/8/j;SF-SAC 2016-2018: I/8/j Census mapping: MULTIPLE CPAS INFO, CPAFAX",
                        null=True,
                        verbose_name="CPA fax number (optional)",
                    ),
                ),
                (
                    "cpa_state",
                    models.CharField(
                        help_text="Data sources: SF-SAC 2008-2009: I/8/b;SF-SAC 2010-2012: I/8/b;SF-SAC 2013-2015: I/8/e;SF-SAC 2016-2018: I/8/e;SF-SAC 2019-2021: I/6/h/v;SF-SAC 2022: I/6/h/v Census mapping: MULTIPLE CPAS INFO, CPASTATE",
                        max_length=2,
                        verbose_name="CPA State",
                    ),
                ),
                (
                    "cpa_city",
                    models.CharField(
                        help_text="Data sources: SF-SAC 2008-2009: I/8/b;SF-SAC 2010-2012: I/8/b;SF-SAC 2013-2015: I/8/d;SF-SAC 2016-2018: I/8/d;SF-SAC 2019-2021: I/6/h/iv;SF-SAC 2022: I/6/h/iv Census mapping: MULTIPLE CPAS INFO, CPACITY",
                        max_length=30,
                        verbose_name="CPA City",
                    ),
                ),
                (
                    "cpa_title",
                    models.CharField(
                        help_text="Data sources: SF-SAC 2008-2009: I/8/c;SF-SAC 2010-2012: I/8/c;SF-SAC 2013-2015: I/8/h;SF-SAC 2016-2018: I/8/h;SF-SAC 2019-2021: I/6/h/viii;SF-SAC 2022: I/6/h/viii Census mapping: MULTIPLE CPAS INFO, CPATITLE",
                        max_length=40,
                        verbose_name="Title of CPA Contact",
                    ),
                ),
                (
                    "cpa_street1",
                    models.CharField(
                        help_text="Data sources: SF-SAC 2008-2009: I/8/b;SF-SAC 2010-2012: I/8/b;SF-SAC 2013-2015: I/8/c;SF-SAC 2016-2018: I/8/c;SF-SAC 2019-2021: I/6/h/iii;SF-SAC 2022: I/6/h/iii Census mapping: MULTIPLE CPAS INFO, CPASTREET1",
                        max_length=45,
                        verbose_name="CPA Street Address",
                    ),
                ),
                (
                    "cpa_zip_code",
                    models.IntegerField(
                        help_text="Data sources: SF-SAC 2008-2009: I/8/b;SF-SAC 2010-2012: I/8/b;SF-SAC 2013-2015: I/8/f;SF-SAC 2016-2018: I/8/f;SF-SAC 2019-2021: I/6/h/vi;SF-SAC 2022: I/6/h/vi Census mapping: MULTIPLE CPAS INFO, CPAZIPCODE",
                        null=True,
                        verbose_name="CPA Zip Code",
                    ),
                ),
                (
                    "cpa_contact",
                    models.CharField(
                        help_text="Data sources: SF-SAC 2008-2009: I/8/c;SF-SAC 2010-2012: I/8/c;SF-SAC 2013-2015: I/8/g;SF-SAC 2016-2018: I/8/g;SF-SAC 2019-2021: I/6/h/vii;SF-SAC 2022: I/6/h/vii Census mapping: MULTIPLE CPAS INFO, CPACONTACT",
                        max_length=50,
                        verbose_name="Name of CPA Contact",
                    ),
                ),
                (
                    "cpa_firm_name",
                    models.CharField(
                        help_text="Data sources: SF-SAC 2008-2009: I/8/a;SF-SAC 2010-2012: I/8/a;SF-SAC 2013-2015: I/8/a;SF-SAC 2016-2018: I/8/a;SF-SAC 2019-2021: I/6/h/i;SF-SAC 2022: I/6/h/i Census mapping: MULTIPLE CPAS INFO, CPAFIRMNAME",
                        max_length=64,
                        verbose_name="CPA Firm Name",
                    ),
                ),
                (
                    "cpa_ein",
                    models.IntegerField(
                        help_text="Data sources: SF-SAC 2013-2015: I/8/b;SF-SAC 2016-2018: I/8/b;SF-SAC 2019-2021: I/6/h/ii;SF-SAC 2022: I/6/h/ii Census mapping: MULTIPLE CPAS INFO, CPAEIN",
                        null=True,
                        verbose_name="CPA Firm EIN (only available for audit years 2013 and beyond)",
                    ),
                ),
                (
                    "dbkey",
                    models.CharField(
                        help_text="Census mapping: MULTIPLE CPAS INFO, DBKEY",
                        max_length=40,
                        verbose_name="Audit Year and DBKEY (database key) combined make up the primary key.",
                    ),
                ),
                (
                    "audit_year",
                    models.CharField(
                        help_text="Census mapping: MULTIPLE CPAS INFO, AUDITYEAR",
                        max_length=40,
                        verbose_name="Audit Year and DBKEY (database key) combined make up the primary key.",
                    ),
                ),
                (
                    "seqnum",
                    models.IntegerField(
                        help_text="Census mapping: MULTIPLE CPAS INFO, SEQNUM",
                        null=True,
                        verbose_name="Order that Auditors were reported on page 5 of SF-SAC",
                    ),
                ),
                (
                    "cpa_email",
                    models.CharField(
                        help_text="Data sources: SF-SAC 2008-2009: I/8/f;SF-SAC 2010-2012: I/8/f;SF-SAC 2013-2015: I/8/k;SF-SAC 2016-2018: I/8/k;SF-SAC 2019-2021: I/6/h/x;SF-SAC 2022: I/6/h/x Census mapping: MULTIPLE CPAS INFO, CPAEMAIL",
                        max_length=60,
                        null=True,
                        verbose_name="CPA mail address (optional)",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Notes",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "type_id",
                    models.CharField(
                        help_text="Census mapping: NOTES, TYPE_ID",
                        max_length=1,
                        verbose_name="Note Type",
                    ),
                ),
                (
                    "fac_id",
                    models.IntegerField(
                        help_text="Census mapping: NOTES, ID",
                        verbose_name="Internal Unique Identifier for the record",
                    ),
                ),
                (
                    "report_id",
                    models.IntegerField(
                        help_text="Census mapping: NOTES, REPORTID",
                        verbose_name="Internal Audit Report Id",
                    ),
                ),
                (
                    "version",
                    models.IntegerField(
                        help_text="Census mapping: NOTES, VERSION",
                        verbose_name="Internal Version",
                    ),
                ),
                (
                    "seq_number",
                    models.IntegerField(
                        help_text="Census mapping: NOTES, SEQ_NUMBER",
                        verbose_name="Order that the Note was reported",
                    ),
                ),
                (
                    "note_index",
                    models.IntegerField(
                        help_text="Census mapping: NOTES, NOTE_INDEX",
                        verbose_name="Display Index for the Note",
                    ),
                ),
                (
                    "content",
                    models.TextField(
                        help_text="Data sources: SF-SAC 2019-2021: II/2;SF-SAC 2022: II/2 Census mapping: NOTES, CONTENT",
                        verbose_name="Content of the Note",
                    ),
                ),
                (
                    "title",
                    models.CharField(
                        help_text="Data sources: SF-SAC 2019-2021: II/2;SF-SAC 2022: II/2 Census mapping: NOTES, TITLE",
                        max_length=75,
                        verbose_name="Note Title",
                    ),
                ),
                (
                    "dbkey",
                    models.CharField(
                        help_text="Census mapping: NOTES, DBKEY",
                        max_length=40,
                        verbose_name="Audit Year and DBKEY (database key) combined make up the primary key.",
                    ),
                ),
                (
                    "audit_year",
                    models.CharField(
                        help_text="Census mapping: NOTES, AUDITYEAR",
                        max_length=40,
                        verbose_name="Audit Year and DBKEY (database key) combined make up the primary key.",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Passthrough",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "passthrough_name",
                    models.CharField(
                        help_text="Data sources: SF-SAC 2016-2018: II/1/l;SF-SAC 2019-2021: II/1/l;SF-SAC 2022: II/1/l Census mapping: PASSTHROUGH, PASSTHROUGHNAME",
                        max_length=70,
                        verbose_name="Name of Pass-through Entity",
                    ),
                ),
                (
                    "passthrough_id",
                    models.CharField(
                        help_text="Data sources: SF-SAC 2016-2018: II/1/m;SF-SAC 2019-2021: II/1/m;SF-SAC 2022: II/1/m Census mapping: PASSTHROUGH, PASSTHROUGHID",
                        max_length=70,
                        verbose_name="Identifying Number Assigned by the Pass-through Entity",
                    ),
                ),
                (
                    "elec_audits_id",
                    models.IntegerField(
                        help_text="Census mapping: PASSTHROUGH, ELECAUDITSID",
                        verbose_name="FAC system generated sequence number used to link to Passthrough data between CFDA Info and Passthrough",
                    ),
                ),
                (
                    "audit_year",
                    models.CharField(
                        help_text="Census mapping: PASSTHROUGH, AUDITYEAR",
                        max_length=40,
                        verbose_name="Audit Year and DBKEY (database key) combined make up the primary key",
                    ),
                ),
                (
                    "dbkey",
                    models.CharField(
                        help_text="Census mapping: PASSTHROUGH, DBKEY",
                        max_length=40,
                        verbose_name="Audit Year and DBKEY (database key) combined make up the primary key",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Revisions",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "findings",
                    models.CharField(
                        help_text="Census mapping: REVISIONS, FINDINGS",
                        max_length=110,
                        verbose_name="Indicates what items on the Findings page were edited during the revision",
                    ),
                ),
                (
                    "elec_report_revision_id",
                    models.IntegerField(
                        help_text="Census mapping: REVISIONS, ELECRPTREVISIONID",
                        verbose_name="Internal Unique Identifier for the record",
                    ),
                ),
                (
                    "federal_awards",
                    models.CharField(
                        help_text="Census mapping: REVISIONS, FEDERALAWARDS",
                        max_length=140,
                        verbose_name="Indicates what items on the Federal Awards page were edited during the revision",
                    ),
                ),
                (
                    "general_info_explain",
                    models.CharField(
                        help_text="Census mapping: REVISIONS, GENINFO_EXPLAIN",
                        max_length=150,
                        verbose_name="Explanation of what items on the General Info page were edited during the revision",
                    ),
                ),
                (
                    "federal_awards_explain",
                    models.TextField(
                        help_text="Census mapping: REVISIONS, FEDERALAWARDS_EXPLAIN",
                        verbose_name="Explanation of what items on the Federal Awards page were edited during the revision",
                    ),
                ),
                (
                    "notes_to_sefa_explain",
                    models.TextField(
                        help_text="Census mapping: REVISIONS, NOTESTOSEFA_EXPLAIN",
                        verbose_name="Explanation of what items on the Notes to SEFA page were edited during the revision",
                    ),
                ),
                (
                    "auditinfo_explain",
                    models.TextField(
                        help_text="Census mapping: REVISIONS, AUDITINFO_EXPLAIN",
                        verbose_name="Explanation of what items on the Audit Info page were edited during the revision",
                    ),
                ),
                (
                    "findings_explain",
                    models.TextField(
                        help_text="Census mapping: REVISIONS, FINDINGS_EXPLAIN",
                        verbose_name="Explanation of what items on the Findings page were edited during the revision",
                    ),
                ),
                (
                    "findings_text_explain",
                    models.TextField(
                        help_text="Census mapping: REVISIONS, FINDINGSTEXT_EXPLAIN",
                        verbose_name="Explanation of what items on the Text of the Audit Findings page were edited during the revision",
                    ),
                ),
                (
                    "cap_explain",
                    models.TextField(
                        help_text="Census mapping: REVISIONS, CAP_EXPLAIN",
                        verbose_name="Explanation of what items on the CAP Text page were edited during the revision",
                    ),
                ),
                (
                    "other_explain",
                    models.TextField(
                        help_text="Census mapping: REVISIONS, OTHER_EXPLAIN",
                        verbose_name="Explanation of what other miscellaneous items were edited during the revision",
                    ),
                ),
                (
                    "audit_info",
                    models.CharField(
                        help_text="Census mapping: REVISIONS, AUDITINFO",
                        max_length=200,
                        verbose_name="Indicates what items on the Audit Info page were edited during the revision",
                    ),
                ),
                (
                    "notes_to_sefa",
                    models.CharField(
                        help_text="Census mapping: REVISIONS, NOTESTOSEFA",
                        max_length=50,
                        verbose_name="Indicates what items on the Notes to SEFA page were edited during the revision",
                    ),
                ),
                (
                    "findings_text",
                    models.CharField(
                        help_text="Census mapping: REVISIONS, FINDINGSTEXT",
                        max_length=6,
                        verbose_name="Indicates what items on the Text of the Audit Findings page were edited during the revision",
                    ),
                ),
                (
                    "cap",
                    models.CharField(
                        help_text="Census mapping: REVISIONS, CAP",
                        max_length=6,
                        verbose_name="Indicates what items on the CAP Text page were edited during the revision",
                    ),
                ),
                (
                    "other",
                    models.CharField(
                        help_text="Census mapping: REVISIONS, OTHER",
                        max_length=65,
                        verbose_name="Indicates what other miscellaneous items were edited during the revision",
                    ),
                ),
                (
                    "general_info",
                    models.CharField(
                        help_text="Census mapping: REVISIONS, GENINFO",
                        max_length=75,
                        verbose_name="Indicates what items on the General Info page were edited during the revision",
                    ),
                ),
                (
                    "audit_year",
                    models.CharField(
                        help_text="Census mapping: REVISIONS, AUDITYEAR",
                        max_length=40,
                        verbose_name="Audit Year and DBKEY (database key) combined make up the primary key.",
                    ),
                ),
                (
                    "dbkey",
                    models.CharField(
                        help_text="Census mapping: REVISIONS, DBKEY",
                        max_length=40,
                        verbose_name="Audit Year and DBKEY (database key) combined make up the primary key.",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="UeiInfo",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "uei",
                    models.CharField(
                        help_text="Data sources: SF-SAC 2004-2007: I/5/f;SF-SAC 2008-2009: I/4/f;SF-SAC 2010-2012: I/4/f;SF-SAC 2013-2015: I/4/f;SF-SAC 2016-2018: I/4/f;SF-SAC 2019-2021: I/4/f;SF-SAC 2022: I/4/i Census mapping: UEI INFO, UEI",
                        max_length=12,
                        verbose_name="Multiple Unique Entity Identifier Numbers",
                    ),
                ),
                (
                    "uei_seq_num",
                    models.IntegerField(
                        help_text="Census mapping: UEI INFO, UEISEQNUM",
                        verbose_name="Order that UEI was reported on page 4 of SF-SAC",
                    ),
                ),
                (
                    "dbkey",
                    models.CharField(
                        help_text="Census mapping: UEI INFO, DBKEY",
                        max_length=40,
                        verbose_name="Audit Year and DBKEY (database key) combined make up the primary key.",
                    ),
                ),
                (
                    "audit_year",
                    models.CharField(
                        help_text="Census mapping: UEI INFO, AUDITYEAR",
                        max_length=40,
                        verbose_name="Audit Year and DBKEY (database key) combined make up the primary key.",
                    ),
                ),
            ],
        ),
    ]
