"""
- Adding the new models before deleting the now, redundant fields
- CpaText is a rename from Cpaext
- Format help text to make it more readable
- Adding some metadata
"""

# Generated by Django 4.1.4 on 2023-01-25 15:53


import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):
    dependencies = [
        ("data_distro", "0003_add_relationships_between_models"),
    ]

    operations = [
        migrations.CreateModel(
            name="Auditee",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "auditee_certify_name",
                    models.CharField(
                        help_text="Data sources: SF-SAC 1997-2000: I/6/g; SF-SAC 2001-2003: I/6/g; SF-SAC 2004-2007: I/6/g; SF-SAC 2008-2009: I/5/g; SF-SAC 2010-2012: I/5/g; SF-SAC 2013-2015: certifications; SF-SAC 2016-2018: certifications; SF-SAC 2019-2021: certifications; SF-SAC 2022: certifications Census mapping: GENERAL, AUDITEECERTIFYNAME",
                        max_length=50,
                        null=True,
                        verbose_name="Name of Auditee Certifying Official",
                    ),
                ),
                (
                    "auditee_certify_title",
                    models.CharField(
                        help_text="Data sources: SF-SAC 1997-2000: I/6/g; SF-SAC 2001-2003: I/6/g; SF-SAC 2004-2007: I/6/g; SF-SAC 2008-2009: I/5/g; SF-SAC 2010-2012: I/5/g; SF-SAC 2013-2015: certifications; SF-SAC 2016-2018: certifications; SF-SAC 2019-2021: certifications; SF-SAC 2022: certifications Census mapping: GENERAL, AUDITEECERTIFYTITLE",
                        max_length=50,
                        null=True,
                        verbose_name="Title of Auditee Certifying Official",
                    ),
                ),
                (
                    "auditee_contact",
                    models.CharField(
                        help_text="Data sources: SF-SAC 1997-2000: I/6/c; SF-SAC 2001-2003: I/6/c; SF-SAC 2004-2007: I/6/c; SF-SAC 2008-2009: I/5/c; SF-SAC 2010-2012: I/5/c; SF-SAC 2013-2015: I/5/c; SF-SAC 2016-2018: I/5/c; SF-SAC 2019-2021: I/5/c; SF-SAC 2022: I/5/c Census mapping: GENERAL, AUDITEECONTACT",
                        max_length=50,
                        verbose_name="Name of Auditee Contact",
                    ),
                ),
                (
                    "auditee_email",
                    models.CharField(
                        help_text="Data sources: SF-SAC 1997-2000: I/6/f; SF-SAC 2001-2003: I/6/f; SF-SAC 2004-2007: I/6/f; SF-SAC 2008-2009: I/5/f; SF-SAC 2010-2012: I/5/f; SF-SAC 2013-2015: I/5/f; SF-SAC 2016-2018: I/5/e; SF-SAC 2019-2021: I/5/e; SF-SAC 2022: I/5/e Census mapping: GENERAL, AUDITEEEMAIL",
                        max_length=60,
                        null=True,
                        verbose_name="Auditee Email address",
                    ),
                ),
                (
                    "auditee_fax",
                    models.PositiveBigIntegerField(
                        help_text="Data sources: SF-SAC 1997-2000: I/6/e; SF-SAC 2001-2003: I/6/e; SF-SAC 2004-2007: I/6/e; SF-SAC 2008-2009: I/5/e; SF-SAC 2010-2012: I/5/e; SF-SAC 2013-2015: I/5/e Census mapping: GENERAL, AUDITEEFAX",
                        null=True,
                        verbose_name="Auditee Fax Number (optional)",
                    ),
                ),
                (
                    "auditee_name",
                    models.CharField(
                        help_text="Data sources: SF-SAC 1997-2000: I/6/a; SF-SAC 2001-2003: I/6/a; SF-SAC 2004-2007: I/6/a; SF-SAC 2008-2009: I/5/a; SF-SAC 2010-2012: I/5/a; SF-SAC 2013-2015: I/5/a; SF-SAC 2016-2018: I/5/a; SF-SAC 2019-2021: I/5/a; SF-SAC 2022: I/5/a Census mapping: GENERAL, AUDITEENAME",
                        max_length=70,
                        verbose_name="Name of the Auditee",
                    ),
                ),
                (
                    "auditee_name_title",
                    models.CharField(
                        help_text="Data sources: SF-SAC 1997-2000: I/6/g; SF-SAC 2001-2003: I/6/g; SF-SAC 2004-2007: I/6/g; SF-SAC 2008-2009: I/5/g; SF-SAC 2010-2012: I/5/g; SF-SAC 2013-2015: certifications; SF-SAC 2016-2018: certifications; SF-SAC 2019-2021: certifications; SF-SAC 2022: certifications Census mapping: GENERAL, AUDITEENAMETITLE",
                        max_length=70,
                        verbose_name="Title of Auditee Certifying Official",
                    ),
                ),
                (
                    "auditee_phone",
                    models.PositiveBigIntegerField(
                        help_text="Data sources: SF-SAC 1997-2000: I/6/d; SF-SAC 2001-2003: I/6/d; SF-SAC 2004-2007: I/6/d; SF-SAC 2008-2009: I/5/d; SF-SAC 2010-2012: I/5/d; SF-SAC 2013-2015: I/5/d; SF-SAC 2016-2018: I/5/d; SF-SAC 2019-2021: I/5/d; SF-SAC 2022: I/5/d Census mapping: GENERAL, AUDITEEPHONE",
                        verbose_name="Auditee Phone Number",
                    ),
                ),
                (
                    "auditee_title",
                    models.CharField(
                        help_text="Data sources: SF-SAC 1997-2000: I/6/c; SF-SAC 2001-2003: I/6/c; SF-SAC 2004-2007: I/6/c; SF-SAC 2008-2009: I/5/c; SF-SAC 2010-2012: I/5/c; SF-SAC 2013-2015: I/5/c; SF-SAC 2016-2018: I/5/c; SF-SAC 2019-2021: I/5/c; SF-SAC 2022: I/5/c Census mapping: GENERAL, AUDITEETITLE",
                        max_length=40,
                        verbose_name="Title of Auditee Contact",
                    ),
                ),
                (
                    "street1",
                    models.CharField(
                        help_text="Data sources: SF-SAC 1997-2000: I/6/b; SF-SAC 2001-2003: I/6/b; SF-SAC 2004-2007: I/6/b; SF-SAC 2008-2009: I/5/b; SF-SAC 2010-2012: I/5/b; SF-SAC 2013-2015: I/5/b; SF-SAC 2016-2018: I/5/b; SF-SAC 2019-2021: I/5/b; SF-SAC 2022: I/5/b Census mapping: GENERAL, STREET1",
                        max_length=45,
                        verbose_name="Auditee Street Address",
                    ),
                ),
                (
                    "street2",
                    models.CharField(
                        help_text="Data sources: SF-SAC 1997-2000: I/6/b; SF-SAC 2001-2003: I/6/b; SF-SAC 2004-2007: I/6/b; SF-SAC 2008-2009: I/5/b; SF-SAC 2010-2012: I/5/b; SF-SAC 2013-2015: I/5/b; SF-SAC 2016-2018: I/5/b; SF-SAC 2019-2021: I/5/b; SF-SAC 2022: I/5/b Census mapping: GENERAL, STREET2",
                        max_length=45,
                        null=True,
                        verbose_name="Auditee Street Address",
                    ),
                ),
                (
                    "city",
                    models.CharField(
                        help_text="Data sources: SF-SAC 1997-2000: I/6/b; SF-SAC 2001-2003: I/6/b; SF-SAC 2004-2007: I/6/b; SF-SAC 2008-2009: I/5/b; SF-SAC 2010-2012: I/5/b; SF-SAC 2013-2015: I/5/b; SF-SAC 2016-2018: I/5/b; SF-SAC 2019-2021: I/5/b; SF-SAC 2022: I/5/b Census mapping: GENERAL, CITY",
                        max_length=30,
                        verbose_name="Auditee City",
                    ),
                ),
                (
                    "state",
                    models.CharField(
                        help_text="Data sources: SF-SAC 1997-2000: I/6/b; SF-SAC 2001-2003: I/6/b; SF-SAC 2004-2007: I/6/b; SF-SAC 2008-2009: I/5/b; SF-SAC 2010-2012: I/5/b; SF-SAC 2013-2015: I/5/b; SF-SAC 2016-2018: I/5/b; SF-SAC 2019-2021: I/5/b; SF-SAC 2022: I/5/b Census mapping: GENERAL, STATE",
                        max_length=2,
                        verbose_name="Auditee State",
                    ),
                ),
                (
                    "zip_code",
                    models.CharField(
                        help_text="Data sources: SF-SAC 1997-2000: I/6/b; SF-SAC 2001-2003: I/6/b; SF-SAC 2004-2007: I/6/b; SF-SAC 2008-2009: I/5/b; SF-SAC 2010-2012: I/5/b; SF-SAC 2013-2015: I/5/b; SF-SAC 2016-2018: I/5/b; SF-SAC 2019-2021: I/5/b; SF-SAC 2022: I/5/b Census mapping: GENERAL, ZIPCODE",
                        max_length=12,
                        verbose_name="Auditee Zipcode",
                    ),
                ),
                (
                    "duns_list",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.IntegerField(
                            help_text="Data sources: SF-SAC 2004-2007: I/5/d; SF-SAC 2008-2009: I/4/d; SF-SAC 2010-2012: I/4/d; SF-SAC 2013-2015: I/4/d; SF-SAC 2016-2018: I/4/d; SF-SAC 2019-2021: I/4/d; SF-SAC 2022: I/4/d Census mapping: GENERAL, DUNS",
                            verbose_name="Multiple Data Universal Numbering System Numbers, an array of DUNS numbers of the Auditee.",
                        ),
                        size=None,
                    ),
                ),
                (
                    "uei_list",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(
                            help_text="Data sources: SF-SAC 2022: I/4/g Census mapping: GENERAL, UEI",
                            max_length=12,
                            verbose_name="Unique Entity ID",
                        ),
                        size=None,
                    ),
                ),
                (
                    "is_public",
                    models.BooleanField(
                        verbose_name="True if appears in a public record"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Auditor",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "cpa_phone",
                    models.PositiveBigIntegerField(
                        help_text="Data sources: SF-SAC 2008-2009: I/8/d; SF-SAC 2010-2012: I/8/d; SF-SAC 2013-2015: I/8/i; SF-SAC 2016-2018: I/8/i; SF-SAC 2019-2021: I/6/h/ix; SF-SAC 2022: I/6/h/ix Census mapping: MULTIPLE CPAS INFO, CPAPHONE",
                        null=True,
                        verbose_name="CPA phone number",
                    ),
                ),
                (
                    "cpa_fax",
                    models.PositiveBigIntegerField(
                        help_text="Data sources: SF-SAC 2008-2009: I/8/e; SF-SAC 2010-2012: I/8/e; SF-SAC 2013-2015: I/8/j; SF-SAC 2016-2018: I/8/j Census mapping: MULTIPLE CPAS INFO, CPAFAX",
                        null=True,
                        verbose_name="CPA fax number (optional)",
                    ),
                ),
                (
                    "cpa_state",
                    models.CharField(
                        help_text="Data sources: SF-SAC 2008-2009: I/8/b; SF-SAC 2010-2012: I/8/b; SF-SAC 2013-2015: I/8/e; SF-SAC 2016-2018: I/8/e; SF-SAC 2019-2021: I/6/h/v; SF-SAC 2022: I/6/h/v Census mapping: MULTIPLE CPAS INFO, CPASTATE",
                        max_length=2,
                        verbose_name="CPA State",
                    ),
                ),
                (
                    "cpa_city",
                    models.CharField(
                        help_text="Data sources: SF-SAC 2008-2009: I/8/b; SF-SAC 2010-2012: I/8/b; SF-SAC 2013-2015: I/8/d; SF-SAC 2016-2018: I/8/d; SF-SAC 2019-2021: I/6/h/iv; SF-SAC 2022: I/6/h/iv Census mapping: MULTIPLE CPAS INFO, CPACITY",
                        max_length=30,
                        verbose_name="CPA City",
                    ),
                ),
                (
                    "cpa_title",
                    models.CharField(
                        help_text="Data sources: SF-SAC 2008-2009: I/8/c; SF-SAC 2010-2012: I/8/c; SF-SAC 2013-2015: I/8/h; SF-SAC 2016-2018: I/8/h; SF-SAC 2019-2021: I/6/h/viii; SF-SAC 2022: I/6/h/viii Census mapping: MULTIPLE CPAS INFO, CPATITLE",
                        max_length=40,
                        verbose_name="Title of CPA Contact",
                    ),
                ),
                (
                    "cpa_street1",
                    models.CharField(
                        help_text="Data sources: SF-SAC 2008-2009: I/8/b; SF-SAC 2010-2012: I/8/b; SF-SAC 2013-2015: I/8/c; SF-SAC 2016-2018: I/8/c; SF-SAC 2019-2021: I/6/h/iii; SF-SAC 2022: I/6/h/iii Census mapping: MULTIPLE CPAS INFO, CPASTREET1",
                        max_length=45,
                        verbose_name="CPA Street Address",
                    ),
                ),
                (
                    "cpa_street2",
                    models.CharField(
                        help_text="Data sources: SF-SAC 2008-2009: I/8/b; SF-SAC 2010-2012: I/8/b; SF-SAC 2013-2015: I/8/c; SF-SAC 2016-2018: I/8/c; SF-SAC 2019-2021: I/6/h/iii; SF-SAC 2022: I/6/h/iii Census mapping: MULTIPLE CPAS INFO, CPASTREET1",
                        max_length=45,
                        null=True,
                        verbose_name="CPA Street Address",
                    ),
                ),
                (
                    "cpa_zip_code",
                    models.IntegerField(
                        help_text="Data sources: SF-SAC 2008-2009: I/8/b; SF-SAC 2010-2012: I/8/b; SF-SAC 2013-2015: I/8/f; SF-SAC 2016-2018: I/8/f; SF-SAC 2019-2021: I/6/h/vi; SF-SAC 2022: I/6/h/vi Census mapping: MULTIPLE CPAS INFO, CPAZIPCODE",
                        null=True,
                        verbose_name="CPA Zip Code",
                    ),
                ),
                (
                    "cpa_contact",
                    models.CharField(
                        help_text="Data sources: SF-SAC 2008-2009: I/8/c; SF-SAC 2010-2012: I/8/c; SF-SAC 2013-2015: I/8/g; SF-SAC 2016-2018: I/8/g; SF-SAC 2019-2021: I/6/h/vii; SF-SAC 2022: I/6/h/vii Census mapping: MULTIPLE CPAS INFO, CPACONTACT",
                        max_length=50,
                        verbose_name="Name of CPA Contact",
                    ),
                ),
                (
                    "cpa_email",
                    models.CharField(
                        help_text="Data sources: SF-SAC 2008-2009: I/8/f; SF-SAC 2010-2012: I/8/f; SF-SAC 2013-2015: I/8/k; SF-SAC 2016-2018: I/8/k; SF-SAC 2019-2021: I/6/h/x; SF-SAC 2022: I/6/h/x Census mapping: MULTIPLE CPAS INFO, CPAEMAIL",
                        max_length=60,
                        null=True,
                        verbose_name="CPA mail address (optional)",
                    ),
                ),
                (
                    "cpa_firm_name",
                    models.CharField(
                        help_text="Data sources: SF-SAC 2008-2009: I/8/a; SF-SAC 2010-2012: I/8/a; SF-SAC 2013-2015: I/8/a; SF-SAC 2016-2018: I/8/a; SF-SAC 2019-2021: I/6/h/i; SF-SAC 2022: I/6/h/i Census mapping: MULTIPLE CPAS INFO, CPAFIRMNAME",
                        max_length=64,
                        verbose_name="CPA Firm Name",
                    ),
                ),
                (
                    "cpa_ein",
                    models.IntegerField(
                        help_text="Data sources: SF-SAC 2013-2015: I/8/b; SF-SAC 2016-2018: I/8/b; SF-SAC 2019-2021: I/6/h/ii; SF-SAC 2022: I/6/h/ii Census mapping: MULTIPLE CPAS INFO, CPAEIN",
                        null=True,
                        verbose_name="CPA Firm EIN (only available for audit years 2013 and beyond)",
                    ),
                ),
                (
                    "dbkey",
                    models.CharField(
                        help_text="Census mapping: MULTIPLE CPAS INFO, DBKEY",
                        max_length=40,
                        verbose_name="Audit Year and DBKEY (database key) combined make up the primary key.",
                    ),
                ),
                (
                    "audit_year",
                    models.CharField(
                        help_text="Census mapping: MULTIPLE CPAS INFO, AUDITYEAR",
                        max_length=40,
                        verbose_name="Audit Year and DBKEY (database key) combined make up the primary key.",
                    ),
                ),
                (
                    "seqnum",
                    models.IntegerField(
                        help_text="Census mapping: MULTIPLE CPAS INFO, SEQNUM",
                        null=True,
                        verbose_name="Order that Auditors were reported on page 5 of SF-SAC",
                    ),
                ),
                (
                    "is_public",
                    models.BooleanField(
                        verbose_name="True if appears in a public record"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="CapText",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "charts_tables",
                    models.BooleanField(
                        help_text="Census mapping: CAPTEXT, CHARTSTABLES",
                        max_length=1,
                        null=True,
                        verbose_name="Indicates whether or not the text contained charts or tables that could not be entered due to formatting restrictions",
                    ),
                ),
                (
                    "finding_ref_nums",
                    models.CharField(
                        help_text="Data sources: SF-SAC 2019-2021: IV/1; SF-SAC 2022: IV/1 Census mapping: CAPTEXT, FINDINGREFNUMS",
                        max_length=100,
                        verbose_name="Audit Finding Reference Number",
                    ),
                ),
                (
                    "seq_number",
                    models.IntegerField(
                        help_text="Census mapping: CAPTEXT, SEQ_NUMBER",
                        verbose_name="Order that the CAP text was reported",
                    ),
                ),
                (
                    "text",
                    models.TextField(
                        help_text="Data sources: SF-SAC 2019-2021: IV/2; SF-SAC 2022: IV/2 Census mapping: CAPTEXT, TEXT",
                        verbose_name="Content of the Corrective Action Plan (CAP)",
                    ),
                ),
                (
                    "dbkey",
                    models.CharField(
                        help_text="Census mapping: CAPTEXT, DBKEY",
                        max_length=40,
                        verbose_name="Audit Year and DBKEY (database key) combined make up the primary key.",
                    ),
                ),
                (
                    "audit_year",
                    models.CharField(
                        help_text="Census mapping: CAPTEXT, AUDITYEAR",
                        max_length=40,
                        verbose_name="Audit Year and DBKEY (database key) combined make up the primary key.",
                    ),
                ),
                (
                    "is_public",
                    models.BooleanField(
                        verbose_name="True for public records, False for non-public records"
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="agencies",
            name="is_public",
            field=models.BooleanField(
                default=True,
                verbose_name="True for public records, False for non-public records",
            ),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name="cfdainfo",
            name="is_public",
            field=models.BooleanField(
                default=True,
                verbose_name="True for public records, False for non-public records",
            ),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name="findings",
            name="is_public",
            field=models.BooleanField(
                default=True,
                verbose_name="True for public records, False for non-public records",
            ),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name="findingstext",
            name="is_public",
            field=models.BooleanField(
                default=True,
                verbose_name="True for public records, False for non-public records",
            ),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name="general",
            name="create_date",
            field=models.DateTimeField(
                auto_now_add=True, default=django.utils.timezone.now
            ),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name="general",
            name="data_source",
            field=models.CharField(
                default="Public download",
                max_length=25,
                verbose_name="Origin of the upload",
            ),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name="general",
            name="is_public",
            field=models.BooleanField(
                default=True,
                verbose_name="True for public records, False for non-public records",
            ),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name="general",
            name="modified_date",
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AddField(
            model_name="notes",
            name="is_public",
            field=models.BooleanField(
                default=True,
                verbose_name="True for public records, False for non-public records",
            ),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name="passthrough",
            name="is_public",
            field=models.BooleanField(
                default=True,
                verbose_name="True for public records, False for non-public records",
            ),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name="revisions",
            name="is_public",
            field=models.BooleanField(
                default=True,
                verbose_name="True for public records, False for non-public records",
            ),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name="agencies",
            name="agency_cfda",
            field=models.IntegerField(
                help_text="Data sources: SF-SAC 1997-2000: III/5; SF-SAC 2001-2003: III/9; SF-SAC 2004-2007: III/8; SF-SAC 2008-2009: III/8; SF-SAC 2010-2012: III/8; SF-SAC 2013-2015: III/5; SF-SAC 2016-2018: III/3/d; SF-SAC 2019-2021: III/3/d; SF-SAC 2022: III/3/d Census mapping: AGENCIES, AGENCYCFDA",
                verbose_name="2-digit prefix of Federal Agency requiring copy of audit report",
            ),
        ),
        migrations.AlterField(
            model_name="agencies",
            name="ein",
            field=models.IntegerField(
                help_text="Data sources: SF-SAC 1997-2000: I/5/a; SF-SAC 2001-2003: I/5/a; SF-SAC 2004-2007: I/5/a; SF-SAC 2008-2009: I/4/a; SF-SAC 2010-2012: I/4/a; SF-SAC 2013-2015: I/4/a; SF-SAC 2016-2018: I/4/a; SF-SAC 2019-2021: I/4/a; SF-SAC 2022: I/4/a Census mapping: AGENCIES, EIN",
                null=True,
                verbose_name="Employer Identification Number (EIN) of primary grantee",
            ),
        ),
        migrations.AlterField(
            model_name="cfdainfo",
            name="amount",
            field=models.BigIntegerField(
                help_text="Data sources: SF-SAC 1997-2000: III/6/c; SF-SAC 2001-2003: III/10/d; SF-SAC 2004-2007: III/9/e; SF-SAC 2008-2009: III/9/e; SF-SAC 2010-2012: III/9/f; SF-SAC 2013-2015: III/6/d; SF-SAC 2016-2018: II/1/e; SF-SAC 2019-2021: II/1/e; SF-SAC 2022: II/1/e Census mapping: CFDA INFO, AMOUNT",
                verbose_name="Amount Expended for the Federal Program",
            ),
        ),
        migrations.AlterField(
            model_name="cfdainfo",
            name="arra",
            field=models.BooleanField(
                help_text="Data sources: SF-SAC 2010-2012: III/9/d; SF-SAC 2013-2015: III/6/g Census mapping: CFDA INFO, ARRA",
                null=True,
                verbose_name="American Recovery and Reinvestment Act Funded Program",
            ),
        ),
        migrations.AlterField(
            model_name="cfdainfo",
            name="award_identification",
            field=models.CharField(
                help_text="Data sources: SF-SAC 2016-2018: II/1/c; SF-SAC 2019-2021: II/1/c; SF-SAC 2022: II/1/c Census mapping: CFDA INFO, AWARDIDENTIFICATION",
                max_length=50,
                verbose_name="Other data used to identify the award which is not a CFDA number (e.g., program year, contract number)",
            ),
        ),
        migrations.AlterField(
            model_name="cfdainfo",
            name="cfda",
            field=models.CharField(
                help_text="Data sources: SF-SAC 1997-2000: III/6/a; SF-SAC 2001-2003: III/10/a; SF-SAC 2004-2007: III/9/a & III/9/b combined; SF-SAC 2008-2009: III/9/a & III/9/b combined; SF-SAC 2010-2012: III/9/a & III/9/b combined; SF-SAC 2013-2015: III/6/a & III/6/b combined; SF-SAC 2016-2018: II/1/a & II/1/b combined; SF-SAC 2019-2021: II/1/a & II/1/b combined; SF-SAC 2022: II/1/a & II/1/b combined Census mapping: CFDA INFO, CFDA",
                max_length=52,
                verbose_name="Federal Agency Prefix and Extension",
            ),
        ),
        migrations.AlterField(
            model_name="cfdainfo",
            name="cluster_name",
            field=models.CharField(
                help_text="Data sources: SF-SAC 2016-2018: II/1/f; SF-SAC 2019-2021: II/1/f; SF-SAC 2022: II/1/f Census mapping: CFDA INFO, CLUSTERNAME",
                max_length=75,
                null=True,
                verbose_name="The name of the cluster",
            ),
        ),
        migrations.AlterField(
            model_name="cfdainfo",
            name="cluster_total",
            field=models.BigIntegerField(
                help_text="Data sources: SF-SAC 2016-2018: II/1/h; SF-SAC 2019-2021: II/1/h; SF-SAC 2022: II/1/h Census mapping: CFDA INFO, CLUSTERTOTAL",
                verbose_name="Total Federal awards expended for each individual Federal program is auto-generated by summing the amount expended for all line items with the same Cluster Name",
            ),
        ),
        migrations.AlterField(
            model_name="cfdainfo",
            name="direct",
            field=models.BooleanField(
                help_text="Data sources: SF-SAC 2001-2003: III/10/e; SF-SAC 2004-2007: III/9/f; SF-SAC 2008-2009: III/9/f; SF-SAC 2010-2012: III/9/g; SF-SAC 2013-2015: III/6/h; SF-SAC 2016-2018: II/1/k; SF-SAC 2019-2021: II/1/k; SF-SAC 2022: II/1/k Census mapping: CFDA INFO, DIRECT",
                null=True,
                verbose_name="Indicate whether or not the award was received directly from a Federal awarding agency",
            ),
        ),
        migrations.AlterField(
            model_name="cfdainfo",
            name="federal_program_name",
            field=models.CharField(
                help_text="Data sources: SF-SAC 1997-2000: III/6/b; SF-SAC 2001-2003: III/10/c; SF-SAC 2004-2007: III/9/d; SF-SAC 2008-2009: III/9/d; SF-SAC 2010-2012: III/9/e; SF-SAC 2013-2015: III/6/c; SF-SAC 2016-2018: II/1/d; SF-SAC 2019-2021: II/1/d; SF-SAC 2022: II/1/d Census mapping: CFDA INFO, FEDERALPROGRAMNAME",
                max_length=300,
                verbose_name="Name of Federal Program",
            ),
        ),
        migrations.AlterField(
            model_name="cfdainfo",
            name="finding_ref_nums",
            field=models.CharField(
                help_text="Data sources: SF-SAC 1997-2000: III/7/e; SF-SAC 2001-2003: III/11/b; SF-SAC 2004-2007: III/10/b; SF-SAC 2008-2009: III/10/b; SF-SAC 2010-2012: III/10/b; SF-SAC 2013-2015: III/7/d; SF-SAC 2016-2018: III/4/e; SF-SAC 2019-2021: III/4/e; SF-SAC 2022: III/4/e Census mapping: CFDA INFO, FINDINGREFNUMS",
                max_length=100,
                null=True,
                verbose_name="Findings Reference Numbers",
            ),
        ),
        migrations.AlterField(
            model_name="cfdainfo",
            name="findings_count",
            field=models.IntegerField(
                help_text="Data sources: SF-SAC 2013-2015: III/6/k; SF-SAC 2016-2018: III/1/c; SF-SAC 2019-2021: III/1/c; SF-SAC 2022: III/1/c Census mapping: CFDA INFO, FINDINGSCOUNT",
                verbose_name="Number of findings for the federal program (only available for audit years 2013 and beyond)",
            ),
        ),
        migrations.AlterField(
            model_name="cfdainfo",
            name="loan_balance",
            field=models.CharField(
                help_text="Data sources: SF-SAC 2016-2018: II/1/j; SF-SAC 2019-2021: II/1/j; SF-SAC 2022: II/1/j Census mapping: CFDA INFO, LOANBALANCE",
                max_length=40,
                null=True,
                verbose_name="The loan or loan guarantee (loan) balance outstanding at the end of the audit period.  A response of ‘N/A’ is acceptable.",
            ),
        ),
        migrations.AlterField(
            model_name="cfdainfo",
            name="loans",
            field=models.BooleanField(
                help_text="Data sources: SF-SAC 2013-2015: III/6/f; SF-SAC 2016-2018: II/1/i; SF-SAC 2019-2021: II/1/i; SF-SAC 2022: II/1/i Census mapping: CFDA INFO, LOANS",
                null=True,
                verbose_name="Indicate whether or not the program is a Loan or Loan Guarantee (only available for audit years 2013 and beyond)",
            ),
        ),
        migrations.AlterField(
            model_name="cfdainfo",
            name="major_program",
            field=models.BooleanField(
                help_text="Data sources: SF-SAC 1997-2000: III/7/a; SF-SAC 2001-2003: III/10/f; SF-SAC 2004-2007: III/9/g; SF-SAC 2008-2009: III/9/g; SF-SAC 2010-2012: III/9/h; SF-SAC 2013-2015: III/6/i; SF-SAC 2016-2018: III/1/a; SF-SAC 2019-2021: III/1/a; SF-SAC 2022: III/1/a Census mapping: CFDA INFO, MAJORPROGRAM",
                null=True,
                verbose_name="Indicate whether or not the Federal program is a major program",
            ),
        ),
        migrations.AlterField(
            model_name="cfdainfo",
            name="passthrough_amount",
            field=models.BigIntegerField(
                help_text="Data sources: SF-SAC 2016-2018: II/1/o; SF-SAC 2019-2021: II/1/o; SF-SAC 2022: II/1/o Census mapping: CFDA INFO, PASSTHROUGHAMOUNT",
                null=True,
                verbose_name="Amount passed through to subrecipients",
            ),
        ),
        migrations.AlterField(
            model_name="cfdainfo",
            name="passthrough_award",
            field=models.BooleanField(
                help_text="Data sources: SF-SAC 2016-2018: II/1/n; SF-SAC 2019-2021: II/1/n; SF-SAC 2022: II/1/n Census mapping: CFDA INFO, PASSTHROUGHAWARD",
                null=True,
                verbose_name="Indicates whether or not funds were passed through to any subrecipients for the Federal program",
            ),
        ),
        migrations.AlterField(
            model_name="cfdainfo",
            name="program_total",
            field=models.BigIntegerField(
                help_text="Data sources: SF-SAC 2016-2018: II/1/g; SF-SAC 2019-2021: II/1/g; SF-SAC 2022: II/1/g Census mapping: CFDA INFO, PROGRAMTOTAL",
                verbose_name="Total Federal awards expended for each individual Federal program is auto-generated by summing the amount expended for all line items with the same CFDA Prefix and Extension",
            ),
        ),
        migrations.AlterField(
            model_name="cfdainfo",
            name="research_and_development",
            field=models.BooleanField(
                help_text="Data sources: SF-SAC 2001-2003: III/10/b; SF-SAC 2004-2007: III/9/c; SF-SAC 2008-2009: III/9/c; SF-SAC 2010-2012: III/9/c; SF-SAC 2013-2015: III/6/e Census mapping: CFDA INFO, R&D",
                null=True,
                verbose_name="Indicate whether or not the program is a Research and Development program",
            ),
        ),
        migrations.AlterField(
            model_name="cfdainfo",
            name="type_report_major_program",
            field=models.CharField(
                help_text="Data sources: SF-SAC 2004-2007: III/9/h; SF-SAC 2008-2009: III/9/h; SF-SAC 2010-2012: III/9/i; SF-SAC 2013-2015: III/6/j; SF-SAC 2016-2018: III/1/b; SF-SAC 2019-2021: III/1/b; SF-SAC 2022: III/1/b Census mapping: CFDA INFO, TYPEREPORT_MP",
                max_length=40,
                verbose_name="Type of Report Issued on the Major Program Compliance",
            ),
        ),
        migrations.AlterField(
            model_name="cfdainfo",
            name="type_requirement",
            field=models.CharField(
                help_text="Data sources: SF-SAC 1997-2000: III/7/b; SF-SAC 2001-2003: III/11/a; SF-SAC 2004-2007: III/10/a; SF-SAC 2008-2009: III/10/a; SF-SAC 2010-2012: III/10/a; SF-SAC 2013-2015: III/7/e; SF-SAC 2016-2018: III/4/f; SF-SAC 2019-2021: III/4/f; SF-SAC 2022: III/4/f Census mapping: CFDA INFO, TYPEREQUIREMENT",
                max_length=40,
                null=True,
                verbose_name="Type Requirement Failure",
            ),
        ),
        migrations.AlterField(
            model_name="dunsinfo",
            name="duns",
            field=models.IntegerField(
                help_text="Data sources: SF-SAC 2004-2007: I/5/f; SF-SAC 2008-2009: I/4/f; SF-SAC 2010-2012: I/4/f; SF-SAC 2013-2015: I/4/f; SF-SAC 2016-2018: I/4/f; SF-SAC 2019-2021: I/4/f; SF-SAC 2022: I/4/f Census mapping: DUN INFO, DUNS",
                verbose_name="Multiple Data Universal Numbering System Numbers",
            ),
        ),
        migrations.AlterField(
            model_name="eininfo",
            name="ein",
            field=models.IntegerField(
                help_text="Data sources: SF-SAC 2001-2003: I/5/c; SF-SAC 2004-2007: I/5/c; SF-SAC 2008-2009: I/4/c; SF-SAC 2010-2012: I/4/c; SF-SAC 2013-2015: I/4/c; SF-SAC 2016-2018: I/4/c; SF-SAC 2019-2021: I/4/c; SF-SAC 2022: I/4/c Census mapping: EIN INFO, EIN",
                verbose_name="Multiple Employer Identification Numbers",
            ),
        ),
        migrations.AlterField(
            model_name="findings",
            name="finding_ref_nums",
            field=models.CharField(
                help_text="Data sources: SF-SAC 2013-2015: III/7/d; SF-SAC 2016-2018: III/4/e; SF-SAC 2019-2021: III/4/e; SF-SAC 2022: III/4/e Census mapping: FINDINGS, FINDINGREFNUMS",
                max_length=100,
                verbose_name="Findings Reference Numbers",
            ),
        ),
        migrations.AlterField(
            model_name="findings",
            name="material_weakness",
            field=models.BooleanField(
                help_text="Data sources: SF-SAC 2013-2015: III/7/h; SF-SAC 2016-2018: III/4/i; SF-SAC 2019-2021: III/4/i; SF-SAC 2022: III/4/i Census mapping: FINDINGS, MATERIALWEAKNESS",
                null=True,
                verbose_name="Material Weakness finding",
            ),
        ),
        migrations.AlterField(
            model_name="findings",
            name="modified_opinion",
            field=models.BooleanField(
                help_text="Data sources: SF-SAC 2013-2015: III/7/f; SF-SAC 2016-2018: III/4/g; SF-SAC 2019-2021: III/4/g; SF-SAC 2022: III/4/g Census mapping: FINDINGS, MODIFIEDOPINION",
                null=True,
                verbose_name="Modified Opinion finding",
            ),
        ),
        migrations.AlterField(
            model_name="findings",
            name="other_findings",
            field=models.BooleanField(
                help_text="Data sources: SF-SAC 2013-2015: III/7/j; SF-SAC 2016-2018: III/4/k; SF-SAC 2019-2021: III/4/k; SF-SAC 2022: III/4/k Census mapping: FINDINGS, OTHERFINDINGS",
                null=True,
                verbose_name="Other findings",
            ),
        ),
        migrations.AlterField(
            model_name="findings",
            name="other_non_compliance",
            field=models.BooleanField(
                help_text="Data sources: SF-SAC 2013-2015: III/7/g; SF-SAC 2016-2018: III/4/h; SF-SAC 2019-2021: III/4/h; SF-SAC 2022: III/4/h Census mapping: FINDINGS, OTHERNONCOMPLIANCE",
                null=True,
                verbose_name="Other Noncompliance finding",
            ),
        ),
        migrations.AlterField(
            model_name="findings",
            name="prior_finding_ref_nums",
            field=models.CharField(
                help_text="Data sources: SF-SAC 2016-2018: III/4/n; SF-SAC 2019-2021: III/4/n; SF-SAC 2022: III/4/n Census mapping: FINDINGS, PRIORFINDINGREFNUMS",
                max_length=100,
                verbose_name="Audit finding reference numbers from the immediate prior audit",
            ),
        ),
        migrations.AlterField(
            model_name="findings",
            name="questioned_costs",
            field=models.BooleanField(
                help_text="Data sources: SF-SAC 2013-2015: III/7/k; SF-SAC 2016-2018: III/4/l; SF-SAC 2019-2021: III/4/l; SF-SAC 2022: III/4/l Census mapping: FINDINGS, QCOSTS",
                null=True,
                verbose_name="Questioned Costs",
            ),
        ),
        migrations.AlterField(
            model_name="findings",
            name="repeat_finding",
            field=models.BooleanField(
                help_text="Data sources: SF-SAC 2016-2018: III/4/m; SF-SAC 2019-2021: III/4/m; SF-SAC 2022: III/4/m Census mapping: FINDINGS, REPEATFINDING",
                null=True,
                verbose_name="Indicates whether or not the audit finding was a repeat of an audit finding in the immediate prior audit",
            ),
        ),
        migrations.AlterField(
            model_name="findings",
            name="significant_deficiency",
            field=models.BooleanField(
                help_text="Data sources: SF-SAC 2013-2015: III/7/i; SF-SAC 2016-2018: III/4/j; SF-SAC 2019-2021: III/4/j; SF-SAC 2022: III/4/j Census mapping: FINDINGS, SIGNIFICANTDEFICIENCY",
                null=True,
                verbose_name="Significant Deficiency finding",
            ),
        ),
        migrations.AlterField(
            model_name="findings",
            name="type_requirement",
            field=models.CharField(
                help_text="Data sources: SF-SAC 2013-2015: III/7/e; SF-SAC 2016-2018: III/4/f; SF-SAC 2019-2021: III/4/f; SF-SAC 2022: III/4/f Census mapping: FINDINGS, TYPEREQUIREMENT",
                max_length=40,
                verbose_name="Type Requirement Failure",
            ),
        ),
        migrations.AlterField(
            model_name="findingstext",
            name="finding_ref_nums",
            field=models.CharField(
                help_text="Data sources: SF-SAC 2019-2021: III/5/a; SF-SAC 2022: III/5/a Census mapping: FINDINGSTEXT, FINDINGREFNUMS",
                max_length=100,
                verbose_name="Audit Finding Reference Number",
            ),
        ),
        migrations.AlterField(
            model_name="findingstext",
            name="text",
            field=models.TextField(
                help_text="Data sources: SF-SAC 2019-2021: III/5/b; SF-SAC 2022: III/5/b Census mapping: FINDINGSTEXT, TEXT",
                verbose_name="Content of the finding text",
            ),
        ),
        migrations.AlterField(
            model_name="general",
            name="agency",
            field=models.ManyToManyField(to="data_distro.agencies"),
        ),
        migrations.AlterField(
            model_name="general",
            name="audit_type",
            field=models.CharField(
                help_text="Data sources: SF-SAC 1997-2000: I/2; SF-SAC 2001-2003: I/2; SF-SAC 2004-2007: I/2; SF-SAC 2008-2009: I/2; SF-SAC 2010-2012: I/2; SF-SAC 2013-2015: I/2; SF-SAC 2016-2018: I/2; SF-SAC 2019-2021: I/2; SF-SAC 2022: I/2 Census mapping: GENERAL, AUDITTYPE",
                max_length=40,
                verbose_name="Type of Audit",
            ),
        ),
        migrations.AlterField(
            model_name="general",
            name="auditee_certify_name",
            field=models.CharField(
                help_text="Data sources: SF-SAC 1997-2000: I/6/g; SF-SAC 2001-2003: I/6/g; SF-SAC 2004-2007: I/6/g; SF-SAC 2008-2009: I/5/g; SF-SAC 2010-2012: I/5/g; SF-SAC 2013-2015: certifications; SF-SAC 2016-2018: certifications; SF-SAC 2019-2021: certifications; SF-SAC 2022: certifications Census mapping: GENERAL, AUDITEECERTIFYNAME",
                max_length=50,
                null=True,
                verbose_name="Name of Auditee Certifying Official",
            ),
        ),
        migrations.AlterField(
            model_name="general",
            name="auditee_certify_title",
            field=models.CharField(
                help_text="Data sources: SF-SAC 1997-2000: I/6/g; SF-SAC 2001-2003: I/6/g; SF-SAC 2004-2007: I/6/g; SF-SAC 2008-2009: I/5/g; SF-SAC 2010-2012: I/5/g; SF-SAC 2013-2015: certifications; SF-SAC 2016-2018: certifications; SF-SAC 2019-2021: certifications; SF-SAC 2022: certifications Census mapping: GENERAL, AUDITEECERTIFYTITLE",
                max_length=50,
                null=True,
                verbose_name="Title of Auditee Certifying Official",
            ),
        ),
        migrations.AlterField(
            model_name="general",
            name="auditee_contact",
            field=models.CharField(
                help_text="Data sources: SF-SAC 1997-2000: I/6/c; SF-SAC 2001-2003: I/6/c; SF-SAC 2004-2007: I/6/c; SF-SAC 2008-2009: I/5/c; SF-SAC 2010-2012: I/5/c; SF-SAC 2013-2015: I/5/c; SF-SAC 2016-2018: I/5/c; SF-SAC 2019-2021: I/5/c; SF-SAC 2022: I/5/c Census mapping: GENERAL, AUDITEECONTACT",
                max_length=50,
                verbose_name="Name of Auditee Contact",
            ),
        ),
        migrations.AlterField(
            model_name="general",
            name="auditee_date_signed",
            field=models.DateField(
                help_text="Data sources: SF-SAC 1997-2000: I/6/g; SF-SAC 2001-2003: I/6/g; SF-SAC 2004-2007: I/6/g; SF-SAC 2008-2009: I/5/g; SF-SAC 2010-2012: I/5/g; SF-SAC 2013-2015: certifications; SF-SAC 2016-2018: certifications; SF-SAC 2019-2021: certifications; SF-SAC 2022: certifications Census mapping: GENERAL, AUDITEEDATESIGNED",
                verbose_name="Date of Auditee signature",
            ),
        ),
        migrations.AlterField(
            model_name="general",
            name="auditee_email",
            field=models.CharField(
                help_text="Data sources: SF-SAC 1997-2000: I/6/f; SF-SAC 2001-2003: I/6/f; SF-SAC 2004-2007: I/6/f; SF-SAC 2008-2009: I/5/f; SF-SAC 2010-2012: I/5/f; SF-SAC 2013-2015: I/5/f; SF-SAC 2016-2018: I/5/e; SF-SAC 2019-2021: I/5/e; SF-SAC 2022: I/5/e Census mapping: GENERAL, AUDITEEEMAIL",
                max_length=60,
                null=True,
                verbose_name="Auditee Email address",
            ),
        ),
        migrations.AlterField(
            model_name="general",
            name="auditee_fax",
            field=models.PositiveBigIntegerField(
                help_text="Data sources: SF-SAC 1997-2000: I/6/e; SF-SAC 2001-2003: I/6/e; SF-SAC 2004-2007: I/6/e; SF-SAC 2008-2009: I/5/e; SF-SAC 2010-2012: I/5/e; SF-SAC 2013-2015: I/5/e Census mapping: GENERAL, AUDITEEFAX",
                null=True,
                verbose_name="Auditee Fax Number (optional)",
            ),
        ),
        migrations.AlterField(
            model_name="general",
            name="auditee_name",
            field=models.CharField(
                help_text="Data sources: SF-SAC 1997-2000: I/6/a; SF-SAC 2001-2003: I/6/a; SF-SAC 2004-2007: I/6/a; SF-SAC 2008-2009: I/5/a; SF-SAC 2010-2012: I/5/a; SF-SAC 2013-2015: I/5/a; SF-SAC 2016-2018: I/5/a; SF-SAC 2019-2021: I/5/a; SF-SAC 2022: I/5/a Census mapping: GENERAL, AUDITEENAME",
                max_length=70,
                verbose_name="Name of the Auditee",
            ),
        ),
        migrations.AlterField(
            model_name="general",
            name="auditee_name_title",
            field=models.CharField(
                help_text="Data sources: SF-SAC 1997-2000: I/6/g; SF-SAC 2001-2003: I/6/g; SF-SAC 2004-2007: I/6/g; SF-SAC 2008-2009: I/5/g; SF-SAC 2010-2012: I/5/g; SF-SAC 2013-2015: certifications; SF-SAC 2016-2018: certifications; SF-SAC 2019-2021: certifications; SF-SAC 2022: certifications Census mapping: GENERAL, AUDITEENAMETITLE",
                max_length=70,
                verbose_name="Title of Auditee Certifying Official",
            ),
        ),
        migrations.AlterField(
            model_name="general",
            name="auditee_phone",
            field=models.PositiveBigIntegerField(
                help_text="Data sources: SF-SAC 1997-2000: I/6/d; SF-SAC 2001-2003: I/6/d; SF-SAC 2004-2007: I/6/d; SF-SAC 2008-2009: I/5/d; SF-SAC 2010-2012: I/5/d; SF-SAC 2013-2015: I/5/d; SF-SAC 2016-2018: I/5/d; SF-SAC 2019-2021: I/5/d; SF-SAC 2022: I/5/d Census mapping: GENERAL, AUDITEEPHONE",
                verbose_name="Auditee Phone Number",
            ),
        ),
        migrations.AlterField(
            model_name="general",
            name="auditee_title",
            field=models.CharField(
                help_text="Data sources: SF-SAC 1997-2000: I/6/c; SF-SAC 2001-2003: I/6/c; SF-SAC 2004-2007: I/6/c; SF-SAC 2008-2009: I/5/c; SF-SAC 2010-2012: I/5/c; SF-SAC 2013-2015: I/5/c; SF-SAC 2016-2018: I/5/c; SF-SAC 2019-2021: I/5/c; SF-SAC 2022: I/5/c Census mapping: GENERAL, AUDITEETITLE",
                max_length=40,
                verbose_name="Title of Auditee Contact",
            ),
        ),
        migrations.AlterField(
            model_name="general",
            name="auditor_ein",
            field=models.IntegerField(
                help_text="Data sources: SF-SAC 2013-2015: I/6/b; SF-SAC 2016-2018: I/6/b; SF-SAC 2019-2021: I/6/b; SF-SAC 2022: I/6/b Census mapping: GENERAL, AUDITOR_EIN",
                verbose_name="CPA Firm EIN (only available for audit years 2013 and beyond)",
            ),
        ),
        migrations.AlterField(
            model_name="general",
            name="city",
            field=models.CharField(
                help_text="Data sources: SF-SAC 1997-2000: I/6/b; SF-SAC 2001-2003: I/6/b; SF-SAC 2004-2007: I/6/b; SF-SAC 2008-2009: I/5/b; SF-SAC 2010-2012: I/5/b; SF-SAC 2013-2015: I/5/b; SF-SAC 2016-2018: I/5/b; SF-SAC 2019-2021: I/5/b; SF-SAC 2022: I/5/b Census mapping: GENERAL, CITY",
                max_length=30,
                verbose_name="Auditee City",
            ),
        ),
        migrations.AlterField(
            model_name="general",
            name="cognizant_agency",
            field=models.CharField(
                help_text="Data sources: SF-SAC 1997-2000: I/9; SF-SAC 2001-2003: I/9 Census mapping: GENERAL, COGAGENCY",
                max_length=2,
                null=True,
                verbose_name="Two digit Federal agency prefix of the cognizant agency",
            ),
        ),
        migrations.AlterField(
            model_name="general",
            name="condition_or_deficiency",
            field=models.BooleanField(
                help_text="Data sources: SF-SAC 1997-2000: II/3; SF-SAC 2001-2003: II/3; SF-SAC 2004-2007: II/3; SF-SAC 2008-2009: II/3; SF-SAC 2010-2012: II/3; SF-SAC 2013-2015: II/3; SF-SAC 2016-2018: III/2/c; SF-SAC 2019-2021: III/2/c; SF-SAC 2022: III/2/c Census mapping: GENERAL, REPORTABLECONDITION/SIGNIFICANTDEFICIENCY",
                null=True,
                verbose_name="Whether or not the audit disclosed a reportable condition/significant deficiency on financial statements",
            ),
        ),
        migrations.AlterField(
            model_name="general",
            name="condition_or_deficiency_major_program",
            field=models.BooleanField(
                help_text="Data sources: SF-SAC 2001-2003: III/5; SF-SAC 2004-2007: III/4; SF-SAC 2008-2009: III/4; SF-SAC 2010-2012: III/4 Census mapping: GENERAL, REPORTABLECONDITION/SIGNIFICANTDEFICIENCY_MP",
                null=True,
                verbose_name="Whether or not the audit disclosed a reportable condition/significant deficiency for any major program in the Schedule of Findings and Questioned Costs",
            ),
        ),
        migrations.AlterField(
            model_name="general",
            name="cpa_city",
            field=models.CharField(
                help_text="Data sources: SF-SAC 1997-2000: I/7/b; SF-SAC 2001-2003: I/7/b; SF-SAC 2004-2007: I/7/b; SF-SAC 2008-2009: I/6/b; SF-SAC 2010-2012: I/6/b; SF-SAC 2013-2015: I/6/c; SF-SAC 2016-2018: I/6/c; SF-SAC 2019-2021: I/6/c; SF-SAC 2022: I/6/c Census mapping: GENERAL, CPACITY",
                max_length=30,
                verbose_name="CPA City",
            ),
        ),
        migrations.AlterField(
            model_name="general",
            name="cpa_contact",
            field=models.CharField(
                help_text="Data sources: SF-SAC 1997-2000: I/7/c; SF-SAC 2001-2003: I/7/c; SF-SAC 2004-2007: I/7/c; SF-SAC 2008-2009: I/6/c; SF-SAC 2010-2012: I/6/c; SF-SAC 2013-2015: I/6/d; SF-SAC 2016-2018: I/6/d; SF-SAC 2019-2021: I/6/d; SF-SAC 2022: I/6/d Census mapping: GENERAL, CPACONTACT",
                max_length=50,
                verbose_name="Name of CPA Contact",
            ),
        ),
        migrations.AlterField(
            model_name="general",
            name="cpa_country",
            field=models.CharField(
                help_text="Data sources: SF-SAC 2019-2021: I/6/c; SF-SAC 2022: I/6/c Census mapping: GENERAL, CPACOUNTRY",
                max_length=6,
                null=True,
                verbose_name="CPA Country",
            ),
        ),
        migrations.AlterField(
            model_name="general",
            name="cpa_date_signed",
            field=models.DateField(
                help_text="Data sources: SF-SAC 1997-2000: I/7/g; SF-SAC 2001-2003: I/7/g; SF-SAC 2004-2007: I/7/g; SF-SAC 2008-2009: I/6/g; SF-SAC 2010-2012: I/6/g; SF-SAC 2013-2015: certifications; SF-SAC 2016-2018: certifications; SF-SAC 2019-2021: certifications; SF-SAC 2022: certifications Census mapping: GENERAL, CPADATESIGNED",
                verbose_name="Date of CPA signature",
            ),
        ),
        migrations.AlterField(
            model_name="general",
            name="cpa_email",
            field=models.CharField(
                help_text="Data sources: SF-SAC 1997-2000: I/7/f; SF-SAC 2001-2003: I/7/f; SF-SAC 2004-2007: I/7/f; SF-SAC 2008-2009: I/6/f; SF-SAC 2010-2012: I/6/f; SF-SAC 2013-2015: I/6/g; SF-SAC 2016-2018: I/6/f; SF-SAC 2019-2021: I/6/f; SF-SAC 2022: I/6/f Census mapping: GENERAL, CPAEMAIL",
                max_length=60,
                null=True,
                verbose_name="CPA email address",
            ),
        ),
        migrations.AlterField(
            model_name="general",
            name="cpa_fax",
            field=models.PositiveBigIntegerField(
                help_text="Data sources: SF-SAC 1997-2000: I/7/e; SF-SAC 2001-2003: I/7/e; SF-SAC 2004-2007: I/7/e; SF-SAC 2008-2009: I/6/e; SF-SAC 2010-2012: I/6/e; SF-SAC 2013-2015: I/6/f Census mapping: GENERAL, CPAFAX",
                null=True,
                verbose_name="CPA fax number (optional) ",
            ),
        ),
        migrations.AlterField(
            model_name="general",
            name="cpa_firm_name",
            field=models.CharField(
                help_text="Data sources: SF-SAC 1997-2000: I/7/a; SF-SAC 2001-2003: I/7/a; SF-SAC 2004-2007: I/7/a; SF-SAC 2008-2009: I/6/a; SF-SAC 2010-2012: I/6/a; SF-SAC 2013-2015: I/6/a; SF-SAC 2016-2018: I/6/a; SF-SAC 2019-2021: I/6/a; SF-SAC 2022: I/6/a Census mapping: GENERAL, CPAFIRMNAME",
                max_length=64,
                verbose_name="CPA Firm Name",
            ),
        ),
        migrations.AlterField(
            model_name="general",
            name="cpa_foreign",
            field=models.CharField(
                help_text="Data sources: SF-SAC 2019-2021: I/6/c; SF-SAC 2022: I/6/c Census mapping: GENERAL, CPAFOREIGN",
                max_length=200,
                null=True,
                verbose_name="CPA Address - if international",
            ),
        ),
        migrations.AlterField(
            model_name="general",
            name="cpa_phone",
            field=models.PositiveBigIntegerField(
                help_text="Data sources: SF-SAC 1997-2000: I/7/d; SF-SAC 2001-2003: I/7/d; SF-SAC 2004-2007: I/7/d; SF-SAC 2008-2009: I/6/d; SF-SAC 2010-2012: I/6/d; SF-SAC 2013-2015: I/6/e; SF-SAC 2016-2018: I/6/e; SF-SAC 2019-2021: I/6/e; SF-SAC 2022: I/6/e Census mapping: GENERAL, CPAPHONE",
                verbose_name="CPA phone number",
            ),
        ),
        migrations.AlterField(
            model_name="general",
            name="cpa_state",
            field=models.CharField(
                help_text="Data sources: SF-SAC 1997-2000: I/7/b; SF-SAC 2001-2003: I/7/b; SF-SAC 2004-2007: I/7/b; SF-SAC 2008-2009: I/6/b; SF-SAC 2010-2012: I/6/b; SF-SAC 2013-2015: I/6/c; SF-SAC 2016-2018: I/6/c; SF-SAC 2019-2021: I/6/c; SF-SAC 2022: I/6/c Census mapping: GENERAL, CPASTATE",
                max_length=2,
                verbose_name="CPA State",
            ),
        ),
        migrations.AlterField(
            model_name="general",
            name="cpa_street1",
            field=models.CharField(
                help_text="Data sources: SF-SAC 1997-2000: I/7/b; SF-SAC 2001-2003: I/7/b; SF-SAC 2004-2007: I/7/b; SF-SAC 2008-2009: I/6/b; SF-SAC 2010-2012: I/6/b; SF-SAC 2013-2015: I/6/c; SF-SAC 2016-2018: I/6/c; SF-SAC 2019-2021: I/6/c; SF-SAC 2022: I/6/c Census mapping: GENERAL, CPASTREET1",
                max_length=45,
                verbose_name="CPA Street Address",
            ),
        ),
        migrations.AlterField(
            model_name="general",
            name="cpa_street2",
            field=models.CharField(
                help_text="Data sources: SF-SAC 1997-2000: I/7/b; SF-SAC 2001-2003: I/7/b; SF-SAC 2004-2007: I/7/b; SF-SAC 2008-2009: I/6/b; SF-SAC 2010-2012: I/6/b; SF-SAC 2013-2015: I/6/c; SF-SAC 2016-2018: I/6/c; SF-SAC 2019-2021: I/6/c; SF-SAC 2022: I/6/c Census mapping: GENERAL, CPASTREET2",
                max_length=45,
                null=True,
                verbose_name="CPA Street Address",
            ),
        ),
        migrations.AlterField(
            model_name="general",
            name="cpa_title",
            field=models.CharField(
                help_text="Data sources: SF-SAC 1997-2000: I/7/c; SF-SAC 2001-2003: I/7/c; SF-SAC 2004-2007: I/7/c; SF-SAC 2008-2009: I/6/c; SF-SAC 2010-2012: I/6/c; SF-SAC 2013-2015: I/6/d; SF-SAC 2016-2018: I/6/d; SF-SAC 2019-2021: I/6/d; SF-SAC 2022: I/6/d Census mapping: GENERAL, CPATITLE",
                max_length=40,
                verbose_name="Title of CPA Contact",
            ),
        ),
        migrations.AlterField(
            model_name="general",
            name="cpa_zip_code",
            field=models.IntegerField(
                help_text="Data sources: SF-SAC 1997-2000: I/7/b; SF-SAC 2001-2003: I/7/b; SF-SAC 2004-2007: I/7/b; SF-SAC 2008-2009: I/6/b; SF-SAC 2010-2012: I/6/b; SF-SAC 2013-2015: I/6/c; SF-SAC 2016-2018: I/6/c; SF-SAC 2019-2021: I/6/c; SF-SAC 2022: I/6/c Census mapping: GENERAL, CPAZIPCODE",
                verbose_name="CPA Zip Code",
            ),
        ),
        migrations.AlterField(
            model_name="general",
            name="current_or_former_findings",
            field=models.BooleanField(
                help_text="Data sources: SF-SAC 2001-2003: III/9; SF-SAC 2004-2007: III/8; SF-SAC 2008-2009: III/8; SF-SAC 2010-2012: III/8; SF-SAC 2013-2015: III/5; SF-SAC 2016-2018: III/3/d; SF-SAC 2019-2021: III/3/d; SF-SAC 2022: III/3/d Census mapping: GENERAL, CYFINDINGS",
                null=True,
                verbose_name="Indicate whether or not current year findings or prior year findings affecting direct funds were reported",
            ),
        ),
        migrations.AlterField(
            model_name="general",
            name="dollar_threshold",
            field=models.FloatField(
                help_text="Data sources: SF-SAC 1997-2000: III/2; SF-SAC 2001-2003: III/3; SF-SAC 2004-2007: III/2; SF-SAC 2008-2009: III/2; SF-SAC 2010-2012: III/2; SF-SAC 2013-2015: III/2; SF-SAC 2016-2018: III/3/b; SF-SAC 2019-2021: III/3/b; SF-SAC 2022: III/3/b Census mapping: GENERAL, DOLLARTHRESHOLD",
                null=True,
                verbose_name="Dollar Threshold to distinguish between Type A and Type B programs.",
            ),
        ),
        migrations.AlterField(
            model_name="general",
            name="duns",
            field=models.IntegerField(
                help_text="Data sources: SF-SAC 2004-2007: I/5/d; SF-SAC 2008-2009: I/4/d; SF-SAC 2010-2012: I/4/d; SF-SAC 2013-2015: I/4/d; SF-SAC 2016-2018: I/4/d; SF-SAC 2019-2021: I/4/d; SF-SAC 2022: I/4/d Census mapping: GENERAL, DUNS",
                null=True,
                verbose_name="Primary Data Universal Numbering System Number",
            ),
        ),
        migrations.AlterField(
            model_name="general",
            name="dup_reports",
            field=models.BooleanField(
                help_text="Data sources: SF-SAC 2001-2003: III/2; SF-SAC 2004-2007: III/1; SF-SAC 2008-2009: III/1; SF-SAC 2010-2012: III/1; SF-SAC 2013-2015: III/1; SF-SAC 2016-2018: III/3/a; SF-SAC 2019-2021: III/3/a; SF-SAC 2022: III/3/a Census mapping: GENERAL, DUP_REPORTS",
                null=True,
                verbose_name="Whether or not the financial statements include departments that have separate expenditures not included in this audit",
            ),
        ),
        migrations.AlterField(
            model_name="general",
            name="ein",
            field=models.IntegerField(
                help_text="Data sources: SF-SAC 1997-2000: I/5/a; SF-SAC 2001-2003: I/5/a; SF-SAC 2004-2007: I/5/a; SF-SAC 2008-2009: I/4/a; SF-SAC 2010-2012: I/4/a; SF-SAC 2013-2015: I/4/a; SF-SAC 2016-2018: I/4/a; SF-SAC 2019-2021: I/4/a; SF-SAC 2022: I/4/a Census mapping: GENERAL, EIN",
                verbose_name="Primary Employer Identification Number",
            ),
        ),
        migrations.AlterField(
            model_name="general",
            name="fy_end_date",
            field=models.DateField(
                help_text="Data sources: SF-SAC 1997-2000: Part I, Item 1; SF-SAC 2001-2003: Part I, Item 1; SF-SAC 2004-2007: Part I, Item 1; SF-SAC 2008-2009: Part I, Item 1; SF-SAC 2010-2012: Part I, Item 1; SF-SAC 2013-2015: Part I, Item 1; SF-SAC 2016-2018: Part I, Item 1; SF-SAC 2019-2021: I/1/b; SF-SAC 2022: I/1/b Census mapping: GENERAL, FYENDDATE",
                verbose_name="Fiscal Year End Date",
            ),
        ),
        migrations.AlterField(
            model_name="general",
            name="fy_start_date",
            field=models.DateField(
                help_text="Data sources: SF-SAC 2019-2021: Part I, Item 1(a); SF-SAC 2022: Part I, Item 1(a) Census mapping: GENERAL, FYSTARTDATE",
                null=True,
                verbose_name="Fiscal Year Start Date",
            ),
        ),
        migrations.AlterField(
            model_name="general",
            name="going_concern",
            field=models.BooleanField(
                help_text="Data sources: SF-SAC 1997-2000: II/2; SF-SAC 2001-2003: II/2; SF-SAC 2004-2007: II/2; SF-SAC 2008-2009: II/2; SF-SAC 2010-2012: II/2; SF-SAC 2013-2015: II/2; SF-SAC 2016-2018: III/2/b; SF-SAC 2019-2021: III/2/b; SF-SAC 2022: III/2/b Census mapping: GENERAL, GOINGCONCERN",
                null=True,
                verbose_name="Whether or not the audit contained a going concern paragraph on financial statements",
            ),
        ),
        migrations.AlterField(
            model_name="general",
            name="low_risk",
            field=models.BooleanField(
                help_text="Data sources: SF-SAC 1997-2000: III/3; SF-SAC 2001-2003: III/4; SF-SAC 2004-2007: III/3; SF-SAC 2008-2009: III/3; SF-SAC 2010-2012: III/3; SF-SAC 2013-2015: III/3; SF-SAC 2016-2018: III/3/c; SF-SAC 2019-2021: III/3/c; SF-SAC 2022: III/3/c Census mapping: GENERAL, LOWRISK",
                null=True,
                verbose_name="Indicate whether or not the auditee qualified as a low-risk auditee",
            ),
        ),
        migrations.AlterField(
            model_name="general",
            name="material_noncompliance",
            field=models.BooleanField(
                help_text="Data sources: SF-SAC 1997-2000: II/5; SF-SAC 2001-2003: II/5; SF-SAC 2004-2007: II/5; SF-SAC 2008-2009: II/5; SF-SAC 2010-2012: II/5; SF-SAC 2013-2015: II/5; SF-SAC 2016-2018: III/2/e; SF-SAC 2019-2021: III/2/e; SF-SAC 2022: III/2/e Census mapping: GENERAL, MATERIALNONCOMPLIANCE",
                null=True,
                verbose_name="Whether or not the audit disclosed a material noncompliance on financial statements",
            ),
        ),
        migrations.AlterField(
            model_name="general",
            name="material_weakness",
            field=models.BooleanField(
                help_text="Data sources: SF-SAC 1997-2000: II/4; SF-SAC 2001-2003: II/4; SF-SAC 2004-2007: II/4; SF-SAC 2008-2009: II/4; SF-SAC 2010-2012: II/4; SF-SAC 2013-2015: II/4; SF-SAC 2016-2018: III/2/d; SF-SAC 2019-2021: III/2/d; SF-SAC 2022: III/2/d Census mapping: GENERAL, MATERIALWEAKNESS",
                null=True,
                verbose_name="Whether or not the audit disclosed any reportable condition/significant deficiency as a material weakness on financial statements",
            ),
        ),
        migrations.AlterField(
            model_name="general",
            name="material_weakness_major_program",
            field=models.BooleanField(
                help_text="Data sources: SF-SAC 2001-2003: III/6; SF-SAC 2004-2007: III/5; SF-SAC 2008-2009: III/5; SF-SAC 2010-2012: III/5 Census mapping: GENERAL, MATERIALWEAKNESS_MP",
                null=True,
                verbose_name="Indicate whether any reportable condition/signficant deficiency was disclosed as a material weakness for a major program in the Schedule of Findings and Questioned Costs",
            ),
        ),
        migrations.AlterField(
            model_name="general",
            name="multiple_cpas",
            field=models.BooleanField(
                help_text="Data sources: SF-SAC 2008-2009: I/7/a; SF-SAC 2010-2012: I/7/a; SF-SAC 2013-2015: I/7; SF-SAC 2016-2018: I/7; SF-SAC 2019-2021: I/6/g; SF-SAC 2022: I/6/g Census mapping: GENERAL, MULTIPLE_CPAS",
                null=True,
                verbose_name="Identifies if the Submission Contains Multiple CPAs",
            ),
        ),
        migrations.AlterField(
            model_name="general",
            name="multiple_duns",
            field=models.BooleanField(
                help_text="Data sources: SF-SAC 2004-2007: I/5/e; SF-SAC 2008-2009: I/4/e; SF-SAC 2010-2012: I/4/e; SF-SAC 2013-2015: I/4/e; SF-SAC 2016-2018: I/4/e; SF-SAC 2019-2021: I/4/e; SF-SAC 2022: I/4/e Census mapping: GENERAL, MULTIPLEDUNS",
                null=True,
                verbose_name="Identifies if the Submission Contains Multiple DUNS",
            ),
        ),
        migrations.AlterField(
            model_name="general",
            name="multiple_eins",
            field=models.BooleanField(
                help_text="Data sources: SF-SAC 1997-2000: I/5/b; SF-SAC 2001-2003: I/5/b; SF-SAC 2004-2007: I/5/b; SF-SAC 2008-2009: I/4/b; SF-SAC 2010-2012: I/4/b; SF-SAC 2013-2015: I/4/b; SF-SAC 2016-2018: I/4/b; SF-SAC 2019-2021: I/4/b; SF-SAC 2022: I/4/b Census mapping: GENERAL, MULTIPLEEINS",
                null=True,
                verbose_name="Identifies if the Submission Contains Multiple EINs",
            ),
        ),
        migrations.AlterField(
            model_name="general",
            name="number_months",
            field=models.IntegerField(
                help_text="Data sources: SF-SAC 1997-2000: I/3; SF-SAC 2001-2003: I/3; SF-SAC 2004-2007: I/3; SF-SAC 2008-2009: I/3; SF-SAC 2010-2012: I/3; SF-SAC 2013-2015: I/3; SF-SAC 2016-2018: I/3; SF-SAC 2019-2021: I/3; SF-SAC 2022: I/3 Census mapping: GENERAL, NUMBERMONTHS",
                null=True,
                verbose_name="Number of Months Covered by the 'Other' Audit Period",
            ),
        ),
        migrations.AlterField(
            model_name="general",
            name="oversight_agency",
            field=models.IntegerField(
                help_text="Data sources: SF-SAC 1997-2000: I/9; SF-SAC 2001-2003: I/9 Census mapping: GENERAL, OVERSIGHTAGENCY",
                null=True,
                verbose_name="Two digit Federal agency prefix of the oversight agency",
            ),
        ),
        migrations.AlterField(
            model_name="general",
            name="period_covered",
            field=models.CharField(
                help_text="Data sources: SF-SAC 1997-2000: I/3; SF-SAC 2001-2003: I/3; SF-SAC 2004-2007: I/3; SF-SAC 2008-2009: I/3; SF-SAC 2010-2012: I/3; SF-SAC 2013-2015: I/3; SF-SAC 2016-2018: I/3; SF-SAC 2019-2021: I/3; SF-SAC 2022: I/3 Census mapping: GENERAL, PERIODCOVERED",
                max_length=40,
                verbose_name="Audit Period Covered by Audit",
            ),
        ),
        migrations.AlterField(
            model_name="general",
            name="prior_year_schedule",
            field=models.BooleanField(
                help_text="Data sources: SF-SAC 2001-2003: III/8; SF-SAC 2004-2007: III/7; SF-SAC 2008-2009: III/7; SF-SAC 2010-2012: III/7; SF-SAC 2013-2015: III/4 Census mapping: GENERAL, PYSCHEDULE",
                null=True,
                verbose_name="Indicate whether or not the report includes a Summary Schedule of Prior Year Audit Findings",
            ),
        ),
        migrations.AlterField(
            model_name="general",
            name="questioned_costs",
            field=models.BooleanField(
                help_text="Data sources: SF-SAC 2001-2003: III/7; SF-SAC 2004-2007: III/6; SF-SAC 2008-2009: III/6; SF-SAC 2010-2012: III/6 Census mapping: GENERAL, QCOSTS",
                null=True,
                verbose_name="Indicate whether or not the audit disclosed any known questioned costs.",
            ),
        ),
        migrations.AlterField(
            model_name="general",
            name="report_required",
            field=models.BooleanField(
                help_text="Data sources: SF-SAC 1997-2000: III/5; SF-SAC 2001-2003: III/9; SF-SAC 2004-2007: III/8 Census mapping: GENERAL, REPORTREQUIRED",
                null=True,
                verbose_name="Distribution to Federal Agency required?",
            ),
        ),
        migrations.AlterField(
            model_name="general",
            name="sp_framework",
            field=models.CharField(
                help_text="Data sources: SF-SAC 2016-2018: III/2/a/ii; SF-SAC 2019-2021: III/2/a/i; SF-SAC 2022: III/2/a/i Census mapping: GENERAL, SP_FRAMEWORK",
                max_length=40,
                null=True,
                verbose_name="Special Purpose Framework that was used as the basis of accounting",
            ),
        ),
        migrations.AlterField(
            model_name="general",
            name="sp_framework_required",
            field=models.BooleanField(
                help_text="Data sources: SF-SAC 2016-2018: III/2/a/iii; SF-SAC 2019-2021: III/2/a/ii; SF-SAC 2022: III/2/a/ii Census mapping: GENERAL, SP_FRAMEWORK_REQUIRED",
                null=True,
                verbose_name="Indicate whether or not the special purpose framework used as basis of accounting by state law or tribal law",
            ),
        ),
        migrations.AlterField(
            model_name="general",
            name="state",
            field=models.CharField(
                help_text="Data sources: SF-SAC 1997-2000: I/6/b; SF-SAC 2001-2003: I/6/b; SF-SAC 2004-2007: I/6/b; SF-SAC 2008-2009: I/5/b; SF-SAC 2010-2012: I/5/b; SF-SAC 2013-2015: I/5/b; SF-SAC 2016-2018: I/5/b; SF-SAC 2019-2021: I/5/b; SF-SAC 2022: I/5/b Census mapping: GENERAL, STATE",
                max_length=2,
                verbose_name="Auditee State",
            ),
        ),
        migrations.AlterField(
            model_name="general",
            name="street1",
            field=models.CharField(
                help_text="Data sources: SF-SAC 1997-2000: I/6/b; SF-SAC 2001-2003: I/6/b; SF-SAC 2004-2007: I/6/b; SF-SAC 2008-2009: I/5/b; SF-SAC 2010-2012: I/5/b; SF-SAC 2013-2015: I/5/b; SF-SAC 2016-2018: I/5/b; SF-SAC 2019-2021: I/5/b; SF-SAC 2022: I/5/b Census mapping: GENERAL, STREET1",
                max_length=45,
                verbose_name="Auditee Street Address",
            ),
        ),
        migrations.AlterField(
            model_name="general",
            name="street2",
            field=models.CharField(
                help_text="Data sources: SF-SAC 1997-2000: I/6/b; SF-SAC 2001-2003: I/6/b; SF-SAC 2004-2007: I/6/b; SF-SAC 2008-2009: I/5/b; SF-SAC 2010-2012: I/5/b; SF-SAC 2013-2015: I/5/b; SF-SAC 2016-2018: I/5/b; SF-SAC 2019-2021: I/5/b; SF-SAC 2022: I/5/b Census mapping: GENERAL, STREET2",
                max_length=45,
                null=True,
                verbose_name="Auditee Street Address",
            ),
        ),
        migrations.AlterField(
            model_name="general",
            name="total_fed_expenditures",
            field=models.BigIntegerField(
                help_text="Data sources: SF-SAC 1997-2000: III/6/c- Total; SF-SAC 2001-2003: III/10/d -Total; SF-SAC 2004-2007: III/9/e -Total; SF-SAC 2008-2009: III/9/e -Total; SF-SAC 2010-2012: III/9/f -Total; SF-SAC 2013-2015: III/6/d -Total; SF-SAC 2016-2018: II/1/e- Total; SF-SAC 2019-2021: II/1/e - Total; SF-SAC 2022: II/1/e - Total Census mapping: GENERAL, TOTFEDEXPEND",
                verbose_name="Total Federal Expenditures",
            ),
        ),
        migrations.AlterField(
            model_name="general",
            name="type_report_financial_statements",
            field=models.CharField(
                help_text="Data sources: SF-SAC 1997-2000: II/1; SF-SAC 2001-2003: II/1; SF-SAC 2004-2007: II/1; SF-SAC 2008-2009: II/1; SF-SAC 2010-2012: II/1; SF-SAC 2013-2015: II/1; SF-SAC 2016-2018: III/2/a/i; SF-SAC 2019-2021: III/2/a; SF-SAC 2022: III/2/a Census mapping: GENERAL, TYPEREPORT_FS",
                max_length=40,
                null=True,
                verbose_name="Type of Report Issued on the Financial Statements",
            ),
        ),
        migrations.AlterField(
            model_name="general",
            name="type_report_major_program",
            field=models.CharField(
                help_text="Data sources: SF-SAC 1997-2000: III/1; SF-SAC 2001-2003: III/1 Census mapping: GENERAL, TYPEREPORT_MP",
                max_length=40,
                null=True,
                verbose_name="Type of Report Issued on the Major Program Compliance",
            ),
        ),
        migrations.AlterField(
            model_name="general",
            name="type_report_special_purpose_framework",
            field=models.CharField(
                help_text="Data sources: SF-SAC 2016-2018: III/2/a/iv; SF-SAC 2019-2021: III/2/a/iii; SF-SAC 2022: III/2/a/iii Census mapping: GENERAL, TYPEREPORT_SP_FRAMEWORK",
                max_length=40,
                null=True,
                verbose_name="The auditor's opinion on the special purpose framework",
            ),
        ),
        migrations.AlterField(
            model_name="general",
            name="zip_code",
            field=models.IntegerField(
                help_text="Data sources: SF-SAC 1997-2000: I/6/b; SF-SAC 2001-2003: I/6/b; SF-SAC 2004-2007: I/6/b; SF-SAC 2008-2009: I/5/b; SF-SAC 2010-2012: I/5/b; SF-SAC 2013-2015: I/5/b; SF-SAC 2016-2018: I/5/b; SF-SAC 2019-2021: I/5/b; SF-SAC 2022: I/5/b Census mapping: GENERAL, ZIPCODE",
                verbose_name="Auditee Zipcode",
            ),
        ),
        migrations.AlterField(
            model_name="multiplecpasinfo",
            name="cpa_city",
            field=models.CharField(
                help_text="Data sources: SF-SAC 2008-2009: I/8/b; SF-SAC 2010-2012: I/8/b; SF-SAC 2013-2015: I/8/d; SF-SAC 2016-2018: I/8/d; SF-SAC 2019-2021: I/6/h/iv; SF-SAC 2022: I/6/h/iv Census mapping: MULTIPLE CPAS INFO, CPACITY",
                max_length=30,
                verbose_name="CPA City",
            ),
        ),
        migrations.AlterField(
            model_name="multiplecpasinfo",
            name="cpa_contact",
            field=models.CharField(
                help_text="Data sources: SF-SAC 2008-2009: I/8/c; SF-SAC 2010-2012: I/8/c; SF-SAC 2013-2015: I/8/g; SF-SAC 2016-2018: I/8/g; SF-SAC 2019-2021: I/6/h/vii; SF-SAC 2022: I/6/h/vii Census mapping: MULTIPLE CPAS INFO, CPACONTACT",
                max_length=50,
                verbose_name="Name of CPA Contact",
            ),
        ),
        migrations.AlterField(
            model_name="multiplecpasinfo",
            name="cpa_ein",
            field=models.IntegerField(
                help_text="Data sources: SF-SAC 2013-2015: I/8/b; SF-SAC 2016-2018: I/8/b; SF-SAC 2019-2021: I/6/h/ii; SF-SAC 2022: I/6/h/ii Census mapping: MULTIPLE CPAS INFO, CPAEIN",
                null=True,
                verbose_name="CPA Firm EIN (only available for audit years 2013 and beyond)",
            ),
        ),
        migrations.AlterField(
            model_name="multiplecpasinfo",
            name="cpa_email",
            field=models.CharField(
                help_text="Data sources: SF-SAC 2008-2009: I/8/f; SF-SAC 2010-2012: I/8/f; SF-SAC 2013-2015: I/8/k; SF-SAC 2016-2018: I/8/k; SF-SAC 2019-2021: I/6/h/x; SF-SAC 2022: I/6/h/x Census mapping: MULTIPLE CPAS INFO, CPAEMAIL",
                max_length=60,
                null=True,
                verbose_name="CPA mail address (optional)",
            ),
        ),
        migrations.AlterField(
            model_name="multiplecpasinfo",
            name="cpa_fax",
            field=models.PositiveBigIntegerField(
                help_text="Data sources: SF-SAC 2008-2009: I/8/e; SF-SAC 2010-2012: I/8/e; SF-SAC 2013-2015: I/8/j; SF-SAC 2016-2018: I/8/j Census mapping: MULTIPLE CPAS INFO, CPAFAX",
                null=True,
                verbose_name="CPA fax number (optional)",
            ),
        ),
        migrations.AlterField(
            model_name="multiplecpasinfo",
            name="cpa_firm_name",
            field=models.CharField(
                help_text="Data sources: SF-SAC 2008-2009: I/8/a; SF-SAC 2010-2012: I/8/a; SF-SAC 2013-2015: I/8/a; SF-SAC 2016-2018: I/8/a; SF-SAC 2019-2021: I/6/h/i; SF-SAC 2022: I/6/h/i Census mapping: MULTIPLE CPAS INFO, CPAFIRMNAME",
                max_length=64,
                verbose_name="CPA Firm Name",
            ),
        ),
        migrations.AlterField(
            model_name="multiplecpasinfo",
            name="cpa_phone",
            field=models.PositiveBigIntegerField(
                help_text="Data sources: SF-SAC 2008-2009: I/8/d; SF-SAC 2010-2012: I/8/d; SF-SAC 2013-2015: I/8/i; SF-SAC 2016-2018: I/8/i; SF-SAC 2019-2021: I/6/h/ix; SF-SAC 2022: I/6/h/ix Census mapping: MULTIPLE CPAS INFO, CPAPHONE",
                null=True,
                verbose_name="CPA phone number",
            ),
        ),
        migrations.AlterField(
            model_name="multiplecpasinfo",
            name="cpa_state",
            field=models.CharField(
                help_text="Data sources: SF-SAC 2008-2009: I/8/b; SF-SAC 2010-2012: I/8/b; SF-SAC 2013-2015: I/8/e; SF-SAC 2016-2018: I/8/e; SF-SAC 2019-2021: I/6/h/v; SF-SAC 2022: I/6/h/v Census mapping: MULTIPLE CPAS INFO, CPASTATE",
                max_length=2,
                verbose_name="CPA State",
            ),
        ),
        migrations.AlterField(
            model_name="multiplecpasinfo",
            name="cpa_street1",
            field=models.CharField(
                help_text="Data sources: SF-SAC 2008-2009: I/8/b; SF-SAC 2010-2012: I/8/b; SF-SAC 2013-2015: I/8/c; SF-SAC 2016-2018: I/8/c; SF-SAC 2019-2021: I/6/h/iii; SF-SAC 2022: I/6/h/iii Census mapping: MULTIPLE CPAS INFO, CPASTREET1",
                max_length=45,
                verbose_name="CPA Street Address",
            ),
        ),
        migrations.AlterField(
            model_name="multiplecpasinfo",
            name="cpa_title",
            field=models.CharField(
                help_text="Data sources: SF-SAC 2008-2009: I/8/c; SF-SAC 2010-2012: I/8/c; SF-SAC 2013-2015: I/8/h; SF-SAC 2016-2018: I/8/h; SF-SAC 2019-2021: I/6/h/viii; SF-SAC 2022: I/6/h/viii Census mapping: MULTIPLE CPAS INFO, CPATITLE",
                max_length=40,
                verbose_name="Title of CPA Contact",
            ),
        ),
        migrations.AlterField(
            model_name="multiplecpasinfo",
            name="cpa_zip_code",
            field=models.IntegerField(
                help_text="Data sources: SF-SAC 2008-2009: I/8/b; SF-SAC 2010-2012: I/8/b; SF-SAC 2013-2015: I/8/f; SF-SAC 2016-2018: I/8/f; SF-SAC 2019-2021: I/6/h/vi; SF-SAC 2022: I/6/h/vi Census mapping: MULTIPLE CPAS INFO, CPAZIPCODE",
                null=True,
                verbose_name="CPA Zip Code",
            ),
        ),
        migrations.AlterField(
            model_name="notes",
            name="content",
            field=models.TextField(
                help_text="Data sources: SF-SAC 2019-2021: II/2; SF-SAC 2022: II/2 Census mapping: NOTES, CONTENT",
                verbose_name="Content of the Note",
            ),
        ),
        migrations.AlterField(
            model_name="notes",
            name="title",
            field=models.CharField(
                help_text="Data sources: SF-SAC 2019-2021: II/2; SF-SAC 2022: II/2 Census mapping: NOTES, TITLE",
                max_length=75,
                verbose_name="Note Title",
            ),
        ),
        migrations.AlterField(
            model_name="passthrough",
            name="passthrough_id",
            field=models.CharField(
                help_text="Data sources: SF-SAC 2016-2018: II/1/m; SF-SAC 2019-2021: II/1/m; SF-SAC 2022: II/1/m Census mapping: PASSTHROUGH, PASSTHROUGHID",
                max_length=70,
                verbose_name="Identifying Number Assigned by the Pass-through Entity",
            ),
        ),
        migrations.AlterField(
            model_name="passthrough",
            name="passthrough_name",
            field=models.CharField(
                help_text="Data sources: SF-SAC 2016-2018: II/1/l; SF-SAC 2019-2021: II/1/l; SF-SAC 2022: II/1/l Census mapping: PASSTHROUGH, PASSTHROUGHNAME",
                max_length=70,
                verbose_name="Name of Pass-through Entity",
            ),
        ),
        migrations.AlterField(
            model_name="ueiinfo",
            name="uei",
            field=models.CharField(
                help_text="Data sources: SF-SAC 2004-2007: I/5/f; SF-SAC 2008-2009: I/4/f; SF-SAC 2010-2012: I/4/f; SF-SAC 2013-2015: I/4/f; SF-SAC 2016-2018: I/4/f; SF-SAC 2019-2021: I/4/f; SF-SAC 2022: I/4/i Census mapping: UEI INFO, UEI",
                max_length=12,
                verbose_name="Multiple Unique Entity Identifier Numbers",
            ),
        ),
        migrations.AddField(
            model_name="general",
            name="auditee",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="data_distro.auditee",
            ),
        ),
        migrations.AddField(
            model_name="general",
            name="auditor",
            field=models.ManyToManyField(to="data_distro.auditor"),
        ),
        migrations.AlterField(
            model_name="general",
            name="cap_text",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="data_distro.captext",
            ),
        ),
        migrations.DeleteModel(
            name="Capext",
        ),
    ]
