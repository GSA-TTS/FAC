# This uses an env var called PG to 
# set the connection string.
source: FAC_SNAPSHOT_URI
target: FAC_SNAPSHOT_URI
env:
  SLING_ALLOW_EMPTY: true

# Handy
# SELECT column_name
# FROM information_schema.columns
# WHERE table_schema = 'public'
# AND table_name = 'dissemination_general'
# AND column_name NOT IN ('id');

streams:
  # Corrective action plans are NOT always public.
  public.dissemination_corrective_action_plan:
    mode: incremental
    update_key: cap.id
    object: public_data_v1_0_0.tribal_corrective_action_plans
    sql: |
      SELECT
        cap.id,
        gen.report_id,
        gen.auditee_uei,
        gen.audit_year,
        gen.fac_accepted_date,
        ---
        cap.contains_chart_or_table,
        cap.finding_ref_number,
        cap.planned_action
      FROM
        public_data_v1_0_0.general gen,
        public.dissemination_captext cap
      WHERE
        cap.report_id = gen.report_id
        AND
        -- Only include the public corrective action plans.
        gen.is_public = false
        AND
        {incremental_where_cond}
      ORDER BY cap.id

  # Findings text is NOT always public.
  public.dissemination_findingstext:
    mode: incremental
    update_key: ft.id
    object: public_data_v1_0_0.tribal_findings_text
    sql: |
      SELECT
        ft.id,
        gen.report_id,
        gen.auditee_uei,
        gen.audit_year,
        gen.fac_accepted_date,
        ft.finding_ref_number,
        ft.contains_chart_or_table,
        ft.finding_text
      FROM
          public_data_v1_0_0.general gen,
          public.dissemination_findingtext ft
      WHERE
          ft.report_id = gen.report_id
          AND
          gen.is_public = false
          AND
          {incremental_where_cond}
      ORDER BY ft.id

  # The notes to SEFA are NOT all public.
  public.dissemination_notes:
    mode: incremental
    update_key: note.id
    object: public_data_v1_0_0.tribal_notes_to_sefa
    sql: |
      SELECT
        note.id,
        gen.report_id,
        gen.auditee_uei,
        gen.audit_year,
        gen.fac_accepted_date,
        ---
        note.accounting_policies,
        note.contains_chart_or_table,
        note.content,
        note.is_minimis_rate_used,
        note.note_title as title,
        note.rate_explained
      FROM
          public_data_v1_0_0.general gen,
          public.dissemination_note note
      WHERE
          note.report_id = gen.report_id
          AND
          -- Some notes are not public.
          gen.is_public = false
          AND
          {incremental_where_cond}
      ORDER BY note.id

  # Should only update the tables above...
  public_data_v1_0_0.metadata:
    mode: incremental
    object: public_data_v1_0_0.metadata_v2_0_0_a
    sql: |
      SELECT 'tribal_corrective_action_plans' 
        AS table, COUNT(*), public_api_v2_0_0_alpha_functions.batches('tribal_corrective_action_plans')  
        FROM public_data_v1_0_0.tribal_corrective_action_plans
      UNION
      SELECT 'tribal_findings_text' 
        AS table, COUNT(*), public_api_v2_0_0_alpha_functions.batches('tribal_findings_text')  
        FROM public_data_v1_0_0.tribal_findings_text
      UNION
      SELECT 'tribal_notes_to_sefa' 
        AS table, COUNT(*), public_api_v2_0_0_alpha_functions.batches('tribal_notes_to_sefa')  
        FROM public_data_v1_0_0.tribal_notes_to_sefa
