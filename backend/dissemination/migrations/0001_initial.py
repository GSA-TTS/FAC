# Generated by Django 4.2.1 on 2023-07-05 22:34

from typing import List
import django.contrib.postgres.fields
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies: List[str] = []

    operations = [
        migrations.CreateModel(
            name="Revision",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "findings",
                    models.CharField(
                        help_text="Census mapping: REVISIONS, FINDINGS",
                        max_length=110,
                        null=True,
                        verbose_name="Indicates what items on the Findings page were edited during the revision",
                    ),
                ),
                (
                    "revision_id",
                    models.IntegerField(
                        help_text="Census mapping: REVISIONS, ELECRPTREVISIONID",
                        null=True,
                        verbose_name="Internal Unique Identifier for the record",
                    ),
                ),
                (
                    "federal_awards",
                    models.CharField(
                        help_text="Census mapping: REVISIONS, FEDERALAWARDS",
                        max_length=140,
                        null=True,
                        verbose_name="Indicates what items on the Federal Awards page were edited during the revision",
                    ),
                ),
                (
                    "general_info_explain",
                    models.TextField(
                        help_text="Census mapping: REVISIONS, GENINFO_EXPLAIN",
                        null=True,
                        verbose_name="Explanation of what items on the General Info page were edited during the revision",
                    ),
                ),
                (
                    "federal_awards_explain",
                    models.TextField(
                        help_text="Census mapping: REVISIONS, FEDERALAWARDS_EXPLAIN",
                        null=True,
                        verbose_name="Explanation of what items on the Federal Awards page were edited during the revision",
                    ),
                ),
                (
                    "notes_to_sefa_explain",
                    models.TextField(
                        help_text="Census mapping: REVISIONS, NOTESTOSEFA_EXPLAIN",
                        null=True,
                        verbose_name="Explanation of what items on the Notes to Schedule of Expenditures of Federal Awards (SEFA) page were edited during the revision",
                    ),
                ),
                (
                    "audit_info_explain",
                    models.TextField(
                        help_text="Census mapping: REVISIONS, AUDITINFO_EXPLAIN",
                        null=True,
                        verbose_name="Explanation of what items on the Audit Info page were edited during the revision",
                    ),
                ),
                (
                    "findings_explain",
                    models.TextField(
                        help_text="Census mapping: REVISIONS, FINDINGS_EXPLAIN",
                        null=True,
                        verbose_name="Explanation of what items on the Findings page were edited during the revision",
                    ),
                ),
                (
                    "findings_text_explain",
                    models.TextField(
                        help_text="Census mapping: REVISIONS, FINDINGSTEXT_EXPLAIN",
                        null=True,
                        verbose_name="Explanation of what items on the Text of the Audit Findings page were edited during the revision",
                    ),
                ),
                (
                    "cap_explain",
                    models.TextField(
                        help_text="Census mapping: REVISIONS, CAP_EXPLAIN",
                        null=True,
                        verbose_name="Explanation of what items on the CAP Text page were edited during the revision",
                    ),
                ),
                (
                    "other_explain",
                    models.TextField(
                        help_text="Census mapping: REVISIONS, OTHER_EXPLAIN",
                        null=True,
                        verbose_name="Explanation of what other miscellaneous items were edited during the revision",
                    ),
                ),
                (
                    "audit_info",
                    models.CharField(
                        help_text="Census mapping: REVISIONS, AUDITINFO",
                        max_length=200,
                        null=True,
                        verbose_name="Indicates what items on the Audit Info page were edited during the revision",
                    ),
                ),
                (
                    "notes_to_sefa",
                    models.CharField(
                        help_text="Census mapping: REVISIONS, NOTESTOSEFA",
                        max_length=50,
                        null=True,
                        verbose_name="Indicates what items on the Notes to Schedule of Expenditures of Federal Awards (SEFA) page were edited during the revision",
                    ),
                ),
                (
                    "findings_text",
                    models.CharField(
                        help_text="Census mapping: REVISIONS, FINDINGSTEXT",
                        max_length=6,
                        null=True,
                        verbose_name="Indicates what items on the Text of the Audit Findings page were edited during the revision",
                    ),
                ),
                (
                    "cap",
                    models.CharField(
                        help_text="Census mapping: REVISIONS, CAP",
                        max_length=6,
                        null=True,
                        verbose_name="Indicates what items on the CAP Text page were edited during the revision",
                    ),
                ),
                (
                    "other",
                    models.CharField(
                        help_text="Census mapping: REVISIONS, OTHER",
                        max_length=65,
                        null=True,
                        verbose_name="Indicates what other miscellaneous items were edited during the revision",
                    ),
                ),
                (
                    "general_info",
                    models.CharField(
                        help_text="Census mapping: REVISIONS, GENINFO",
                        max_length=75,
                        null=True,
                        verbose_name="Indicates what items on the General Info page were edited during the revision",
                    ),
                ),
                (
                    "audit_year",
                    models.CharField(
                        help_text="Census mapping: REVISIONS, AUDITYEAR",
                        max_length=40,
                        verbose_name="Audit Year and DBKEY (database key) combined make up the primary key.",
                    ),
                ),
                (
                    "report_id",
                    models.CharField(
                        max_length=40,
                        verbose_name="G-FAC generated identifier. FK refers to General",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Passthrough",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "report_id",
                    models.CharField(
                        max_length=40,
                        verbose_name="G-FAC generated identifier. FK refers to General",
                    ),
                ),
                (
                    "award_seq_number",
                    models.IntegerField(
                        null=True, verbose_name="Order that the award line was reported"
                    ),
                ),
                (
                    "passthrough_id",
                    models.CharField(
                        help_text="Data sources: SF-SAC 2016-2018: II/1/m; SF-SAC 2019-2021: II/1/m; SF-SAC 2022: II/1/m Census mapping: PASSTHROUGH, PASSTHROUGHID",
                        max_length=70,
                        null=True,
                        verbose_name="Identifying Number Assigned by the Pass-through Entity",
                    ),
                ),
                (
                    "passthrough_name",
                    models.CharField(
                        help_text="Data sources: SF-SAC 2016-2018: II/1/l; SF-SAC 2019-2021: II/1/l; SF-SAC 2022: II/1/l Census mapping: PASSTHROUGH, PASSTHROUGHNAME",
                        max_length=150,
                        null=True,
                        verbose_name="Name of Pass-through Entity",
                    ),
                ),
            ],
            options={
                "unique_together": {
                    ("report_id", "award_seq_number", "passthrough_id")
                },
            },
        ),
        migrations.CreateModel(
            name="Note",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "report_id",
                    models.CharField(
                        max_length=40,
                        verbose_name="G-FAC generated identifier. FK refers to a General",
                    ),
                ),
                (
                    "note_seq_number",
                    models.IntegerField(
                        help_text="Census mapping: NOTES, SEQ_NUMBER",
                        verbose_name="Order that the Note was reported",
                    ),
                ),
                (
                    "type_id",
                    models.CharField(
                        help_text="Census mapping: NOTES, TYPE_ID",
                        max_length=1,
                        verbose_name="Note Type",
                    ),
                ),
                (
                    "note_index",
                    models.IntegerField(
                        help_text="Census mapping: NOTES, NOTE_INDEX",
                        null=True,
                        verbose_name="Display Index for the Note",
                    ),
                ),
                (
                    "content",
                    models.TextField(
                        help_text="Data sources: SF-SAC 2019-2021: II/2; SF-SAC 2022: II/2 Census mapping: NOTES, CONTENT",
                        null=True,
                        verbose_name="Content of the Note",
                    ),
                ),
                (
                    "note_title",
                    models.CharField(
                        help_text="Data sources: SF-SAC 2019-2021: II/2; SF-SAC 2022: II/2 Census mapping: NOTES, TITLE",
                        max_length=75,
                        null=True,
                        verbose_name="Note Title",
                    ),
                ),
            ],
            options={
                "unique_together": {("report_id", "note_seq_number")},
            },
        ),
        migrations.CreateModel(
            name="General",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "report_id",
                    models.CharField(
                        max_length=40,
                        unique=True,
                        verbose_name="G-FAC generated identifier. ",
                    ),
                ),
                (
                    "auditee_certify_name",
                    models.CharField(
                        help_text="Data sources: SF-SAC 1997-2000: I/6/g; SF-SAC 2001-2003: I/6/g; SF-SAC 2004-2007: I/6/g; SF-SAC 2008-2009: I/5/g; SF-SAC 2010-2012: I/5/g; SF-SAC 2013-2015: certifications; SF-SAC 2016-2018: certifications; SF-SAC 2019-2021: certifications; SF-SAC 2022: certifications Census mapping: GENERAL, AUDITEECERTIFYNAME",
                        max_length=50,
                        null=True,
                        verbose_name="Name of Auditee Certifying Official",
                    ),
                ),
                (
                    "auditee_certify_title",
                    models.CharField(
                        help_text="Data sources: SF-SAC 1997-2000: I/6/g; SF-SAC 2001-2003: I/6/g; SF-SAC 2004-2007: I/6/g; SF-SAC 2008-2009: I/5/g; SF-SAC 2010-2012: I/5/g; SF-SAC 2013-2015: certifications; SF-SAC 2016-2018: certifications; SF-SAC 2019-2021: certifications; SF-SAC 2022: certifications Census mapping: GENERAL, AUDITEECERTIFYTITLE",
                        max_length=50,
                        null=True,
                        verbose_name="Title of Auditee Certifying Official",
                    ),
                ),
                (
                    "auditee_contact_name",
                    models.CharField(
                        help_text="Data sources: SF-SAC 1997-2000: I/6/c; SF-SAC 2001-2003: I/6/c; SF-SAC 2004-2007: I/6/c; SF-SAC 2008-2009: I/5/c; SF-SAC 2010-2012: I/5/c; SF-SAC 2013-2015: I/5/c; SF-SAC 2016-2018: I/5/c; SF-SAC 2019-2021: I/5/c; SF-SAC 2022: I/5/c Census mapping: GENERAL, AUDITEECONTACT",
                        max_length=50,
                        null=True,
                        verbose_name="Name of Auditee Contact",
                    ),
                ),
                (
                    "auditee_email",
                    models.CharField(
                        help_text="Data sources: SF-SAC 1997-2000: I/6/f; SF-SAC 2001-2003: I/6/f; SF-SAC 2004-2007: I/6/f; SF-SAC 2008-2009: I/5/f; SF-SAC 2010-2012: I/5/f; SF-SAC 2013-2015: I/5/f; SF-SAC 2016-2018: I/5/e; SF-SAC 2019-2021: I/5/e; SF-SAC 2022: I/5/e Census mapping: GENERAL, AUDITEEEMAIL",
                        max_length=60,
                        null=True,
                        verbose_name="Auditee Email address",
                    ),
                ),
                (
                    "hist_auditee_fax",
                    models.PositiveBigIntegerField(
                        help_text="Data sources: SF-SAC 1997-2000: I/6/e; SF-SAC 2001-2003: I/6/e; SF-SAC 2004-2007: I/6/e; SF-SAC 2008-2009: I/5/e; SF-SAC 2010-2012: I/5/e; SF-SAC 2013-2015: I/5/e Census mapping: GENERAL, AUDITEEFAX",
                        null=True,
                        verbose_name="Auditee Fax Number (optional)",
                    ),
                ),
                (
                    "auditee_name",
                    models.CharField(
                        help_text="Data sources: SF-SAC 1997-2000: I/6/a; SF-SAC 2001-2003: I/6/a; SF-SAC 2004-2007: I/6/a; SF-SAC 2008-2009: I/5/a; SF-SAC 2010-2012: I/5/a; SF-SAC 2013-2015: I/5/a; SF-SAC 2016-2018: I/5/a; SF-SAC 2019-2021: I/5/a; SF-SAC 2022: I/5/a Census mapping: GENERAL, AUDITEENAME",
                        max_length=70,
                        verbose_name="Name of the Auditee",
                    ),
                ),
                (
                    "auditee_phone",
                    models.PositiveBigIntegerField(
                        help_text="Data sources: SF-SAC 1997-2000: I/6/d; SF-SAC 2001-2003: I/6/d; SF-SAC 2004-2007: I/6/d; SF-SAC 2008-2009: I/5/d; SF-SAC 2010-2012: I/5/d; SF-SAC 2013-2015: I/5/d; SF-SAC 2016-2018: I/5/d; SF-SAC 2019-2021: I/5/d; SF-SAC 2022: I/5/d Census mapping: GENERAL, AUDITEEPHONE",
                        verbose_name="Auditee Phone Number",
                    ),
                ),
                (
                    "auditee_contact_title",
                    models.CharField(
                        help_text="Data sources: SF-SAC 1997-2000: I/6/c; SF-SAC 2001-2003: I/6/c; SF-SAC 2004-2007: I/6/c; SF-SAC 2008-2009: I/5/c; SF-SAC 2010-2012: I/5/c; SF-SAC 2013-2015: I/5/c; SF-SAC 2016-2018: I/5/c; SF-SAC 2019-2021: I/5/c; SF-SAC 2022: I/5/c Census mapping: GENERAL, AUDITEETITLE",
                        max_length=40,
                        null=True,
                        verbose_name="Title of Auditee Contact",
                    ),
                ),
                (
                    "auditee_address_line_1",
                    models.CharField(
                        help_text="Data sources: SF-SAC 1997-2000: I/6/b; SF-SAC 2001-2003: I/6/b; SF-SAC 2004-2007: I/6/b; SF-SAC 2008-2009: I/5/b; SF-SAC 2010-2012: I/5/b; SF-SAC 2013-2015: I/5/b; SF-SAC 2016-2018: I/5/b; SF-SAC 2019-2021: I/5/b; SF-SAC 2022: I/5/b Census mapping: GENERAL, STREET1",
                        max_length=45,
                        verbose_name="Auditee Street Address",
                    ),
                ),
                (
                    "hist_auditee_address_line_2",
                    models.CharField(
                        help_text="Data sources: SF-SAC 1997-2000: I/6/b; SF-SAC 2001-2003: I/6/b; SF-SAC 2004-2007: I/6/b; SF-SAC 2008-2009: I/5/b; SF-SAC 2010-2012: I/5/b; SF-SAC 2013-2015: I/5/b; SF-SAC 2016-2018: I/5/b; SF-SAC 2019-2021: I/5/b; SF-SAC 2022: I/5/b Census mapping: GENERAL, STREET2",
                        max_length=45,
                        null=True,
                        verbose_name="Auditee Street Address",
                    ),
                ),
                (
                    "auditee_city",
                    models.CharField(
                        help_text="Data sources: SF-SAC 1997-2000: I/6/b; SF-SAC 2001-2003: I/6/b; SF-SAC 2004-2007: I/6/b; SF-SAC 2008-2009: I/5/b; SF-SAC 2010-2012: I/5/b; SF-SAC 2013-2015: I/5/b; SF-SAC 2016-2018: I/5/b; SF-SAC 2019-2021: I/5/b; SF-SAC 2022: I/5/b Census mapping: GENERAL, CITY",
                        max_length=30,
                        verbose_name="Auditee City",
                    ),
                ),
                (
                    "auditee_state",
                    models.CharField(
                        help_text="Data sources: SF-SAC 1997-2000: I/6/b; SF-SAC 2001-2003: I/6/b; SF-SAC 2004-2007: I/6/b; SF-SAC 2008-2009: I/5/b; SF-SAC 2010-2012: I/5/b; SF-SAC 2013-2015: I/5/b; SF-SAC 2016-2018: I/5/b; SF-SAC 2019-2021: I/5/b; SF-SAC 2022: I/5/b Census mapping: GENERAL, STATE",
                        max_length=2,
                        verbose_name="Auditee State",
                    ),
                ),
                (
                    "auditee_ein",
                    models.IntegerField(
                        null=True, verbose_name="Primary Employer Identification Number"
                    ),
                ),
                (
                    "multiple_ein",
                    models.BooleanField(
                        help_text="Data sources: SF-SAC 1997-2000: I/5/b; SF-SAC 2001-2003: I/5/b; SF-SAC 2004-2007: I/5/b; SF-SAC 2008-2009: I/4/b; SF-SAC 2010-2012: I/4/b; SF-SAC 2013-2015: I/4/b; SF-SAC 2016-2018: I/4/b; SF-SAC 2019-2021: I/4/b; SF-SAC 2022: I/4/b Census mapping: GENERAL, MULTIPLEEINS",
                        null=True,
                        verbose_name="True if the audit contains more than one EIN",
                    ),
                ),
                (
                    "auditee_duns",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(
                            help_text="Data sources: SF-SAC 2004-2007: I/5/git ad; SF-SAC 2008-2009: I/4/d; SF-SAC 2010-2012: I/4/d; SF-SAC 2013-2015: I/4/d; SF-SAC 2016-2018: I/4/d; SF-SAC 2019-2021: I/4/d; SF-SAC 2022: I/4/d Census mapping: GENERAL, DUNS (AND) Data sources: SF-SAC 2004-2007: I/5/f; SF-SAC 2008-2009: I/4/f; SF-SAC 2010-2012: I/4/f; SF-SAC 2013-2015: I/4/f; SF-SAC 2016-2018: I/4/f; SF-SAC 2019-2021: I/4/f; SF-SAC 2022: I/4/f Census mapping: DUN INFO, DUNS",
                            null=True,
                            verbose_name="",
                        ),
                        null=True,
                        size=None,
                    ),
                ),
                (
                    "multiple_duns",
                    models.BooleanField(
                        help_text="Data sources: SF-SAC 2004-2007: I/5/e; SF-SAC 2008-2009: I/4/e; SF-SAC 2010-2012: I/4/e; SF-SAC 2013-2015: I/4/e; SF-SAC 2016-2018: I/4/e; SF-SAC 2019-2021: I/4/e; SF-SAC 2022: I/4/e Census mapping: GENERAL, MULTIPLEDUNS",
                        null=True,
                        verbose_name="True if the audit contains multiple DUNS",
                    ),
                ),
                (
                    "auditee_uei",
                    models.CharField(
                        help_text="Data sources: SF-SAC 2022: I/4/g Census mapping: GENERAL, UEI",
                        null=True,
                        verbose_name="",
                    ),
                ),
                (
                    "multiple_uei",
                    models.BooleanField(
                        help_text="Data sources: SF-SAC 2022: I/4/h Census mapping: GENERAL, MULTIPLEUEIS",
                        null=True,
                        verbose_name="True if the audit contains more than one UEI",
                    ),
                ),
                (
                    "auditee_addl_uei_list",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(
                            help_text="Data sources: SF-SAC 2022: I/4/g Census mapping: GENERAL, UEI",
                            null=True,
                            verbose_name="",
                        ),
                        default=list,
                        size=None,
                    ),
                ),
                (
                    "auditee_addl_ein_list",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.IntegerField(
                            help_text="Data sources: SF-SAC 1997-2000: I/5/a; SF-SAC 2001-2003: I/5/a; SF-SAC 2004-2007: I/5/a; SF-SAC 2008-2009: I/4/a; SF-SAC 2010-2012: I/4/a; SF-SAC 2013-2015: I/4/a; SF-SAC 2016-2018: I/4/a; SF-SAC 2019-2021: I/4/a; SF-SAC 2022: I/4/a Census mapping: GENERAL, EIN (AND) Data sources: SF-SAC 2001-2003: I/5/c; SF-SAC 2004-2007: I/5/c; SF-SAC 2008-2009: I/4/c; SF-SAC 2010-2012: I/4/c; SF-SAC 2013-2015: I/4/c; SF-SAC 2016-2018: I/4/c; SF-SAC 2019-2021: I/4/c; SF-SAC 2022: I/4/c Census mapping: EIN INFO, EIN",
                            null=True,
                            verbose_name="Primary Employer Identification Number, in the order that they were listed.",
                        ),
                        default=list,
                        size=None,
                    ),
                ),
                (
                    "auditee_addl_duns_list",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(
                            help_text="Data sources: SF-SAC 2004-2007: I/5/git ad; SF-SAC 2008-2009: I/4/d; SF-SAC 2010-2012: I/4/d; SF-SAC 2013-2015: I/4/d; SF-SAC 2016-2018: I/4/d; SF-SAC 2019-2021: I/4/d; SF-SAC 2022: I/4/d Census mapping: GENERAL, DUNS (AND) Data sources: SF-SAC 2004-2007: I/5/f; SF-SAC 2008-2009: I/4/f; SF-SAC 2010-2012: I/4/f; SF-SAC 2013-2015: I/4/f; SF-SAC 2016-2018: I/4/f; SF-SAC 2019-2021: I/4/f; SF-SAC 2022: I/4/f Census mapping: DUN INFO, DUNS",
                            null=True,
                            verbose_name="",
                        ),
                        default=list,
                        size=None,
                    ),
                ),
                (
                    "ein_subcode",
                    models.IntegerField(
                        help_text="Census mapping: GENERAL, EINSUBCODE",
                        null=True,
                        verbose_name="Subcode assigned to the EIN.",
                    ),
                ),
                (
                    "auditee_zip",
                    models.CharField(
                        help_text="Data sources: SF-SAC 1997-2000: I/6/b; SF-SAC 2001-2003: I/6/b; SF-SAC 2004-2007: I/6/b; SF-SAC 2008-2009: I/5/b; SF-SAC 2010-2012: I/5/b; SF-SAC 2013-2015: I/5/b; SF-SAC 2016-2018: I/5/b; SF-SAC 2019-2021: I/5/b; SF-SAC 2022: I/5/b Census mapping: GENERAL, ZIPCODE",
                        max_length=12,
                        null=True,
                        verbose_name="Auditee Zip Code",
                    ),
                ),
                (
                    "auditor_phone",
                    models.PositiveBigIntegerField(
                        help_text="Data sources: SF-SAC 1997-2000: I/7/d; SF-SAC 2001-2003: I/7/d; SF-SAC 2004-2007: I/7/d; SF-SAC 2008-2009: I/6/d; SF-SAC 2010-2012: I/6/d; SF-SAC 2013-2015: I/6/e; SF-SAC 2016-2018: I/6/e; SF-SAC 2019-2021: I/6/e; SF-SAC 2022: I/6/e Census mapping: GENERAL, CPAPHONE (AND) Data sources: SF-SAC 2008-2009: I/8/d; SF-SAC 2010-2012: I/8/d; SF-SAC 2013-2015: I/8/i; SF-SAC 2016-2018: I/8/i; SF-SAC 2019-2021: I/6/h/ix; SF-SAC 2022: I/6/h/ix Census mapping: MULTIPLE CPAS INFO, CPAPHONE",
                        null=True,
                        verbose_name="CPA phone number",
                    ),
                ),
                (
                    "hist_auditor_fax",
                    models.PositiveBigIntegerField(
                        help_text="Data sources: SF-SAC 1997-2000: I/7/e; SF-SAC 2001-2003: I/7/e; SF-SAC 2004-2007: I/7/e; SF-SAC 2008-2009: I/6/e; SF-SAC 2010-2012: I/6/e; SF-SAC 2013-2015: I/6/f Census mapping: GENERAL, CPAFAX (AND) Data sources: SF-SAC 2008-2009: I/8/e; SF-SAC 2010-2012: I/8/e; SF-SAC 2013-2015: I/8/j; SF-SAC 2016-2018: I/8/j Census mapping: MULTIPLE CPAS INFO, CPAFAX",
                        null=True,
                        verbose_name="CPA fax number (optional)",
                    ),
                ),
                (
                    "auditor_state",
                    models.CharField(
                        help_text="Data sources: SF-SAC 1997-2000: I/7/b; SF-SAC 2001-2003: I/7/b; SF-SAC 2004-2007: I/7/b; SF-SAC 2008-2009: I/6/b; SF-SAC 2010-2012: I/6/b; SF-SAC 2013-2015: I/6/c; SF-SAC 2016-2018: I/6/c; SF-SAC 2019-2021: I/6/c; SF-SAC 2022: I/6/c Census mapping: GENERAL, CPASTATE (AND) Data sources: SF-SAC 2008-2009: I/8/b; SF-SAC 2010-2012: I/8/b; SF-SAC 2013-2015: I/8/e; SF-SAC 2016-2018: I/8/e; SF-SAC 2019-2021: I/6/h/v; SF-SAC 2022: I/6/h/v Census mapping: MULTIPLE CPAS INFO, CPASTATE",
                        max_length=2,
                        null=True,
                        verbose_name="CPA State",
                    ),
                ),
                (
                    "auditor_city",
                    models.CharField(
                        help_text="Data sources: SF-SAC 1997-2000: I/7/b; SF-SAC 2001-2003: I/7/b; SF-SAC 2004-2007: I/7/b; SF-SAC 2008-2009: I/6/b; SF-SAC 2010-2012: I/6/b; SF-SAC 2013-2015: I/6/c; SF-SAC 2016-2018: I/6/c; SF-SAC 2019-2021: I/6/c; SF-SAC 2022: I/6/c Census mapping: GENERAL, CPACITY (AND) Data sources: SF-SAC 2008-2009: I/8/b; SF-SAC 2010-2012: I/8/b; SF-SAC 2013-2015: I/8/d; SF-SAC 2016-2018: I/8/d; SF-SAC 2019-2021: I/6/h/iv; SF-SAC 2022: I/6/h/iv Census mapping: MULTIPLE CPAS INFO, CPACITY",
                        max_length=30,
                        null=True,
                        verbose_name="CPA City",
                    ),
                ),
                (
                    "auditor_contact_title",
                    models.CharField(
                        help_text="Data sources: SF-SAC 1997-2000: I/7/c; SF-SAC 2001-2003: I/7/c; SF-SAC 2004-2007: I/7/c; SF-SAC 2008-2009: I/6/c; SF-SAC 2010-2012: I/6/c; SF-SAC 2013-2015: I/6/d; SF-SAC 2016-2018: I/6/d; SF-SAC 2019-2021: I/6/d; SF-SAC 2022: I/6/d Census mapping: GENERAL, CPATITLE (AND) Data sources: SF-SAC 2008-2009: I/8/c; SF-SAC 2010-2012: I/8/c; SF-SAC 2013-2015: I/8/h; SF-SAC 2016-2018: I/8/h; SF-SAC 2019-2021: I/6/h/viii; SF-SAC 2022: I/6/h/viii Census mapping: MULTIPLE CPAS INFO, CPATITLE",
                        max_length=40,
                        null=True,
                        verbose_name="Title of CPA Contact",
                    ),
                ),
                (
                    "auditor_address_line_1",
                    models.CharField(
                        help_text="Data sources: SF-SAC 1997-2000: I/7/b; SF-SAC 2001-2003: I/7/b; SF-SAC 2004-2007: I/7/b; SF-SAC 2008-2009: I/6/b; SF-SAC 2010-2012: I/6/b; SF-SAC 2013-2015: I/6/c; SF-SAC 2016-2018: I/6/c; SF-SAC 2019-2021: I/6/c; SF-SAC 2022: I/6/c Census mapping: GENERAL, CPASTREET1 (AND) Data sources: SF-SAC 2008-2009: I/8/b; SF-SAC 2010-2012: I/8/b; SF-SAC 2013-2015: I/8/c; SF-SAC 2016-2018: I/8/c; SF-SAC 2019-2021: I/6/h/iii; SF-SAC 2022: I/6/h/iii Census mapping: MULTIPLE CPAS INFO, CPASTREET1",
                        max_length=45,
                        null=True,
                        verbose_name="CPA Street Address",
                    ),
                ),
                (
                    "hist_auditor_address_line_2",
                    models.CharField(
                        help_text="Data sources: SF-SAC 1997-2000: I/7/b; SF-SAC 2001-2003: I/7/b; SF-SAC 2004-2007: I/7/b; SF-SAC 2008-2009: I/6/b; SF-SAC 2010-2012: I/6/b; SF-SAC 2013-2015: I/6/c; SF-SAC 2016-2018: I/6/c; SF-SAC 2019-2021: I/6/c; SF-SAC 2022: I/6/c Census mapping: GENERAL, CPASTREET2",
                        max_length=45,
                        null=True,
                        verbose_name="CPA Street Address, line 2",
                    ),
                ),
                (
                    "auditor_zip",
                    models.CharField(
                        help_text="Data sources: SF-SAC 1997-2000: I/7/b; SF-SAC 2001-2003: I/7/b; SF-SAC 2004-2007: I/7/b; SF-SAC 2008-2009: I/6/b; SF-SAC 2010-2012: I/6/b; SF-SAC 2013-2015: I/6/c; SF-SAC 2016-2018: I/6/c; SF-SAC 2019-2021: I/6/c; SF-SAC 2022: I/6/c Census mapping: GENERAL, CPAZIPCODE (AND) Data sources: SF-SAC 2008-2009: I/8/b; SF-SAC 2010-2012: I/8/b; SF-SAC 2013-2015: I/8/f; SF-SAC 2016-2018: I/8/f; SF-SAC 2019-2021: I/6/h/vi; SF-SAC 2022: I/6/h/vi Census mapping: MULTIPLE CPAS INFO, CPAZIPCODE",
                        max_length=12,
                        null=True,
                        verbose_name="CPA Zip Code",
                    ),
                ),
                (
                    "auditor_country",
                    models.CharField(
                        help_text="Data sources: SF-SAC 2019-2021: I/6/c; SF-SAC 2022: I/6/c Census mapping: GENERAL, CPACOUNTRY",
                        max_length=45,
                        null=True,
                        verbose_name="CPA Country",
                    ),
                ),
                (
                    "auditor_contact_name",
                    models.CharField(
                        help_text="Data sources: SF-SAC 1997-2000: I/7/c; SF-SAC 2001-2003: I/7/c; SF-SAC 2004-2007: I/7/c; SF-SAC 2008-2009: I/6/c; SF-SAC 2010-2012: I/6/c; SF-SAC 2013-2015: I/6/d; SF-SAC 2016-2018: I/6/d; SF-SAC 2019-2021: I/6/d; SF-SAC 2022: I/6/d Census mapping: GENERAL, CPACONTACT (AND) Data sources: SF-SAC 2008-2009: I/8/c; SF-SAC 2010-2012: I/8/c; SF-SAC 2013-2015: I/8/g; SF-SAC 2016-2018: I/8/g; SF-SAC 2019-2021: I/6/h/vii; SF-SAC 2022: I/6/h/vii Census mapping: MULTIPLE CPAS INFO, CPACONTACT",
                        max_length=50,
                        null=True,
                        verbose_name="Name of CPA Contact",
                    ),
                ),
                (
                    "auditor_email",
                    models.CharField(
                        help_text="Data sources: SF-SAC 1997-2000: I/7/f; SF-SAC 2001-2003: I/7/f; SF-SAC 2004-2007: I/7/f; SF-SAC 2008-2009: I/6/f; SF-SAC 2010-2012: I/6/f; SF-SAC 2013-2015: I/6/g; SF-SAC 2016-2018: I/6/f; SF-SAC 2019-2021: I/6/f; SF-SAC 2022: I/6/f Census mapping: GENERAL, CPAEMAIL (AND) Data sources: SF-SAC 2008-2009: I/8/f; SF-SAC 2010-2012: I/8/f; SF-SAC 2013-2015: I/8/k; SF-SAC 2016-2018: I/8/k; SF-SAC 2019-2021: I/6/h/x; SF-SAC 2022: I/6/h/x Census mapping: MULTIPLE CPAS INFO, CPAEMAIL",
                        max_length=60,
                        null=True,
                        verbose_name="CPA mail address (optional)",
                    ),
                ),
                (
                    "auditor_firm_name",
                    models.CharField(
                        help_text="Data sources: SF-SAC 1997-2000: I/7/a; SF-SAC 2001-2003: I/7/a; SF-SAC 2004-2007: I/7/a; SF-SAC 2008-2009: I/6/a; SF-SAC 2010-2012: I/6/a; SF-SAC 2013-2015: I/6/a; SF-SAC 2016-2018: I/6/a; SF-SAC 2019-2021: I/6/a; SF-SAC 2022: I/6/a Census mapping: GENERAL, CPAFIRMNAME (AND) Data sources: SF-SAC 2008-2009: I/8/a; SF-SAC 2010-2012: I/8/a; SF-SAC 2013-2015: I/8/a; SF-SAC 2016-2018: I/8/a; SF-SAC 2019-2021: I/6/h/i; SF-SAC 2022: I/6/h/i Census mapping: MULTIPLE CPAS INFO, CPAFIRMNAME",
                        max_length=64,
                        verbose_name="CPA Firm Name",
                    ),
                ),
                (
                    "auditor_foreign_addr",
                    models.CharField(
                        help_text="Data sources: SF-SAC 2019-2021: I/6/c; SF-SAC 2022: I/6/c Census mapping: GENERAL, CPAFOREIGN",
                        max_length=200,
                        null=True,
                        verbose_name="CPA Address - if international",
                    ),
                ),
                (
                    "auditor_ein",
                    models.IntegerField(
                        help_text="Data sources: SF-SAC 2013-2015: I/6/b; SF-SAC 2016-2018: I/6/b; SF-SAC 2019-2021: I/6/b; SF-SAC 2022: I/6/b Census mapping: GENERAL, AUDITOR_EIN (AND) Data sources: SF-SAC 2013-2015: I/8/b; SF-SAC 2016-2018: I/8/b; SF-SAC 2019-2021: I/6/h/ii; SF-SAC 2022: I/6/h/ii Census mapping: MULTIPLE CPAS INFO, CPAEIN",
                        null=True,
                        verbose_name="CPA Firm EIN (only available for audit years 2013 and beyond)",
                    ),
                ),
                (
                    "multiple_auditors",
                    models.BooleanField(
                        null=True,
                        verbose_name="True if the audit contains multiple auditors",
                    ),
                ),
                (
                    "pdf_url",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(
                            max_length=400,
                            null=True,
                            verbose_name="PDFs associated with the report",
                        ),
                        null=True,
                        size=None,
                    ),
                ),
                (
                    "cognizant_agency",
                    models.CharField(
                        help_text="Data sources: SF-SAC 1997-2000: I/9; SF-SAC 2001-2003: I/9 Census mapping: GENERAL, COGAGENCY",
                        max_length=2,
                        null=True,
                        verbose_name="Two digit Federal agency prefix of the cognizant agency",
                    ),
                ),
                (
                    "oversight_agency",
                    models.IntegerField(
                        help_text="Data sources: SF-SAC 1997-2000: I/9; SF-SAC 2001-2003: I/9 Census mapping: GENERAL, OVERSIGHTAGENCY",
                        null=True,
                        verbose_name="Two digit Federal agency prefix of the oversight agency",
                    ),
                ),
                (
                    "auditee_certified_date",
                    models.DateField(
                        help_text="Data sources: SF-SAC 1997-2000: I/6/g; SF-SAC 2001-2003: I/6/g; SF-SAC 2004-2007: I/6/g; SF-SAC 2008-2009: I/5/g; SF-SAC 2010-2012: I/5/g; SF-SAC 2013-2015: certifications; SF-SAC 2016-2018: certifications; SF-SAC 2019-2021: certifications; SF-SAC 2022: certifications Census mapping: GENERAL, AUDITEEDATESIGNED",
                        null=True,
                        verbose_name="Date of Auditee signature",
                    ),
                ),
                (
                    "auditor_certified_date",
                    models.DateField(
                        help_text="Data sources: SF-SAC 1997-2000: I/7/g; SF-SAC 2001-2003: I/7/g; SF-SAC 2004-2007: I/7/g; SF-SAC 2008-2009: I/6/g; SF-SAC 2010-2012: I/6/g; SF-SAC 2013-2015: certifications; SF-SAC 2016-2018: certifications; SF-SAC 2019-2021: certifications; SF-SAC 2022: certifications Census mapping: GENERAL, CPADATESIGNED",
                        null=True,
                        verbose_name="Date of CPA signature",
                    ),
                ),
                (
                    "date_published",
                    models.DateField(
                        help_text="Census mapping: GENERAL, DATEFIREWALL",
                        null=True,
                        verbose_name="The date the audit information was made available on the dissemination site",
                    ),
                ),
                (
                    "fac_accepted_date",
                    models.DateField(
                        help_text="Census mapping: GENERAL, FACACCEPTEDDATE",
                        verbose_name="The most recent date an audit report was submitted to the FAC that passed FAC screening and was accepted as a valid OMB Circular A-133 report submission.",
                    ),
                ),
                (
                    "form_date_received",
                    models.DateField(
                        help_text="Census mapping: GENERAL, FORM DATE RECEIVED",
                        null=True,
                        verbose_name="The most Recent Date the Form SF-SAC was received by the FAC. This field was not populated before 2001.",
                    ),
                ),
                (
                    "initial_date_received",
                    models.DateField(
                        help_text="Census mapping: GENERAL, INITIAL DATE RECEIVED",
                        null=True,
                        verbose_name="The first date an audit component or Form SF-SAC was received by the Federal audit Clearinghouse (FAC).",
                    ),
                ),
                (
                    "date_received",
                    models.DateField(
                        null=True,
                        verbose_name="The latest date an audit component or Form SF-SAC was received by the Federal audit Clearinghouse (FAC).",
                    ),
                ),
                (
                    "fy_end_date",
                    models.DateField(
                        help_text="Data sources: SF-SAC 1997-2000: Part I, Item 1; SF-SAC 2001-2003: Part I, Item 1; SF-SAC 2004-2007: Part I, Item 1; SF-SAC 2008-2009: Part I, Item 1; SF-SAC 2010-2012: Part I, Item 1; SF-SAC 2013-2015: Part I, Item 1; SF-SAC 2016-2018: Part I, Item 1; SF-SAC 2019-2021: I/1/b; SF-SAC 2022: I/1/b Census mapping: GENERAL, FYENDDATE",
                        null=True,
                        verbose_name="Fiscal Year End Date",
                    ),
                ),
                (
                    "fy_start_date",
                    models.DateField(
                        help_text="Data sources: SF-SAC 2019-2021: Part I, Item 1(a); SF-SAC 2022: Part I, Item 1(a) Census mapping: GENERAL, FYSTARTDATE",
                        null=True,
                        verbose_name="Fiscal Year Start Date",
                    ),
                ),
                (
                    "hist_previous_completed_on",
                    models.DateField(
                        help_text="Census mapping: GENERAL, PREVIOUS_COMPLETED_ON",
                        null=True,
                        verbose_name="Date the Audit was Previously Posted to the Internet as Complete",
                    ),
                ),
                (
                    "hist_previous_date_published",
                    models.DateField(
                        help_text="Census mapping: GENERAL, PREVIOUSDATEFIREWALL",
                        null=True,
                    ),
                ),
                (
                    "hist_completed_date",
                    models.DateField(
                        help_text="Census mapping: GENERAL, COMPLETED_ON",
                        null=True,
                        verbose_name="Date the Audit was Posted to the Internet as Complete",
                    ),
                ),
                (
                    "hist_component_date_received",
                    models.DateField(
                        help_text="Census mapping: GENERAL, COMPONENT DATE RECEIVED",
                        null=True,
                        verbose_name="The most recent date an audit component was received by the FAC. This field was not populated before 2004. Receipt of Financial statements only are not processed until the rest of the audit or a Form SF-SAC is also received.",
                    ),
                ),
                (
                    "audit_year",
                    models.CharField(
                        help_text="Census mapping: GENERAL, AUDITYEAR",
                        max_length=40,
                        verbose_name="Audit Year and DBKEY (database key) combined make up the primary key.",
                    ),
                ),
                (
                    "audit_type",
                    models.CharField(
                        help_text="Data sources: SF-SAC 1997-2000: I/2; SF-SAC 2001-2003: I/2; SF-SAC 2004-2007: I/2; SF-SAC 2008-2009: I/2; SF-SAC 2010-2012: I/2; SF-SAC 2013-2015: I/2; SF-SAC 2016-2018: I/2; SF-SAC 2019-2021: I/2; SF-SAC 2022: I/2 Census mapping: GENERAL, AUDITTYPE",
                        max_length=40,
                        verbose_name="Type of Audit",
                    ),
                ),
                (
                    "hist_reportable_condition",
                    models.BooleanField(
                        help_text="Data sources: SF-SAC 1997-2000: II/3; SF-SAC 2001-2003: II/3; SF-SAC 2004-2007: II/3; SF-SAC 2008-2009: II/3; SF-SAC 2010-2012: II/3; SF-SAC 2013-2015: II/3; SF-SAC 2016-2018: III/2/c; SF-SAC 2019-2021: III/2/c; SF-SAC 2022: III/2/c Census mapping: GENERAL, REPORTABLECONDITION",
                        null=True,
                        verbose_name="Whether or not the audit disclosed a reportable condition on financial statements",
                    ),
                ),
                (
                    "is_significant_deficiency",
                    models.BooleanField(
                        help_text="Data sources: SF-SAC 1997-2000: II/3; SF-SAC 2001-2003: II/3; SF-SAC 2004-2007: II/3; SF-SAC 2008-2009: II/3; SF-SAC 2010-2012: II/3; SF-SAC 2013-2015: II/3; SF-SAC 2016-2018: III/2/c; SF-SAC 2019-2021: III/2/c; SF-SAC 2022: III/2/c Census mapping: GENERAL, SIGNIFICANTDEFICIENCY",
                        null=True,
                        verbose_name="Whether or not the audit disclosed a significant deficiency on financial statements",
                    ),
                ),
                (
                    "is_material_weakness",
                    models.BooleanField(
                        help_text="Data sources: SF-SAC 1997-2000: II/4; SF-SAC 2001-2003: II/4; SF-SAC 2004-2007: II/4; SF-SAC 2008-2009: II/4; SF-SAC 2010-2012: II/4; SF-SAC 2013-2015: II/4; SF-SAC 2016-2018: III/2/d; SF-SAC 2019-2021: III/2/d; SF-SAC 2022: III/2/d Census mapping: GENERAL, MATERIALWEAKNESS",
                        null=True,
                        verbose_name="",
                    ),
                ),
                (
                    "condition_or_deficiency_major_program",
                    models.BooleanField(
                        help_text="Data sources: SF-SAC 2001-2003: III/5; SF-SAC 2004-2007: III/4; SF-SAC 2008-2009: III/4; SF-SAC 2010-2012: III/4 Census mapping: GENERAL, REPORTABLECONDITION_MP",
                        null=True,
                        verbose_name="Whether or not the audit disclosed a reportable condition/significant deficiency for any major program in the Schedule of Findings and Questioned Costs",
                    ),
                ),
                (
                    "current_or_former_findings",
                    models.BooleanField(
                        help_text="Data sources: SF-SAC 2001-2003: III/9; SF-SAC 2004-2007: III/8; SF-SAC 2008-2009: III/8; SF-SAC 2010-2012: III/8; SF-SAC 2013-2015: III/5; SF-SAC 2016-2018: III/3/d; SF-SAC 2019-2021: III/3/d; SF-SAC 2022: III/3/d Census mapping: GENERAL, CYFINDINGS",
                        null=True,
                        verbose_name="Indicate whether or not current year findings or prior year findings affecting direct funds were reported",
                    ),
                ),
                (
                    "dollar_threshold",
                    models.FloatField(
                        help_text="Data sources: SF-SAC 1997-2000: III/2; SF-SAC 2001-2003: III/3; SF-SAC 2004-2007: III/2; SF-SAC 2008-2009: III/2; SF-SAC 2010-2012: III/2; SF-SAC 2013-2015: III/2; SF-SAC 2016-2018: III/3/b; SF-SAC 2019-2021: III/3/b; SF-SAC 2022: III/3/b Census mapping: GENERAL, DOLLARTHRESHOLD",
                        null=True,
                        verbose_name="Dollar Threshold to distinguish between Type A and Type B programs.",
                    ),
                ),
                (
                    "is_duplicate_reports",
                    models.BooleanField(
                        help_text="Data sources: SF-SAC 2001-2003: III/2; SF-SAC 2004-2007: III/1; SF-SAC 2008-2009: III/1; SF-SAC 2010-2012: III/1; SF-SAC 2013-2015: III/1; SF-SAC 2016-2018: III/3/a; SF-SAC 2019-2021: III/3/a; SF-SAC 2022: III/3/a Census mapping: GENERAL, DUP_REPORTS",
                        null=True,
                        verbose_name="Whether or not the financial statements include departments that have separate expenditures not included in this audit",
                    ),
                ),
                (
                    "entity_type",
                    models.CharField(
                        help_text="Census mapping: GENERAL, ENTITY_TYPE",
                        max_length=50,
                        null=True,
                        verbose_name="Self reported type of entity (i.e., States, Local Governments, Indian Tribes, Institutions of Higher Education, NonProfit)",
                    ),
                ),
                (
                    "is_going_concern",
                    models.BooleanField(
                        help_text="Data sources: SF-SAC 1997-2000: II/2; SF-SAC 2001-2003: II/2; SF-SAC 2004-2007: II/2; SF-SAC 2008-2009: II/2; SF-SAC 2010-2012: II/2; SF-SAC 2013-2015: II/2; SF-SAC 2016-2018: III/2/b; SF-SAC 2019-2021: III/2/b; SF-SAC 2022: III/2/b Census mapping: GENERAL, GOINGCONCERN",
                        null=True,
                        verbose_name="Whether or not the audit contained a going concern paragraph on financial statements",
                    ),
                ),
                (
                    "is_low_risk",
                    models.BooleanField(
                        help_text="Data sources: SF-SAC 1997-2000: III/3; SF-SAC 2001-2003: III/4; SF-SAC 2004-2007: III/3; SF-SAC 2008-2009: III/3; SF-SAC 2010-2012: III/3; SF-SAC 2013-2015: III/3; SF-SAC 2016-2018: III/3/c; SF-SAC 2019-2021: III/3/c; SF-SAC 2022: III/3/c Census mapping: GENERAL, LOWRISK",
                        null=True,
                        verbose_name="Indicate whether or not the auditee qualified as a low-risk auditee",
                    ),
                ),
                (
                    "is_material_noncompliance",
                    models.BooleanField(
                        help_text="Data sources: SF-SAC 1997-2000: II/5; SF-SAC 2001-2003: II/5; SF-SAC 2004-2007: II/5; SF-SAC 2008-2009: II/5; SF-SAC 2010-2012: II/5; SF-SAC 2013-2015: II/5; SF-SAC 2016-2018: III/2/e; SF-SAC 2019-2021: III/2/e; SF-SAC 2022: III/2/e Census mapping: GENERAL, MATERIALNONCOMPLIANCE",
                        null=True,
                        verbose_name="Whether or not the audit disclosed a material noncompliance on financial statements",
                    ),
                ),
                (
                    "material_weakness",
                    models.BooleanField(
                        help_text="Data sources: SF-SAC 1997-2000: II/4; SF-SAC 2001-2003: II/4; SF-SAC 2004-2007: II/4; SF-SAC 2008-2009: II/4; SF-SAC 2010-2012: II/4; SF-SAC 2013-2015: II/4; SF-SAC 2016-2018: III/2/d; SF-SAC 2019-2021: III/2/d; SF-SAC 2022: III/2/d Census mapping: GENERAL, MATERIALWEAKNESS",
                        null=True,
                        verbose_name="Whether or not the audit disclosed any reportable condition/significant deficiency as a material weakness on financial statements",
                    ),
                ),
                (
                    "material_weakness_major_program",
                    models.BooleanField(
                        help_text="Data sources: SF-SAC 2001-2003: III/6; SF-SAC 2004-2007: III/5; SF-SAC 2008-2009: III/5; SF-SAC 2010-2012: III/5 Census mapping: GENERAL, MATERIALWEAKNESS_MP",
                        null=True,
                        verbose_name="Indicate whether any reportable condition/significant deficiency was disclosed as a material weakness for a major program in the Schedule of Findings and Questioned Costs",
                    ),
                ),
                (
                    "number_months",
                    models.IntegerField(
                        help_text="Data sources: SF-SAC 1997-2000: I/3; SF-SAC 2001-2003: I/3; SF-SAC 2004-2007: I/3; SF-SAC 2008-2009: I/3; SF-SAC 2010-2012: I/3; SF-SAC 2013-2015: I/3; SF-SAC 2016-2018: I/3; SF-SAC 2019-2021: I/3; SF-SAC 2022: I/3 Census mapping: GENERAL, NUMBERMONTHS",
                        null=True,
                        verbose_name="Number of Months Covered by the 'Other' Audit Period",
                    ),
                ),
                (
                    "audit_period_covered",
                    models.CharField(
                        help_text="Data sources: SF-SAC 1997-2000: I/3; SF-SAC 2001-2003: I/3; SF-SAC 2004-2007: I/3; SF-SAC 2008-2009: I/3; SF-SAC 2010-2012: I/3; SF-SAC 2013-2015: I/3; SF-SAC 2016-2018: I/3; SF-SAC 2019-2021: I/3; SF-SAC 2022: I/3 Census mapping: GENERAL, PERIODCOVERED",
                        max_length=40,
                        verbose_name="Audit Period Covered by Audit",
                    ),
                ),
                (
                    "prior_year_schedule",
                    models.BooleanField(
                        help_text="Data sources: SF-SAC 2001-2003: III/8; SF-SAC 2004-2007: III/7; SF-SAC 2008-2009: III/7; SF-SAC 2010-2012: III/7; SF-SAC 2013-2015: III/4 Census mapping: GENERAL, PYSCHEDULE",
                        null=True,
                        verbose_name="Indicate whether or not the report includes a Summary Schedule of Prior Year Audit Findings",
                    ),
                ),
                (
                    "questioned_costs",
                    models.BooleanField(
                        help_text="Data sources: SF-SAC 2001-2003: III/7; SF-SAC 2004-2007: III/6; SF-SAC 2008-2009: III/6; SF-SAC 2010-2012: III/6 Census mapping: GENERAL, QCOSTS",
                        null=True,
                        verbose_name="Indicate whether or not the audit disclosed any known questioned costs.",
                    ),
                ),
                (
                    "report_required",
                    models.BooleanField(
                        help_text="Data sources: SF-SAC 1997-2000: III/5; SF-SAC 2001-2003: III/9; SF-SAC 2004-2007: III/8 Census mapping: GENERAL, REPORTREQUIRED",
                        null=True,
                        verbose_name="Distribution to Federal Agency required?",
                    ),
                ),
                (
                    "special_framework",
                    models.CharField(
                        help_text="Data sources: SF-SAC 2016-2018: III/2/a/ii; SF-SAC 2019-2021: III/2/a/i; SF-SAC 2022: III/2/a/i Census mapping: GENERAL, SP_FRAMEWORK",
                        max_length=40,
                        null=True,
                        verbose_name="Special Purpose Framework that was used as the basis of accounting",
                    ),
                ),
                (
                    "is_special_framework_required",
                    models.BooleanField(
                        help_text="Data sources: SF-SAC 2016-2018: III/2/a/iii; SF-SAC 2019-2021: III/2/a/ii; SF-SAC 2022: III/2/a/ii Census mapping: GENERAL, SP_FRAMEWORK_REQUIRED",
                        null=True,
                        verbose_name="Indicate whether or not the special purpose framework used as basis of accounting by state law or tribal law",
                    ),
                ),
                (
                    "total_fed_expenditures",
                    models.BigIntegerField(
                        help_text="Data sources: SF-SAC 1997-2000: III/6/c- Total; SF-SAC 2001-2003: III/10/d -Total; SF-SAC 2004-2007: III/9/e -Total; SF-SAC 2008-2009: III/9/e -Total; SF-SAC 2010-2012: III/9/f -Total; SF-SAC 2013-2015: III/6/d -Total; SF-SAC 2016-2018: II/1/e- Total; SF-SAC 2019-2021: II/1/e - Total; SF-SAC 2022: II/1/e - Total Census mapping: GENERAL, TOTFEDEXPEND",
                        null=True,
                        verbose_name="Total Federal Expenditures",
                    ),
                ),
                (
                    "hist_type_of_entity",
                    models.CharField(
                        help_text="Census mapping: GENERAL, TYPEOFENTITY",
                        max_length=40,
                        null=True,
                        verbose_name="Contact FAC for information",
                    ),
                ),
                (
                    "type_report_financial_statements",
                    models.CharField(
                        help_text="Data sources: SF-SAC 1997-2000: II/1; SF-SAC 2001-2003: II/1; SF-SAC 2004-2007: II/1; SF-SAC 2008-2009: II/1; SF-SAC 2010-2012: II/1; SF-SAC 2013-2015: II/1; SF-SAC 2016-2018: III/2/a/i; SF-SAC 2019-2021: III/2/a; SF-SAC 2022: III/2/a Census mapping: GENERAL, TYPEREPORT_FS",
                        max_length=40,
                        null=True,
                        verbose_name="Type of Report Issued on the Financial Statements",
                    ),
                ),
                (
                    "type_report_major_program",
                    models.CharField(
                        help_text="Data sources: SF-SAC 1997-2000: III/1; SF-SAC 2001-2003: III/1 Census mapping: GENERAL, TYPEREPORT_MP",
                        max_length=40,
                        null=True,
                        verbose_name="Type of Report Issued on the Major Program Compliance",
                    ),
                ),
                (
                    "type_report_special_purpose_framework",
                    models.CharField(
                        help_text="Data sources: SF-SAC 2016-2018: III/2/a/iv; SF-SAC 2019-2021: III/2/a/iii; SF-SAC 2022: III/2/a/iii Census mapping: GENERAL, TYPEREPORT_SP_FRAMEWORK",
                        max_length=40,
                        null=True,
                        verbose_name="The auditor's opinion on the special purpose framework",
                    ),
                ),
                (
                    "suppression_code",
                    models.CharField(
                        null=True,
                        verbose_name="Determines whether the PDF audit will be displayed on the public site",
                    ),
                ),
                (
                    "type_audit_code",
                    models.CharField(
                        default="", verbose_name="Determines if audit is A133 or UG"
                    ),
                ),
                (
                    "cfac_report_id",
                    models.CharField(
                        null=True,
                        verbose_name="Used by CFAC to uniquely identify a submission",
                    ),
                ),
                (
                    "cfac_version",
                    models.CharField(null=True, verbose_name="Used by CFAC"),
                ),
                (
                    "dbkey",
                    models.CharField(
                        help_text="Census mapping: GENERAL, DBKEY",
                        max_length=40,
                        verbose_name="Audit Year and DBKEY (database key) combined make up the primary key. Only on records created by Census.",
                    ),
                ),
                (
                    "is_public",
                    models.BooleanField(
                        null=True,
                        verbose_name="True for public records, False for non-public records",
                    ),
                ),
                ("modified_date", models.DateTimeField(auto_now=True)),
                ("create_date", models.DateTimeField(auto_now_add=True)),
                (
                    "data_source",
                    models.CharField(
                        max_length=25, verbose_name="Origin of the upload"
                    ),
                ),
            ],
            options={
                "unique_together": {("report_id",)},
            },
        ),
        migrations.CreateModel(
            name="FindingText",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "report_id",
                    models.CharField(
                        max_length=40, verbose_name="G-FAC generated identifier.l"
                    ),
                ),
                (
                    "finding_ref_number",
                    models.CharField(
                        help_text="Data sources: SF-SAC 2019-2021: III/5/a; SF-SAC 2022: III/5/a Census mapping: FINDINGSTEXT, FINDINGREFNUMS",
                        max_length=100,
                        null=True,
                        verbose_name="Finding Reference Number - FK",
                    ),
                ),
                (
                    "charts_tables",
                    models.BooleanField(
                        help_text="Census mapping: FINDINGSTEXT, CHARTSTABLES",
                        max_length=1,
                        null=True,
                        verbose_name="Indicates whether or not the text contained charts or tables that could not be entered due to formatting restrictions",
                    ),
                ),
                (
                    "finding_text",
                    models.TextField(
                        help_text="Data sources: SF-SAC 2019-2021: III/5/b; SF-SAC 2022: III/5/b Census mapping: FINDINGSTEXT, TEXT",
                        null=True,
                        verbose_name="Content of the finding text",
                    ),
                ),
            ],
            options={
                "unique_together": {("report_id", "finding_ref_number")},
            },
        ),
        migrations.CreateModel(
            name="Finding",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "report_id",
                    models.CharField(
                        max_length=40,
                        verbose_name="G-FAC generated identifier. FK along with other fields - refers to Award",
                    ),
                ),
                (
                    "award_seq_number",
                    models.IntegerField(
                        null=True,
                        verbose_name="Order that the award line was reported in Award",
                    ),
                ),
                (
                    "finding_seq_number",
                    models.IntegerField(
                        null=True,
                        verbose_name="Order that the finding line was reported",
                    ),
                ),
                (
                    "finding_ref_number",
                    models.CharField(
                        help_text="Data sources: SF-SAC 2013-2015: III/7/d; SF-SAC 2016-2018: III/4/e; SF-SAC 2019-2021: III/4/e; SF-SAC 2022: III/4/e Census mapping: FINDINGS, FINDINGSREFNUMS",
                        max_length=100,
                        unique=True,
                        verbose_name="Findings Reference Numbers",
                    ),
                ),
                (
                    "prior_finding_ref_numbers",
                    models.CharField(
                        help_text="Data sources: SF-SAC 2016-2018: III/4/n; SF-SAC 2019-2021: III/4/n; SF-SAC 2022: III/4/n Census mapping: FINDINGS, PRIORFINDINGREFNUMS",
                        max_length=100,
                        null=True,
                        verbose_name="Audit finding reference numbers from the immediate prior audit",
                    ),
                ),
                (
                    "modified_opinion",
                    models.BooleanField(
                        help_text="Data sources: SF-SAC 2013-2015: III/7/f; SF-SAC 2016-2018: III/4/g; SF-SAC 2019-2021: III/4/g; SF-SAC 2022: III/4/g Census mapping: FINDINGS, MODIFIEDOPINION",
                        null=True,
                        verbose_name="Modified Opinion finding",
                    ),
                ),
                (
                    "other_non_compliance",
                    models.BooleanField(
                        help_text="Data sources: SF-SAC 2013-2015: III/7/g; SF-SAC 2016-2018: III/4/h; SF-SAC 2019-2021: III/4/h; SF-SAC 2022: III/4/h Census mapping: FINDINGS, OTHERNONCOMPLIANCE",
                        null=True,
                        verbose_name="Other Noncompliance finding",
                    ),
                ),
                (
                    "is_material_weakness",
                    models.BooleanField(
                        help_text="Data sources: SF-SAC 2013-2015: III/7/h; SF-SAC 2016-2018: III/4/i; SF-SAC 2019-2021: III/4/i; SF-SAC 2022: III/4/i Census mapping: FINDINGS, MATERIALWEAKNESS",
                        null=True,
                        verbose_name="Material Weakness finding",
                    ),
                ),
                (
                    "is_significant_deficiency",
                    models.BooleanField(
                        help_text="Data sources: SF-SAC 1997-2000: II/3; SF-SAC 2001-2003: II/3; SF-SAC 2004-2007: II/3; SF-SAC 2008-2009: II/3; SF-SAC 2010-2012: II/3; SF-SAC 2013-2015: II/3; SF-SAC 2016-2018: III/2/c; SF-SAC 2019-2021: III/2/c; SF-SAC 2022: III/2/c Census mapping: FINDINGS, SIGNIFICANTDEFICIENCY",
                        null=True,
                        verbose_name="Significant Deficiency finding",
                    ),
                ),
                (
                    "other_findings",
                    models.BooleanField(
                        help_text="Data sources: SF-SAC 2013-2015: III/7/j; SF-SAC 2016-2018: III/4/k; SF-SAC 2019-2021: III/4/k; SF-SAC 2022: III/4/k Census mapping: FINDINGS, OTHERFINDINGS",
                        null=True,
                        verbose_name="Other findings",
                    ),
                ),
                (
                    "questioned_costs",
                    models.BooleanField(
                        help_text="Data sources: SF-SAC 2013-2015: III/7/k; SF-SAC 2016-2018: III/4/l; SF-SAC 2019-2021: III/4/l; SF-SAC 2022: III/4/l Census mapping: FINDINGS, QCOSTS",
                        null=True,
                        verbose_name="Questioned Costs",
                    ),
                ),
                (
                    "repeat_finding",
                    models.BooleanField(
                        help_text="Data sources: SF-SAC 2016-2018: III/4/m; SF-SAC 2019-2021: III/4/m; SF-SAC 2022: III/4/m Census mapping: FINDINGS, REPEATFINDING",
                        null=True,
                        verbose_name="Indicates whether or not the audit finding was a repeat of an audit finding in the immediate prior audit",
                    ),
                ),
                (
                    "type_requirement",
                    models.CharField(
                        help_text="Data sources: SF-SAC 2013-2015: III/7/e; SF-SAC 2016-2018: III/4/f; SF-SAC 2019-2021: III/4/f; SF-SAC 2022: III/4/f Census mapping: FINDINGS, TYPEREQUIREMENT",
                        max_length=40,
                        null=True,
                        verbose_name="Type Requirement Failure",
                    ),
                ),
            ],
            options={
                "unique_together": {
                    ("report_id", "award_seq_number", "finding_seq_number")
                },
            },
        ),
        migrations.CreateModel(
            name="FederalAward",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "report_id",
                    models.CharField(
                        max_length=40,
                        verbose_name="G-FAC generated identifier. FK refers to a General",
                    ),
                ),
                (
                    "award_seq_number",
                    models.IntegerField(
                        null=True, verbose_name="Order that the award line was reported"
                    ),
                ),
                (
                    "federal_agency_prefix",
                    models.CharField(
                        max_length=2, verbose_name="2-char code refers to an agency"
                    ),
                ),
                (
                    "federal_award_extension",
                    models.CharField(
                        max_length=3,
                        verbose_name="3-dogit extn for a program defined by the agency",
                    ),
                ),
                (
                    "additional_award_identification",
                    models.CharField(
                        help_text="Data sources: SF-SAC 2016-2018: II/1/c; SF-SAC 2019-2021: II/1/c; SF-SAC 2022: II/1/c Census mapping: CFDA INFO, AWARDIDENTIFICATION",
                        max_length=50,
                        null=True,
                        verbose_name="Other data used to identify the award which is not a CFDA number (e.g., program year, contract number)",
                    ),
                ),
                (
                    "federal_program_name",
                    models.CharField(
                        help_text="Data sources: SF-SAC 1997-2000: III/6/b; SF-SAC 2001-2003: III/10/c; SF-SAC 2004-2007: III/9/d; SF-SAC 2008-2009: III/9/d; SF-SAC 2010-2012: III/9/e; SF-SAC 2013-2015: III/6/c; SF-SAC 2016-2018: II/1/d; SF-SAC 2019-2021: II/1/d; SF-SAC 2022: II/1/d Census mapping: CFDA INFO, FEDERALPROGRAMNAME",
                        max_length=300,
                        null=True,
                        verbose_name="Name of Federal Program",
                    ),
                ),
                (
                    "amount_expended",
                    models.BigIntegerField(
                        help_text="Data sources: SF-SAC 1997-2000: III/6/c; SF-SAC 2001-2003: III/10/d; SF-SAC 2004-2007: III/9/e; SF-SAC 2008-2009: III/9/e; SF-SAC 2010-2012: III/9/f; SF-SAC 2013-2015: III/6/d; SF-SAC 2016-2018: II/1/e; SF-SAC 2019-2021: II/1/e; SF-SAC 2022: II/1/e Census mapping: CFDA INFO, AMOUNT",
                        verbose_name="Amount Expended for the Federal Program",
                    ),
                ),
                (
                    "cluster_name",
                    models.CharField(
                        help_text="Data sources: SF-SAC 2016-2018: II/1/f; SF-SAC 2019-2021: II/1/f; SF-SAC 2022: II/1/f Census mapping: CFDA INFO, CLUSTERNAME",
                        max_length=75,
                        null=True,
                        verbose_name="The name of the cluster",
                    ),
                ),
                (
                    "state_cluster_name",
                    models.CharField(
                        help_text="Census mapping: CFDA INFO, STATECLUSTERNAME",
                        max_length=75,
                        null=True,
                        verbose_name="The name of the state cluster",
                    ),
                ),
                (
                    "other_cluster_name",
                    models.CharField(
                        help_text="Census mapping: CFDA INFO, OTHERCLUSTERNAME",
                        max_length=75,
                        null=True,
                        verbose_name="The name of the cluster (if not listed in the Compliance Supplement)",
                    ),
                ),
                (
                    "cluster_total",
                    models.BigIntegerField(
                        help_text="Data sources: SF-SAC 2016-2018: II/1/h; SF-SAC 2019-2021: II/1/h; SF-SAC 2022: II/1/h Census mapping: CFDA INFO, CLUSTERTOTAL",
                        null=True,
                        verbose_name="Total Federal awards expended for each individual Federal program is auto-generated by summing the amount expended for all line items with the same Cluster Name",
                    ),
                ),
                (
                    "federal_program_total",
                    models.BigIntegerField(
                        help_text="Data sources: SF-SAC 2016-2018: II/1/g; SF-SAC 2019-2021: II/1/g; SF-SAC 2022: II/1/g Census mapping: CFDA INFO, PROGRAMTOTAL",
                        null=True,
                        verbose_name="Total Federal awards expended for each individual Federal program is auto-generated by summing the amount expended for all line items with the same CFDA Prefix and Extension",
                    ),
                ),
                (
                    "is_loan",
                    models.BooleanField(
                        help_text="Data sources: SF-SAC 2013-2015: III/6/f; SF-SAC 2016-2018: II/1/i; SF-SAC 2019-2021: II/1/i; SF-SAC 2022: II/1/i Census mapping: CFDA INFO, LOANS",
                        null=True,
                        verbose_name="Indicate whether or not the program is a Loan or Loan Guarantee (only available for audit years 2013 and beyond)",
                    ),
                ),
                (
                    "loan_balance_at_audit_period_end",
                    models.CharField(
                        help_text="Data sources: SF-SAC 2016-2018: II/1/j; SF-SAC 2019-2021: II/1/j; SF-SAC 2022: II/1/j Census mapping: CFDA INFO, LOANBALANCE",
                        max_length=40,
                        null=True,
                        verbose_name="The loan or loan guarantee (loan) balance outstanding at the end of the audit period.  A response of ‘N/A’ is acceptable.",
                    ),
                ),
                (
                    "is_direct",
                    models.BooleanField(
                        help_text="Data sources: SF-SAC 2001-2003: III/10/e; SF-SAC 2004-2007: III/9/f; SF-SAC 2008-2009: III/9/f; SF-SAC 2010-2012: III/9/g; SF-SAC 2013-2015: III/6/h; SF-SAC 2016-2018: II/1/k; SF-SAC 2019-2021: II/1/k; SF-SAC 2022: II/1/k Census mapping: CFDA INFO, DIRECT",
                        null=True,
                        verbose_name="Indicate whether or not the award was received directly from a Federal awarding agency",
                    ),
                ),
                (
                    "is_major",
                    models.BooleanField(
                        help_text="Data sources: SF-SAC 1997-2000: III/7/a; SF-SAC 2001-2003: III/10/f; SF-SAC 2004-2007: III/9/g; SF-SAC 2008-2009: III/9/g; SF-SAC 2010-2012: III/9/h; SF-SAC 2013-2015: III/6/i; SF-SAC 2016-2018: III/1/a; SF-SAC 2019-2021: III/1/a; SF-SAC 2022: III/1/a Census mapping: CFDA INFO, MAJORPROGRAM",
                        null=True,
                        verbose_name="Indicate whether or not the Federal program is a major program",
                    ),
                ),
                (
                    "mp_audit_report_type",
                    models.CharField(
                        help_text="Data sources: SF-SAC 2004-2007: III/9/h; SF-SAC 2008-2009: III/9/h; SF-SAC 2010-2012: III/9/i; SF-SAC 2013-2015: III/6/j; SF-SAC 2016-2018: III/1/b; SF-SAC 2019-2021: III/1/b; SF-SAC 2022: III/1/b Census mapping: CFDA INFO, TYPEREPORT_MP",
                        max_length=40,
                        null=True,
                        verbose_name="Type of Report Issued on the Major Program Compliance",
                    ),
                ),
                (
                    "findings_count",
                    models.IntegerField(
                        help_text="Data sources: SF-SAC 2013-2015: III/6/k; SF-SAC 2016-2018: III/1/c; SF-SAC 2019-2021: III/1/c; SF-SAC 2022: III/1/c Census mapping: CFDA INFO, FINDINGSCOUNT",
                        null=True,
                        verbose_name="Number of findings for the federal program (only available for audit years 2013 and beyond)",
                    ),
                ),
                (
                    "passthrough_award",
                    models.BooleanField(
                        help_text="Data sources: SF-SAC 2016-2018: II/1/n; SF-SAC 2019-2021: II/1/n; SF-SAC 2022: II/1/n Census mapping: CFDA INFO, PASSTHROUGHAWARD",
                        null=True,
                        verbose_name="Indicates whether or not funds were passed through to any subrecipients for the Federal program",
                    ),
                ),
                (
                    "passthrough_amount",
                    models.BigIntegerField(
                        help_text="Data sources: SF-SAC 2016-2018: II/1/o; SF-SAC 2019-2021: II/1/o; SF-SAC 2022: II/1/o Census mapping: CFDA INFO, PASSTHROUGHAMOUNT",
                        null=True,
                        verbose_name="Amount passed through to subrecipients",
                    ),
                ),
                (
                    "type_requirement",
                    models.CharField(
                        help_text="Data sources: SF-SAC 1997-2000: III/7/b; SF-SAC 2001-2003: III/11/a; SF-SAC 2004-2007: III/10/a; SF-SAC 2008-2009: III/10/a; SF-SAC 2010-2012: III/10/a; SF-SAC 2013-2015: III/7/e; SF-SAC 2016-2018: III/4/f; SF-SAC 2019-2021: III/4/f; SF-SAC 2022: III/4/f Census mapping: CFDA INFO, TYPEREQUIREMENT",
                        max_length=40,
                        null=True,
                        verbose_name="Type Requirement Failure",
                    ),
                ),
            ],
            options={
                "unique_together": {("report_id", "award_seq_number")},
            },
        ),
        migrations.CreateModel(
            name="CapText",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "report_id",
                    models.CharField(
                        max_length=40,
                        verbose_name="G-FAC generated identifier. FK refers to a General",
                    ),
                ),
                (
                    "finding_ref_number",
                    models.CharField(
                        help_text="Data sources: SF-SAC 2019-2021: IV/1; SF-SAC 2022: IV/1 Census mapping: CAPTEXT, FINDINGREFNUMS",
                        max_length=100,
                        verbose_name="Audit Finding Reference Number",
                    ),
                ),
                (
                    "charts_tables",
                    models.BooleanField(
                        help_text="Census mapping: CAPTEXT, CHARTSTABLES",
                        max_length=1,
                        null=True,
                        verbose_name="Indicates whether or not the text contained charts or tables that could not be entered due to formatting restrictions",
                    ),
                ),
                (
                    "cap_text",
                    models.TextField(
                        help_text="Data sources: SF-SAC 2019-2021: IV/2; SF-SAC 2022: IV/2 Census mapping: CAPTEXT, TEXT",
                        verbose_name="Content of the Corrective Action Plan (CAP)",
                    ),
                ),
            ],
            options={
                "unique_together": {("report_id", "finding_ref_number")},
            },
        ),
    ]
