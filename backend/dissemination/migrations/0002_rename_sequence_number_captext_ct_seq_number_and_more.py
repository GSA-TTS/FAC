# Generated by Django 4.2.1 on 2023-06-26 23:57

import django.contrib.postgres.fields
from django.db import migrations, models


class Migration(migrations.Migration):
    dependencies = [
        ("dissemination", "0001_initial"),
    ]

    operations = [
        migrations.RenameField(
            model_name="captext",
            old_name="sequence_number",
            new_name="ct_seq_number",
        ),
        migrations.RenameField(
            model_name="findingtext",
            old_name="sequence_number",
            new_name="ft_seq_number",
        ),
        migrations.RenameField(
            model_name="note",
            old_name="sequence_number",
            new_name="note_seq_number",
        ),
        migrations.RemoveField(
            model_name="passthrough",
            name="audit_year",
        ),
        migrations.RemoveField(
            model_name="passthrough",
            name="dbkey",
        ),
        migrations.RemoveField(
            model_name="passthrough",
            name="is_public",
        ),
        migrations.RemoveField(
            model_name="revision",
            name="dbkey",
        ),
        migrations.RemoveField(
            model_name="revision",
            name="is_public",
        ),
        migrations.AddField(
            model_name="captext",
            name="report_id",
            field=models.CharField(
                default=-1,
                max_length=40,
                verbose_name="G-FAC generated identifier. FK refers to a Finding with finding_ref_num",
            ),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name="federalaward",
            name="report_id",
            field=models.CharField(
                default=-1,
                max_length=40,
                verbose_name="G-FAC generated identifier. FK refers to a General",
            ),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name="finding",
            name="agency_cfda",
            field=models.CharField(
                default=-1,
                help_text="Data sources: SF-SAC 1997-2000: III/6/a; SF-SAC 2001-2003: III/10/a; SF-SAC 2004-2007: III/9/a & III/9/b combined; SF-SAC 2008-2009: III/9/a & III/9/b combined; SF-SAC 2010-2012: III/9/a & III/9/b combined; SF-SAC 2013-2015: III/6/a & III/6/b combined; SF-SAC 2016-2018: II/1/a & II/1/b combined; SF-SAC 2019-2021: II/1/a & II/1/b combined; SF-SAC 2022: II/1/a & II/1/b combined Census mapping: CFDA INFO, CFDA",
                max_length=52,
                verbose_name="Federal Agency Prefix and Extension",
            ),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name="finding",
            name="award_identification",
            field=models.CharField(
                help_text="Data sources: SF-SAC 2016-2018: II/1/c; SF-SAC 2019-2021: II/1/c; SF-SAC 2022: II/1/c Census mapping: CFDA INFO, AWARDIDENTIFICATION",
                max_length=50,
                null=True,
                verbose_name="Other data used to identify the award which is not a CFDA number (e.g., program year, contract number)",
            ),
        ),
        migrations.AddField(
            model_name="finding",
            name="federal_program_name",
            field=models.CharField(
                help_text="Data sources: SF-SAC 1997-2000: III/6/b; SF-SAC 2001-2003: III/10/c; SF-SAC 2004-2007: III/9/d; SF-SAC 2008-2009: III/9/d; SF-SAC 2010-2012: III/9/e; SF-SAC 2013-2015: III/6/c; SF-SAC 2016-2018: II/1/d; SF-SAC 2019-2021: II/1/d; SF-SAC 2022: II/1/d Census mapping: CFDA INFO, FEDERALPROGRAMNAME",
                max_length=300,
                null=True,
                verbose_name="Name of Federal Program",
            ),
        ),
        migrations.AddField(
            model_name="finding",
            name="report_id",
            field=models.CharField(
                default=-1,
                max_length=40,
                verbose_name="G-FAC generated identifier. FK along with other fields - refers to Award",
            ),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name="findingtext",
            name="report_id",
            field=models.CharField(
                default=-1, max_length=40, verbose_name="G-FAC generated identifier.l"
            ),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name="general",
            name="duns",
            field=django.contrib.postgres.fields.ArrayField(
                base_field=models.CharField(
                    help_text="Data sources: SF-SAC 2004-2007: I/5/git ad; SF-SAC 2008-2009: I/4/d; SF-SAC 2010-2012: I/4/d; SF-SAC 2013-2015: I/4/d; SF-SAC 2016-2018: I/4/d; SF-SAC 2019-2021: I/4/d; SF-SAC 2022: I/4/d Census mapping: GENERAL, DUNS (AND) Data sources: SF-SAC 2004-2007: I/5/f; SF-SAC 2008-2009: I/4/f; SF-SAC 2010-2012: I/4/f; SF-SAC 2013-2015: I/4/f; SF-SAC 2016-2018: I/4/f; SF-SAC 2019-2021: I/4/f; SF-SAC 2022: I/4/f Census mapping: DUN INFO, DUNS",
                    null=True,
                    verbose_name="",
                ),
                default=[],
                size=None,
            ),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name="general",
            name="ein",
            field=models.IntegerField(
                null=True, verbose_name="Primary Employer Identification Number"
            ),
        ),
        migrations.AddField(
            model_name="general",
            name="multiple_auditors",
            field=models.BooleanField(
                null=True, verbose_name="True if the audit contains multiple auditors"
            ),
        ),
        migrations.AddField(
            model_name="general",
            name="multiple_duns",
            field=models.BooleanField(
                help_text="Data sources: SF-SAC 2004-2007: I/5/e; SF-SAC 2008-2009: I/4/e; SF-SAC 2010-2012: I/4/e; SF-SAC 2013-2015: I/4/e; SF-SAC 2016-2018: I/4/e; SF-SAC 2019-2021: I/4/e; SF-SAC 2022: I/4/e Census mapping: GENERAL, MULTIPLEDUNS",
                null=True,
                verbose_name="True if the audit contains multiple DUNS",
            ),
        ),
        migrations.AddField(
            model_name="general",
            name="multiple_ein",
            field=models.BooleanField(
                help_text="Data sources: SF-SAC 1997-2000: I/5/b; SF-SAC 2001-2003: I/5/b; SF-SAC 2004-2007: I/5/b; SF-SAC 2008-2009: I/4/b; SF-SAC 2010-2012: I/4/b; SF-SAC 2013-2015: I/4/b; SF-SAC 2016-2018: I/4/b; SF-SAC 2019-2021: I/4/b; SF-SAC 2022: I/4/b Census mapping: GENERAL, MULTIPLEEINS",
                null=True,
                verbose_name="True if the audit contains more than one EIN",
            ),
        ),
        migrations.AddField(
            model_name="general",
            name="multiple_uei",
            field=models.BooleanField(
                help_text="Data sources: SF-SAC 2022: I/4/h Census mapping: GENERAL, MULTIPLEUEIS",
                null=True,
                verbose_name="True if the audit contains more than one UEI",
            ),
        ),
        migrations.AddField(
            model_name="general",
            name="report_id",
            field=models.CharField(
                default=-1,
                max_length=40,
                unique=True,
                verbose_name="G-FAC generated identifier. ",
            ),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name="general",
            name="uei",
            field=models.CharField(
                help_text="Data sources: SF-SAC 2022: I/4/g Census mapping: GENERAL, UEI",
                null=True,
                verbose_name="",
            ),
        ),
        migrations.AddField(
            model_name="passthrough",
            name="report_id",
            field=models.CharField(
                default=-1,
                max_length=40,
                verbose_name="G-FAC generated identifier. FK refers to General",
            ),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name="revision",
            name="report_id",
            field=models.CharField(
                default=-1,
                max_length=40,
                verbose_name="G-FAC generated identifier. FK refers to General",
            ),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name="finding",
            name="finding_ref_number",
            field=models.CharField(
                help_text="Data sources: SF-SAC 2013-2015: III/7/d; SF-SAC 2016-2018: III/4/e; SF-SAC 2019-2021: III/4/e; SF-SAC 2022: III/4/e Census mapping: FINDINGS, FINDINGSREFNUMS",
                max_length=100,
                unique=True,
                verbose_name="Findings Reference Numbers",
            ),
        ),
        migrations.AlterField(
            model_name="findingtext",
            name="finding_ref_number",
            field=models.CharField(
                help_text="Data sources: SF-SAC 2019-2021: III/5/a; SF-SAC 2022: III/5/a Census mapping: FINDINGSTEXT, FINDINGREFNUMS",
                max_length=100,
                null=True,
                verbose_name="Finding Reference Number - FK",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="captext",
            unique_together={("report_id", "finding_ref_number", "ct_seq_number")},
        ),
        migrations.AlterUniqueTogether(
            name="federalaward",
            unique_together={
                (
                    "report_id",
                    "agency_cfda",
                    "award_identification",
                    "federal_program_name",
                )
            },
        ),
        migrations.AlterUniqueTogether(
            name="finding",
            unique_together={("report_id", "finding_ref_number")},
        ),
        migrations.AlterUniqueTogether(
            name="findingtext",
            unique_together={("report_id", "finding_ref_number", "ft_seq_number")},
        ),
        migrations.AlterUniqueTogether(
            name="general",
            unique_together={("report_id",)},
        ),
        migrations.AlterUniqueTogether(
            name="note",
            unique_together={("report_id", "note_seq_number")},
        ),
        migrations.RemoveField(
            model_name="captext",
            name="audit_year",
        ),
        migrations.RemoveField(
            model_name="captext",
            name="dbkey",
        ),
        migrations.RemoveField(
            model_name="captext",
            name="is_public",
        ),
        migrations.RemoveField(
            model_name="federalaward",
            name="agency_prior_findings_list",
        ),
        migrations.RemoveField(
            model_name="federalaward",
            name="audit_id",
        ),
        migrations.RemoveField(
            model_name="federalaward",
            name="audit_year",
        ),
        migrations.RemoveField(
            model_name="federalaward",
            name="auditor_ein",
        ),
        migrations.RemoveField(
            model_name="federalaward",
            name="dbkey",
        ),
        migrations.RemoveField(
            model_name="federalaward",
            name="finding_ref_numbers",
        ),
        migrations.RemoveField(
            model_name="federalaward",
            name="is_public",
        ),
        migrations.RemoveField(
            model_name="finding",
            name="audit_findings_id",
        ),
        migrations.RemoveField(
            model_name="finding",
            name="audit_id",
        ),
        migrations.RemoveField(
            model_name="finding",
            name="audit_year",
        ),
        migrations.RemoveField(
            model_name="finding",
            name="dbkey",
        ),
        migrations.RemoveField(
            model_name="finding",
            name="is_public",
        ),
        migrations.RemoveField(
            model_name="findingtext",
            name="audit_year",
        ),
        migrations.RemoveField(
            model_name="findingtext",
            name="dbkey",
        ),
        migrations.RemoveField(
            model_name="findingtext",
            name="is_public",
        ),
        migrations.RemoveField(
            model_name="general",
            name="duns_list",
        ),
        migrations.RemoveField(
            model_name="general",
            name="uei_list",
        ),
        migrations.RemoveField(
            model_name="note",
            name="audit_year",
        ),
        migrations.RemoveField(
            model_name="note",
            name="dbkey",
        ),
        migrations.RemoveField(
            model_name="note",
            name="fac_id",
        ),
        migrations.RemoveField(
            model_name="note",
            name="is_public",
        ),
    ]
