# Generated by Django 4.2.3 on 2023-09-06 20:59

from django.db import migrations, models


class Migration(migrations.Migration):
    dependencies = [
        ("dissemination", "0026_additionaluei_alter_captext_unique_together_and_more"),
    ]

    operations = [
        migrations.CreateModel(
            name="CensusCfda19",
            fields=[
                (
                    "index",
                    models.BigIntegerField(
                        blank=True, primary_key=True, serialize=False
                    ),
                ),
                (
                    "audityear",
                    models.TextField(blank=True, db_column="AUDITYEAR", null=True),
                ),
                ("dbkey", models.TextField(blank=True, db_column="DBKEY", null=True)),
                ("ein", models.TextField(blank=True, db_column="EIN", null=True)),
                ("cfda", models.TextField(blank=True, db_column="CFDA", null=True)),
                (
                    "awardidentification",
                    models.TextField(
                        blank=True, db_column="AWARDIDENTIFICATION", null=True
                    ),
                ),
                ("rd", models.TextField(blank=True, db_column="RD", null=True)),
                (
                    "federalprogramname",
                    models.TextField(
                        blank=True, db_column="FEDERALPROGRAMNAME", null=True
                    ),
                ),
                ("amount", models.TextField(blank=True, db_column="AMOUNT", null=True)),
                (
                    "clustername",
                    models.TextField(blank=True, db_column="CLUSTERNAME", null=True),
                ),
                (
                    "stateclustername",
                    models.TextField(
                        blank=True, db_column="STATECLUSTERNAME", null=True
                    ),
                ),
                (
                    "programtotal",
                    models.TextField(blank=True, db_column="PROGRAMTOTAL", null=True),
                ),
                (
                    "clustertotal",
                    models.TextField(blank=True, db_column="CLUSTERTOTAL", null=True),
                ),
                ("direct", models.TextField(blank=True, db_column="DIRECT", null=True)),
                (
                    "passthroughaward",
                    models.TextField(
                        blank=True, db_column="PASSTHROUGHAWARD", null=True
                    ),
                ),
                (
                    "passthroughamount",
                    models.TextField(
                        blank=True, db_column="PASSTHROUGHAMOUNT", null=True
                    ),
                ),
                (
                    "majorprogram",
                    models.TextField(blank=True, db_column="MAJORPROGRAM", null=True),
                ),
                (
                    "typereport_mp",
                    models.TextField(blank=True, db_column="TYPEREPORT_MP", null=True),
                ),
                (
                    "typerequirement",
                    models.TextField(
                        blank=True, db_column="TYPEREQUIREMENT", null=True
                    ),
                ),
                (
                    "qcosts2",
                    models.TextField(blank=True, db_column="QCOSTS2", null=True),
                ),
                (
                    "findings",
                    models.TextField(blank=True, db_column="FINDINGS", null=True),
                ),
                (
                    "findingrefnums",
                    models.TextField(blank=True, db_column="FINDINGREFNUMS", null=True),
                ),
                ("arra", models.TextField(blank=True, db_column="ARRA", null=True)),
                ("loans", models.TextField(blank=True, db_column="LOANS", null=True)),
                (
                    "loanbalance",
                    models.TextField(blank=True, db_column="LOANBALANCE", null=True),
                ),
                (
                    "findingscount",
                    models.TextField(blank=True, db_column="FINDINGSCOUNT", null=True),
                ),
                (
                    "elecauditsid",
                    models.TextField(blank=True, db_column="ELECAUDITSID", null=True),
                ),
                (
                    "otherclustername",
                    models.TextField(
                        blank=True, db_column="OTHERCLUSTERNAME", null=True
                    ),
                ),
                (
                    "cfdaprogramname",
                    models.TextField(
                        blank=True, db_column="CFDAPROGRAMNAME", null=True
                    ),
                ),
            ],
            options={
                "db_table": "census_cfda19",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="CensusGen19",
            fields=[
                (
                    "index",
                    models.BigIntegerField(
                        blank=True, primary_key=True, serialize=False
                    ),
                ),
                (
                    "audityear",
                    models.TextField(blank=True, db_column="AUDITYEAR", null=True),
                ),
                ("dbkey", models.TextField(blank=True, db_column="DBKEY", null=True)),
                (
                    "typeofentity",
                    models.TextField(blank=True, db_column="TYPEOFENTITY", null=True),
                ),
                (
                    "fyenddate",
                    models.TextField(blank=True, db_column="FYENDDATE", null=True),
                ),
                (
                    "audittype",
                    models.TextField(blank=True, db_column="AUDITTYPE", null=True),
                ),
                (
                    "periodcovered",
                    models.TextField(blank=True, db_column="PERIODCOVERED", null=True),
                ),
                (
                    "numbermonths",
                    models.TextField(blank=True, db_column="NUMBERMONTHS", null=True),
                ),
                ("ein", models.TextField(blank=True, db_column="EIN", null=True)),
                (
                    "multipleeins",
                    models.TextField(blank=True, db_column="MULTIPLEEINS", null=True),
                ),
                (
                    "einsubcode",
                    models.TextField(blank=True, db_column="EINSUBCODE", null=True),
                ),
                ("duns", models.TextField(blank=True, db_column="DUNS", null=True)),
                (
                    "multipleduns",
                    models.TextField(blank=True, db_column="MULTIPLEDUNS", null=True),
                ),
                (
                    "auditeename",
                    models.TextField(blank=True, db_column="AUDITEENAME", null=True),
                ),
                (
                    "street1",
                    models.TextField(blank=True, db_column="STREET1", null=True),
                ),
                (
                    "street2",
                    models.TextField(blank=True, db_column="STREET2", null=True),
                ),
                ("city", models.TextField(blank=True, db_column="CITY", null=True)),
                ("state", models.TextField(blank=True, db_column="STATE", null=True)),
                (
                    "zipcode",
                    models.TextField(blank=True, db_column="ZIPCODE", null=True),
                ),
                (
                    "auditeecontact",
                    models.TextField(blank=True, db_column="AUDITEECONTACT", null=True),
                ),
                (
                    "auditeetitle",
                    models.TextField(blank=True, db_column="AUDITEETITLE", null=True),
                ),
                (
                    "auditeephone",
                    models.TextField(blank=True, db_column="AUDITEEPHONE", null=True),
                ),
                (
                    "auditeefax",
                    models.TextField(blank=True, db_column="AUDITEEFAX", null=True),
                ),
                (
                    "auditeeemail",
                    models.TextField(blank=True, db_column="AUDITEEEMAIL", null=True),
                ),
                (
                    "auditeedatesigned",
                    models.TextField(
                        blank=True, db_column="AUDITEEDATESIGNED", null=True
                    ),
                ),
                (
                    "auditeenametitle",
                    models.TextField(
                        blank=True, db_column="AUDITEENAMETITLE", null=True
                    ),
                ),
                (
                    "cpafirmname",
                    models.TextField(blank=True, db_column="CPAFIRMNAME", null=True),
                ),
                (
                    "cpastreet1",
                    models.TextField(blank=True, db_column="CPASTREET1", null=True),
                ),
                (
                    "cpastreet2",
                    models.TextField(blank=True, db_column="CPASTREET2", null=True),
                ),
                (
                    "cpacity",
                    models.TextField(blank=True, db_column="CPACITY", null=True),
                ),
                (
                    "cpastate",
                    models.TextField(blank=True, db_column="CPASTATE", null=True),
                ),
                (
                    "cpazipcode",
                    models.TextField(blank=True, db_column="CPAZIPCODE", null=True),
                ),
                (
                    "cpacontact",
                    models.TextField(blank=True, db_column="CPACONTACT", null=True),
                ),
                (
                    "cpatitle",
                    models.TextField(blank=True, db_column="CPATITLE", null=True),
                ),
                (
                    "cpaphone",
                    models.TextField(blank=True, db_column="CPAPHONE", null=True),
                ),
                ("cpafax", models.TextField(blank=True, db_column="CPAFAX", null=True)),
                (
                    "cpaemail",
                    models.TextField(blank=True, db_column="CPAEMAIL", null=True),
                ),
                (
                    "cpadatesigned",
                    models.TextField(blank=True, db_column="CPADATESIGNED", null=True),
                ),
                (
                    "cog_over",
                    models.TextField(blank=True, db_column="COG_OVER", null=True),
                ),
                (
                    "cogagency",
                    models.TextField(blank=True, db_column="COGAGENCY", null=True),
                ),
                (
                    "oversightagency",
                    models.TextField(
                        blank=True, db_column="OVERSIGHTAGENCY", null=True
                    ),
                ),
                (
                    "typereport_fs",
                    models.TextField(blank=True, db_column="TYPEREPORT_FS", null=True),
                ),
                (
                    "sp_framework",
                    models.TextField(blank=True, db_column="SP_FRAMEWORK", null=True),
                ),
                (
                    "sp_framework_required",
                    models.TextField(
                        blank=True, db_column="SP_FRAMEWORK_REQUIRED", null=True
                    ),
                ),
                (
                    "typereport_sp_framework",
                    models.TextField(
                        blank=True, db_column="TYPEREPORT_SP_FRAMEWORK", null=True
                    ),
                ),
                (
                    "goingconcern",
                    models.TextField(blank=True, db_column="GOINGCONCERN", null=True),
                ),
                (
                    "reportablecondition",
                    models.TextField(
                        blank=True, db_column="REPORTABLECONDITION", null=True
                    ),
                ),
                (
                    "materialweakness",
                    models.TextField(
                        blank=True, db_column="MATERIALWEAKNESS", null=True
                    ),
                ),
                (
                    "materialnoncompliance",
                    models.TextField(
                        blank=True, db_column="MATERIALNONCOMPLIANCE", null=True
                    ),
                ),
                (
                    "typereport_mp",
                    models.TextField(blank=True, db_column="TYPEREPORT_MP", null=True),
                ),
                (
                    "dup_reports",
                    models.TextField(blank=True, db_column="DUP_REPORTS", null=True),
                ),
                (
                    "dollarthreshold",
                    models.TextField(
                        blank=True, db_column="DOLLARTHRESHOLD", null=True
                    ),
                ),
                (
                    "lowrisk",
                    models.TextField(blank=True, db_column="LOWRISK", null=True),
                ),
                (
                    "reportablecondition_mp",
                    models.TextField(
                        blank=True, db_column="REPORTABLECONDITION_MP", null=True
                    ),
                ),
                (
                    "materialweakness_mp",
                    models.TextField(
                        blank=True, db_column="MATERIALWEAKNESS_MP", null=True
                    ),
                ),
                ("qcosts", models.TextField(blank=True, db_column="QCOSTS", null=True)),
                (
                    "cyfindings",
                    models.TextField(blank=True, db_column="CYFINDINGS", null=True),
                ),
                (
                    "pyschedule",
                    models.TextField(blank=True, db_column="PYSCHEDULE", null=True),
                ),
                (
                    "totfedexpend",
                    models.TextField(blank=True, db_column="TOTFEDEXPEND", null=True),
                ),
                (
                    "datefirewall",
                    models.TextField(blank=True, db_column="DATEFIREWALL", null=True),
                ),
                (
                    "previousdatefirewall",
                    models.TextField(
                        blank=True, db_column="PREVIOUSDATEFIREWALL", null=True
                    ),
                ),
                (
                    "reportrequired",
                    models.TextField(blank=True, db_column="REPORTREQUIRED", null=True),
                ),
                (
                    "multiple_cpas",
                    models.TextField(blank=True, db_column="MULTIPLE_CPAS", null=True),
                ),
                (
                    "auditor_ein",
                    models.TextField(blank=True, db_column="AUDITOR_EIN", null=True),
                ),
                (
                    "facaccepteddate",
                    models.TextField(
                        blank=True, db_column="FACACCEPTEDDATE", null=True
                    ),
                ),
                (
                    "cpaforeign",
                    models.TextField(blank=True, db_column="CPAFOREIGN", null=True),
                ),
                (
                    "cpacountry",
                    models.TextField(blank=True, db_column="CPACOUNTRY", null=True),
                ),
                (
                    "entity_type",
                    models.TextField(blank=True, db_column="ENTITY_TYPE", null=True),
                ),
                ("uei", models.TextField(blank=True, db_column="UEI", null=True)),
                (
                    "multipleueis",
                    models.TextField(blank=True, db_column="MULTIPLEUEIS", null=True),
                ),
            ],
            options={
                "db_table": "census_gen19",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="CensusGen22",
            fields=[
                (
                    "index",
                    models.BigIntegerField(
                        blank=True, primary_key=True, serialize=False
                    ),
                ),
                (
                    "audityear",
                    models.TextField(blank=True, db_column="AUDITYEAR", null=True),
                ),
                ("dbkey", models.TextField(blank=True, db_column="DBKEY", null=True)),
                (
                    "typeofentity",
                    models.TextField(blank=True, db_column="TYPEOFENTITY", null=True),
                ),
                (
                    "fyenddate",
                    models.TextField(blank=True, db_column="FYENDDATE", null=True),
                ),
                (
                    "audittype",
                    models.TextField(blank=True, db_column="AUDITTYPE", null=True),
                ),
                (
                    "periodcovered",
                    models.TextField(blank=True, db_column="PERIODCOVERED", null=True),
                ),
                (
                    "numbermonths",
                    models.TextField(blank=True, db_column="NUMBERMONTHS", null=True),
                ),
                ("ein", models.TextField(blank=True, db_column="EIN", null=True)),
                (
                    "multipleeins",
                    models.TextField(blank=True, db_column="MULTIPLEEINS", null=True),
                ),
                (
                    "einsubcode",
                    models.TextField(blank=True, db_column="EINSUBCODE", null=True),
                ),
                ("duns", models.TextField(blank=True, db_column="DUNS", null=True)),
                (
                    "multipleduns",
                    models.TextField(blank=True, db_column="MULTIPLEDUNS", null=True),
                ),
                (
                    "auditeename",
                    models.TextField(blank=True, db_column="AUDITEENAME", null=True),
                ),
                (
                    "street1",
                    models.TextField(blank=True, db_column="STREET1", null=True),
                ),
                (
                    "street2",
                    models.TextField(blank=True, db_column="STREET2", null=True),
                ),
                ("city", models.TextField(blank=True, db_column="CITY", null=True)),
                ("state", models.TextField(blank=True, db_column="STATE", null=True)),
                (
                    "zipcode",
                    models.TextField(blank=True, db_column="ZIPCODE", null=True),
                ),
                (
                    "auditeecontact",
                    models.TextField(blank=True, db_column="AUDITEECONTACT", null=True),
                ),
                (
                    "auditeetitle",
                    models.TextField(blank=True, db_column="AUDITEETITLE", null=True),
                ),
                (
                    "auditeephone",
                    models.TextField(blank=True, db_column="AUDITEEPHONE", null=True),
                ),
                (
                    "auditeefax",
                    models.TextField(blank=True, db_column="AUDITEEFAX", null=True),
                ),
                (
                    "auditeeemail",
                    models.TextField(blank=True, db_column="AUDITEEEMAIL", null=True),
                ),
                (
                    "auditeedatesigned",
                    models.TextField(
                        blank=True, db_column="AUDITEEDATESIGNED", null=True
                    ),
                ),
                (
                    "auditeenametitle",
                    models.TextField(
                        blank=True, db_column="AUDITEENAMETITLE", null=True
                    ),
                ),
                (
                    "cpafirmname",
                    models.TextField(blank=True, db_column="CPAFIRMNAME", null=True),
                ),
                (
                    "cpastreet1",
                    models.TextField(blank=True, db_column="CPASTREET1", null=True),
                ),
                (
                    "cpastreet2",
                    models.TextField(blank=True, db_column="CPASTREET2", null=True),
                ),
                (
                    "cpacity",
                    models.TextField(blank=True, db_column="CPACITY", null=True),
                ),
                (
                    "cpastate",
                    models.TextField(blank=True, db_column="CPASTATE", null=True),
                ),
                (
                    "cpazipcode",
                    models.TextField(blank=True, db_column="CPAZIPCODE", null=True),
                ),
                (
                    "cpacontact",
                    models.TextField(blank=True, db_column="CPACONTACT", null=True),
                ),
                (
                    "cpatitle",
                    models.TextField(blank=True, db_column="CPATITLE", null=True),
                ),
                (
                    "cpaphone",
                    models.TextField(blank=True, db_column="CPAPHONE", null=True),
                ),
                ("cpafax", models.TextField(blank=True, db_column="CPAFAX", null=True)),
                (
                    "cpaemail",
                    models.TextField(blank=True, db_column="CPAEMAIL", null=True),
                ),
                (
                    "cpadatesigned",
                    models.TextField(blank=True, db_column="CPADATESIGNED", null=True),
                ),
                (
                    "cog_over",
                    models.TextField(blank=True, db_column="COG_OVER", null=True),
                ),
                (
                    "cogagency",
                    models.TextField(blank=True, db_column="COGAGENCY", null=True),
                ),
                (
                    "oversightagency",
                    models.TextField(
                        blank=True, db_column="OVERSIGHTAGENCY", null=True
                    ),
                ),
                (
                    "typereport_fs",
                    models.TextField(blank=True, db_column="TYPEREPORT_FS", null=True),
                ),
                (
                    "sp_framework",
                    models.TextField(blank=True, db_column="SP_FRAMEWORK", null=True),
                ),
                (
                    "sp_framework_required",
                    models.TextField(
                        blank=True, db_column="SP_FRAMEWORK_REQUIRED", null=True
                    ),
                ),
                (
                    "typereport_sp_framework",
                    models.TextField(
                        blank=True, db_column="TYPEREPORT_SP_FRAMEWORK", null=True
                    ),
                ),
                (
                    "goingconcern",
                    models.TextField(blank=True, db_column="GOINGCONCERN", null=True),
                ),
                (
                    "reportablecondition",
                    models.TextField(
                        blank=True, db_column="REPORTABLECONDITION", null=True
                    ),
                ),
                (
                    "materialweakness",
                    models.TextField(
                        blank=True, db_column="MATERIALWEAKNESS", null=True
                    ),
                ),
                (
                    "materialnoncompliance",
                    models.TextField(
                        blank=True, db_column="MATERIALNONCOMPLIANCE", null=True
                    ),
                ),
                (
                    "typereport_mp",
                    models.TextField(blank=True, db_column="TYPEREPORT_MP", null=True),
                ),
                (
                    "dup_reports",
                    models.TextField(blank=True, db_column="DUP_REPORTS", null=True),
                ),
                (
                    "dollarthreshold",
                    models.TextField(
                        blank=True, db_column="DOLLARTHRESHOLD", null=True
                    ),
                ),
                (
                    "lowrisk",
                    models.TextField(blank=True, db_column="LOWRISK", null=True),
                ),
                (
                    "reportablecondition_mp",
                    models.TextField(
                        blank=True, db_column="REPORTABLECONDITION_MP", null=True
                    ),
                ),
                (
                    "materialweakness_mp",
                    models.TextField(
                        blank=True, db_column="MATERIALWEAKNESS_MP", null=True
                    ),
                ),
                ("qcosts", models.TextField(blank=True, db_column="QCOSTS", null=True)),
                (
                    "cyfindings",
                    models.TextField(blank=True, db_column="CYFINDINGS", null=True),
                ),
                (
                    "pyschedule",
                    models.TextField(blank=True, db_column="PYSCHEDULE", null=True),
                ),
                (
                    "totfedexpend",
                    models.TextField(blank=True, db_column="TOTFEDEXPEND", null=True),
                ),
                (
                    "datefirewall",
                    models.TextField(blank=True, db_column="DATEFIREWALL", null=True),
                ),
                (
                    "previousdatefirewall",
                    models.TextField(
                        blank=True, db_column="PREVIOUSDATEFIREWALL", null=True
                    ),
                ),
                (
                    "reportrequired",
                    models.TextField(blank=True, db_column="REPORTREQUIRED", null=True),
                ),
                (
                    "multiple_cpas",
                    models.TextField(blank=True, db_column="MULTIPLE_CPAS", null=True),
                ),
                (
                    "auditor_ein",
                    models.TextField(blank=True, db_column="AUDITOR_EIN", null=True),
                ),
                (
                    "facaccepteddate",
                    models.TextField(
                        blank=True, db_column="FACACCEPTEDDATE", null=True
                    ),
                ),
                (
                    "cpaforeign",
                    models.TextField(blank=True, db_column="CPAFOREIGN", null=True),
                ),
                (
                    "cpacountry",
                    models.TextField(blank=True, db_column="CPACOUNTRY", null=True),
                ),
                (
                    "entity_type",
                    models.TextField(blank=True, db_column="ENTITY_TYPE", null=True),
                ),
                ("uei", models.TextField(blank=True, db_column="UEI", null=True)),
                (
                    "multipleueis",
                    models.TextField(blank=True, db_column="MULTIPLEUEIS", null=True),
                ),
            ],
            options={
                "db_table": "census_gen22",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="cognizant_agencies_2021_2025",
            fields=[
                (
                    "index",
                    models.BigIntegerField(
                        blank=True, primary_key=True, serialize=False
                    ),
                ),
                ("dbkey", models.TextField(blank=True, db_column="DBKEY", null=True)),
                ("ein", models.TextField(blank=True, db_column="EIN", null=True)),
                ("uei", models.TextField(blank=True, db_column="UEI", null=True)),
                (
                    "auditeename",
                    models.TextField(blank=True, db_column="AUDITEENAME", null=True),
                ),
                (
                    "cogagency",
                    models.TextField(blank=True, db_column="COGAGENCY", null=True),
                ),
                (
                    "date_added",
                    models.TextField(blank=True, db_column="DATE_ADDED", null=True),
                ),
            ],
            options={
                "db_table": "cognizant_agencies_21_25",
                "managed": False,
            },
        ),
    ]
