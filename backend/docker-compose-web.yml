---
version: "3.7"

services:
  db:
    image: "postgres:15"
    environment:
      POSTGRES_HOST_AUTH_METHOD: "trust"
    volumes:
      - postgres-data:/var/lib/postgresql/data/
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d postgres -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 10

  web:
    image: ghcr.io/gsa-tts/fac/web-container:latest
    command: /src/run.sh
    depends_on:
      db:
        condition: service_healthy
      minio:
        condition: service_started
      clamav-rest:
        condition: service_started
    environment:
      DATABASE_URL: postgres://postgres@db/postgres
      POSTGREST_URL: http://api:3000
      DJANGO_DEBUG: true
      SAM_API_KEY: ${SAM_API_KEY}
      DJANGO_BASE_URL: http://localhost:8000
      DJANGO_SECRET_LOGIN_KEY: ${DJANGO_SECRET_LOGIN_KEY}
      LOGIN_CLIENT_ID: ${LOGIN_CLIENT_ID}
      ENV: ${ENV}
      SECRET_KEY: ${SECRET_KEY}
      ALLOWED_HOSTS: 0.0.0.0 127.0.0.1 localhost
      AV_SCAN_URL: http://clamav-rest:9000/scan
      DISABLE_AUTH: ${DISABLE_AUTH:-False}
      PGRST_JWT_SECRET: ${PGRST_JWT_SECRET:-32_chars_fallback_secret_testing} # Fallback value for testing environments
    env_file:
      - ".env"
    ports:
      - "8000:8000"
    volumes:
      - .:/src
      - /src/node_modules
      - /src/staticfiles
  clamav-rest:
    image: ghcr.io/gsa-tts/fac/clamav:latest
    environment:
      MAX_FILE_SIZE: 30M
      SIGNATURE_CHECKS: 1
    ports:
      - "9000:9000"
  minio:
    container_name: "minio"
    image: minio/minio
    command: server /tmp/minio --console-address ":9002"
    ports:
      - "9001:9000"
      - "9002:9002"
    volumes:
      - "minio-vol:/tmp/minio"
  api:
    image: ghcr.io/gsa-tts/fac/postgrest:latest
    ports:
      - "3000:3000"
    expose:
      - "3000"
    environment:
      PGRST_DB_URI: postgres://postgres@db:5432/postgres
      PGRST_OPENAPI_SERVER_PROXY_URI: http://127.0.0.1:3000
      PGRST_DB_ANON_ROLE: anon
      # See https://postgrest.org/en/stable/references/api/schemas.html#multiple-schemas for multiple schemas
      PGRST_DB_SCHEMAS: "api_v1_0_3, admin_api_v1_0_0"
      PGRST_JWT_SECRET: ${PGRST_JWT_SECRET:-32_chars_fallback_secret_testing} # Fallback value for testing environments
    depends_on:
      db:
        condition: service_healthy

volumes:
  postgres-data:
  minio-vol:
