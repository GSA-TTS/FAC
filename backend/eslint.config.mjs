import pluginJs from '@eslint/js';
import pluginCypress from 'eslint-plugin-cypress/flat';
import eslintConfigPrettier from 'eslint-config-prettier';
import babelParser from '@babel/eslint-parser';

// Exported rules included later will override rules included earlier.
// As in, the Cypress ruleset will override those from Prettier, which overrides those from the eslint recommended.
export default [
  pluginJs.configs.recommended,
  pluginCypress.configs.recommended,
  eslintConfigPrettier,
  {
    rules: {
      // Cypress plugin rule options defined at https://github.com/cypress-io/eslint-plugin-cypress/tree/master/docs/rules
      'cypress/unsafe-to-chain-command': 'error',
    },
  },
  {
    languageOptions: {
      // ESLint's parser only officially supports the latest final ECMAScript standard.
      // To validate fun and exciting features such as `?.`, we use an outside parser like Babel.
      parser: babelParser,
      parserOptions: {
        requireConfigFile: false,
        babelOptions: {
          babelrc: false,
          configFile: false,
        },
      },
    },
  },
  {
    ignores: [
      'static/compiled/*', // Generated by ESBuild
      'staticfiles/*', // Generated by Django's collectstatic
      'node_modules/*', // Generated by NPM
    ],
  },
];
