# Deployment

Configuration management and deployment for every FAC.gov component follows the pattern described unless otherwise specified.

Figure 10-1 Deployment Diagram
![data.gov typical deployment interactions](../out/generic/deployment/data.gov%20typical%20deployment%20interactions.svg)

```plantuml
@startuml
!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Deployment.puml

LAYOUT_WITH_LEGEND()
title FAC.gov Application deployment interactions

note as EncryptionNote
All connections depicted are encrypted with TLS 1.2 unless otherwise noted.
end note

Deployment_Node(aws, "AWS GovCloud", "Amazon Web Services Region") {
    Deployment_Node(aws_alb, "Public-facing TLS termination", "AWS ALB") {
        Deployment_Node(cloudgov, "cloud.gov", "Cloud Foundry PaaS") {
            Deployment_Node(cloudgov_router, "cloud.gov router", "Cloud Foundry service") {
                Boundary(cloudgov_endpoints, "cloud.gov endpoints") {
                    System_Ext(cloudgov_logdrain, "logs.fr.cloud.gov", "ELK")
                    System_Ext(cloudgov_controller, "cloud.gov controller", "Cloud Foundry orchestration")
                    System_Ext(cloudgov_dashboard, "cloud.gov dashboard", "Cloud Foundry web UI")
                    System_Ext(cloudgov_sshproxy, "cloud.gov SSH proxy", "Cloud Foundry application inspection")
                    System_Ext(cloudgov_uaa, "cloud.gov authentication", "Cloud Foundry service")
                }
                Boundary(atob, "ATO boundary") {
                    Deployment_Node(organization, "FAC.gov organization") {
                        Deployment_Node(space, "FAC.gov space") {
                            System(app, "application", "FAC.gov component")
                            ContainerDb(cloudgov_services, "cloud.gov data services", "AWS RDS", "Stores persistent data for apps")
                            ContainerDb(cloudgov_services, "cloud.gov data services", "AWS S3 Public", "Stores PDF Blobs")
                            ContainerDb(cloudgov_services, "cloud.gov data services", "AWS S3 Private", "Stores PDF Blobs")
                        }
                    }
                }
            }
        }
    }
}

' Application output (not critical here, so commented out)
' Rel(app, cloudgov_services, "reads/writes data", "data protocols")
' Rel(app, cloudgov_logdrain, "logs to", "stdout/stderr")

' cloud.gov internals
Rel(cloudgov_dashboard, cloudgov_controller, "manipulates", "https (443)")
Lay_D(cloudgov_dashboard, cloudgov_controller) 
Rel(cloudgov_dashboard, cloudgov_uaa, "authenticates", "https (443)")
Rel(cloudgov_controller, cloudgov_uaa, "authenticates", "https (443)")
Rel(cloudgov_logdrain, cloudgov_uaa, "authenticates", "https (443)")
Rel(cloudgov_sshproxy, cloudgov_uaa, "authenticates", "https (443)")
Rel(cloudgov_sshproxy, app, "creates shell")
Rel(cloudgov_controller, space, "provisions/inspects/operates apps")
Rel(cloudgov_controller, cloudgov_services, "provisions/inspects services")

Person(team, "FAC.gov team member")
Deployment_Node(computer, "Computing Device", "MS Windows, OS X, or Linux"){
    System(browser, "Web Browser", "any modern version")
    System(git_cli, "git CLI", "local version control command")
    System(cf_cli, "cf CLI", "local Cloud Foundry command")
}
Rel(team, browser, "uses")
Rel(team, cf_cli, "uses")
Rel(team, git_cli, "uses")

Boundary(gsa_saas, "GSA-authorized SaaS") { 
    
    Boundary(deploymentservices, "Deployment services") {
        System_Ext(github_Actions, "GitHub Actions", "Continuous Integration Service")
        Deployment_Node(github, "GitHub", "CI/CD Pipeline"){
            System(github_repo, "GSA/FAC", "Code repository")
        }
    }
    System_Ext(dap, "DAP", "Web analytics SaaS")
    System_Ext(newrelic, "New Relic", "Monitoring SaaS")
    System_Ext(secureauth, "GSA SecureAuth", "SAML Identity Provider")
}
Rel_(cloudgov_uaa, secureauth, "proxies authentication requests", "SAML/https (443)", "..>")


'Team interactions
Rel_Back(team, newrelic, "reports problems", "email")
Rel(browser, dap, "reviews reports", "https (443)")
Rel(browser, cloudgov_logdrain, "reviews logs", "https (443)")
'Lay_D(app, cloudgov_logdrain)
Rel(browser, github_repo, "makes pull-request, approves PRs", "https (443)")
Rel(git_cli, github_repo, "commits code", "ssh (22)")
Rel(cf_cli, cloudgov_controller, "interacts with cloud.gov API", "https (443)")
Rel(cf_cli, cloudgov_sshproxy, "establishes session", "ssh (22)")
Rel(browser, cloudgov_dashboard, "interacts with cloud.gov dashboard", "https (443)")
Rel(team, ggroup, "provides assistance", "email")
Rel(team, secureauth, "authenticates", "https (443)")

' Deployment automation
Rel_Up(github_Actions, github_repo, "Commit hook notifies GitHub Action to run CI/CD Pipeline", "GitHub API")
Rel(github_repo, cloudgov_controller, "pushes code, invokes tasks", "https (443)")

' Non-functional, just helps with layout'
'Lay_R(cloudgov_endpoints, atob)  

@enduml
```
